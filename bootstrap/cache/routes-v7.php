<?php

/*
|--------------------------------------------------------------------------
| Load The Cached Routes
|--------------------------------------------------------------------------
|
| Here we will decode and unserialize the RouteCollection instance that
| holds all of the route information for an application. This allows
| us to instantaneously load the entire route map into the router.
|
*/

app('router')->setCompiledRoutes(
    array (
  'compiled' => 
  array (
    0 => false,
    1 => 
    array (
      '/pesapal-callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pesapal-callback',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pesapal-ipn' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pesapal-ipn',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_debugbar/open' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.openhandler',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_debugbar/assets/stylesheets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.assets.css',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_debugbar/assets/javascript' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.assets.js',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/wingu/v2/api' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'scribe',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/wingu/v2/api.postman' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'scribe.postman',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/wingu/v2/api.openapi' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'scribe.openapi',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/upload-file' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.upload-file',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::z2SaceRMZY2E8ZZ5',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js.map' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::zXkCivBQrCUodhYs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::HGPUSD7koRhZ7z43',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
            'POST' => 2,
            'PUT' => 3,
            'PATCH' => 4,
            'DELETE' => 5,
            'OPTIONS' => 6,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust/permissions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.permissions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.permissions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust/permissions/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.permissions.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust/roles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust/roles/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laratrust/roles-assignment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles-assignment.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/hrm/recruitment/job' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::Z2xwIeHPJPwurgjk',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'home.page',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::pPhbFdMDrWiYGsY8',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/logout' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'logout',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::f3TDHeBFch6gjd8J',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/register' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'register',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::0HlWIofTzSxKv1Fc',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/reset' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.request',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'password.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/email' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.email',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/password/confirm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::lznw6LDjXaPKv9wh',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.notice',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/resend' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.resend',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/signup/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'signup',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/signup' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'signup.page',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.ajax.product.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/comments/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/customer/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post-supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/supplier/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/supplier/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/supplier/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.express.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.post.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.sample.download',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/inventory/outlet/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.outlet.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/images/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/control' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.control',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/post/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/lpo/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.ajax.product.stock.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/stock/attach/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.attach',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/brand' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/brand/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/tags/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/items/attributes/values/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.express.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/expense/category/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.express.expense.category.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.received',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/paymentsfile/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.receivedfile.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/payments/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoices' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/payment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/due/invoices' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.due',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/invoice/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/create/test' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.test',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/recurring/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/invoice/recurring/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/salesorders/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/salesorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/quotes/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/purchaseorders/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/attachment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/attachment/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/apply/credit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.apply.credit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/creditnote/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/invoice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/quote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/creditnote' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/taxes/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/taxes/express' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/taxes/express/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/lpo' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.express',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/access/bank/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.bank.account.access',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/income/category/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::SFZJScupksL6lA1d',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/income/category/get' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.express.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/payment/modes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/settings/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/payment/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/express/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/reports' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/account-statement' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/account-statement/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.process',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/balancesheet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.balancesheet',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/item' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/sales/salesperson' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/receivables/customerbalances' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/receivables/aging' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.aging',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/profilandloss' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.profitandloss',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/expensesummary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.expensesummary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/incomesummary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.incomesummary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/summary/extract' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.summary.extract',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/valuation/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.valuation.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/valuation/summary/extract' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.valuation.summary.extract',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/report/inventory/product-sale/summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.sale.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fee/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.items.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/get/fee/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.items',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fee/items/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.items.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fees/statements' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.statements.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/general/fee/statement' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.general.statements',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fee/structures' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fee/structures/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/finance/fee/structures/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/company/structure/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.company.structure.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/institution-information-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institutioninformation.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/experience/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/allocation/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/family-information-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/file-post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/employee/deductions/allocate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions.allocate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/recruitment/job-openings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/recruitment/job-openings/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/recruitment/job-openings/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/balance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/calendar' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.calendar',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/apply' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/apply/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/my-leave-list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/holiday' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.holiday',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/holiday/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.holiday.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/workdays' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.settings.workdays',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/leave/type' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.type',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/people' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payrolls' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/mpesa/payment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.mpesa.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/process/run' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.run',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.payday',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.payday.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/approval' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.approval',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/approval/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.approval.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/deduction/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/payroll/settings/benefits/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/calendar' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.calendar',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/positions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/positions/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/departments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/organization/branches/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/announcements' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.announcements.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/exit-details' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/exit-details/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/company-policy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/company-policy/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/myTravels' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.my',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/travel/expenses/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/events' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/events/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/hrm/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/canvas' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.canvas',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/status' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/status/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/sources' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/lead/sources/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/tasks/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/leads/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/inbox' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.inbox',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/sent' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.sent',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/mail/compose' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.compose',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/comments/post' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/mail/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.mail.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/documents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/calllog/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/customer/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.sent',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms/send/single' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.send.single',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/sms/send/bulk' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.sms.send.bulk',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/posts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/posts/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/social/social/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.social.post.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/account/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/medium/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/marketing/channel/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/shortener' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.shortener',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/store/url' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deals' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deals/grid' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.grid',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deal/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deal/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/deal/stage/change' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.stage.change',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/stages/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/pipeline/stages/position' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'stage_position_update',
          ),
          1 => NULL,
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_status' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.status.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_source' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.source.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/crm/reports/leads_by_industry' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.industry.filter',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'jobs.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/discussions/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.discussions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/tasks/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/tasks/group/change' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.group.change',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/tasks' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.all',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/tasks/all/incomplete/t' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.all.incomplete',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/task/group' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.group.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/task/group/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.group.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/comment/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.comment.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/my-tasks' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.mytask.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/tickets/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/tickets/comment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.comment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/files/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.files.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/job/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/todo' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'todo.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/jobs/clients' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.clients.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/checkout/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkout.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/checkin/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkin.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/licenses/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/types' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/assets/type/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/products' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/products/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/products/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/all' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/subscription/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/subscription/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.contact.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/subscription/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/invoice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.invoice.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.settings.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sales/terminal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sell',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/cancel/order' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.cancel.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sale/apply/tax' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.tax.apply',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sale/remove/tax' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.remove.tax',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sale/checkout' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.checkout',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/save/order' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.save.order',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sale/receipt/mail' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.receipt.mail',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/sales/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'sales.history',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/products' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/inventory/outlet/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.inventory.outlet.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/images/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.images.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/stock/control' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.control',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/post/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/lpo/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.ajax.product.stock.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/stock/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.stock.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/stock/attach/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.stock.attach',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/brand' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.brand',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/brand/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.brand.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.tags',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/product/tags/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/post-supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/express/supplier/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/express/supplier/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.groups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.groups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/supplier/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pos/settings/notifications' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.settings.notification',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/post-supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/supplier/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/express/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/express/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.express.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.post.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.sample.download',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/inventory/outlet/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.inventory.outlet.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/images/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.images.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/stock/control' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.control',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/post/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/lpo/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.ajax.product.stock.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/stock/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.stock.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/stock/attach/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.stock.attach',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/ecommerce/order' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.ecommerce.orders',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/brand' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.brand',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/brand/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.brand.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.tags',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/tags/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/attributes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/attributes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/products/attributes/values/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.value.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/orders/payment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/details' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.details',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/details/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.details.save',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/contacts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.contacts',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/contacts/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.contacts.save',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/policies' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.policies',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/policies/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.policies.save',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/analytics' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.analytics',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ecommerce/settings/website/analytics/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.settings.website.analytics.save',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/dashboard/users-summary' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'app.dashboard.user.summary',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/post-customer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/import/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.import.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/customer/checkins' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.checkin.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/post-supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/supplier/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/express/items' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.express.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/express/items/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.express.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.post.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.sample.download',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/inventory/outlet/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.inventory.outlet.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/images/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.images.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/stock/control' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.control',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/post/order/stock' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.post',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/lpo/ajax/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ajax.product.stock.price',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/stock/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.stock.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/stock/attach/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.stock.attach',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/brand' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.brand',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/products/brand/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.brand.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/users' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.users.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/user/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.user.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/user/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.user.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/routes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.routes.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/routes/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.routes.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/routes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.routes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.orders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/orders/allocate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.order.create.delivery',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/delivery' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.delivery.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/warehousing' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.warehousing.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/warehousing/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.warehousing.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/warehousing/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.warehousing.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/inventory/allocated' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.inventory.allocated',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/inventory/allocate/user' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.inventory.allocate.user',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/settings/account' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.settings.account',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/settings/activity-log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.settings.activity.log',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/territories' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.territories.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/category/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/survey/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/survey/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/salesflow/survey/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/properties' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/document/upload' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.document.upload',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/store/lease' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.leases.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/units/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/units/bulk/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.bulk.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/payments/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/rental/billing/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.billing.process',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/rental/billing/search/results' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.billing.history.search.results',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/property/billing/missing/invoice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.billing.missing.invoice',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/creditnote/apply/credit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.apply.credit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/creditnote/mail/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.mail.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/marketing/listings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.lisitng',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/marketing/property/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/inquiry' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.inquiry',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/notes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenant/lease/utility/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.add.utility',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenant/lease/utility/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.update.utility',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenant/lease/terminate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.lease.terminate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/utility/billing/hold' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.hold',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/utility/bill/search' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.bill.search',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/agents' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/agents/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/agents/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/supplier' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/supplier/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/supplier/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/post-landlords' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/landlord/export' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.export',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.import.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/post/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.import',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/download/import/sample' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.download.sample.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/tenants/export' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.export',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/maintenance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.maintenance',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/maintenance/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.maintenance.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/maintenance/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.maintenance.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/maintenance/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/maintenance/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/taxes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/taxes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/taxes/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/taxes/express' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/taxes/express/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/income/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/income/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/income/category/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/income/category/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::zFH1caPDCMxIeX0u',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/income/category/get' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.express.category',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/payment/methods' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.method',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/payment/methods/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.method.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/payment/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.mode.express',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/payment/modes/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.mode.express.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/expense/category' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/expense/category/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.express.expense.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/express/expense/category/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.express.expense.category.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/utilities' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/utilities/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/propertywingu/utilities/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/eventmanager' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.manager.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/eventmanager/events' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/eventmanager/events/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/eventmanager/events/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/business/profile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/business/profile/edit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.edit',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/users/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language/translate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.translate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/settings/defaultLanguage' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.defaultLanguage',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/language/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/roles/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/account/applications' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.applications',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/account/billing' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.billing',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/payment/integrations' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/payment/integrations/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/integrations/telephony' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/integrations/telephony/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/settings/subscription' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.account.subscription',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/winguplus/apps' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'winguplus.apps',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/winguplus/apps/install' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'winguplus.apps.install',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/paypal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscriptions/paypal/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal.callback',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/application/ipay/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.application.payment',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/lab/mailchimp' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::3oZm5WuXGYHNMPMa',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/application/flutterwave/pay' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.application.flutterwave.pay',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/application/flutterwave/callback' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.application.flutterwave.callback',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ticket' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::FPghIZsAI8DgTc9p',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
    ),
    2 => 
    array (
      0 => '{^(?|/_debugbar/c(?|lockwork/([^/]++)(*:39)|ache/([^/]++)(?:/([^/]++))?(*:73))|/l(?|ivewire/(?|message/([^/]++)(*:113)|preview\\-file/([^/]++)(*:143))|aratrust/(?|permissions/([^/]++)(?|/edit(*:192)|(*:200))|roles(?|/([^/]++)(?|(*:229)|/edit(*:242)|(*:250))|\\-assignment/([^/]++)(?|/edit(*:288)|(*:296)))))|/a(?|pi/hrm/recruitment/job/([^/]++)(?|(*:347)|/([^/]++)(*:364)|(*:372))|ssets/(?|([^/]++)/(?|edit(*:406)|update(*:420)|view(*:432)|finance(*:447)|delete(*:461))|retrive/model/([^/]++)(*:492)|([^/]++)/(?|vehicle(*:519)|remove\\-image(*:540)|maintenance(?|s(*:563)|/(?|create(*:581)|store(*:594)|([^/]++)/(?|edit(*:618)|update(*:632)|delete(*:646))))|files(*:662))|files/([^/]++)/(?|save(*:693)|delete(*:707))|([^/]++)/(?|events(*:734)|checkout\\-checkin(*:759))|check(?|out/([^/]++)/events/update(*:802)|in/([^/]++)/events/update(*:835))|([^/]++)/(?|checkout\\-checkin/([^/]++)/delete(*:889)|repair(?|s(*:907)|/(?|store(*:924)|([^/]++)/(?|update(*:950)|delete(*:964))))|l(?|ease(?|(*:986)|/events/store(*:1007))|ocation(*:1024))|other/(?|missing(*:1050)|d(?|ispose(*:1069)|onate(*:1083))|sell(*:1097))|missing/asset/store(*:1126)|d(?|ispose/asset/store(*:1157)|onate/asset/store(*:1183))|sell/asset/store(*:1209))|licenses/([^/]++)/(?|edit(*:1244)|update(*:1259)|view(*:1272)|delete(*:1287)|maintenance(?|s(*:1311)|/(?|create(*:1330)|store(*:1344)|([^/]++)/(?|edit(*:1369)|update(*:1384)|delete(*:1399)))))|type/([^/]++)/(?|edit(*:1433)|update(*:1448)|delete(*:1463))))|/p(?|assword/reset/([^/]++)(*:1502)|os/(?|c(?|art/(?|([^/]++)/update(*:1543)|item/([^/]++)/remove(*:1572))|omplete/payment/([^/]++)/([^/]++)(*:1615)|ustomer/([^/]++)/(?|edit(*:1648)|update(*:1663)|show(*:1676)|delete(*:1691)))|s(?|ale/([^/]++)/(?|details(*:1729)|receipt/print(*:1751))|tock/([^/]++)/mail(*:1779)|upplier/(?|([^/]++)/(?|edit(*:1815)|update(*:1830)|show(*:1843)|delete(*:1858)|trash(*:1872))|category/([^/]++)/(?|edit(*:1907)|update(*:1922)|delete(*:1937))|export/([^/]++)(*:1962))|ettings/notifications/([^/]++)/update(*:2009))|history/([^/]++)/details(*:2043)|pr(?|int/receipt/([^/]++)(*:2077)|oduct(?|/(?|([^/]++)/(?|edit(*:2114)|update(*:2129)|de(?|tails(*:2148)|stroy(*:2162)))|inventory/([^/]++)/edit(*:2196)|([^/]++)/inventory/([^/]++)/update(*:2239)|inventory/settings/([^/]++)/update(*:2282)|([^/]++)/inventory/outle/([^/]++)/link/delete(*:2336)|images/([^/]++)/(?|edit(*:2368)|update(*:2383))|([^/]++)/(?|images/([^/]++)/delete(*:2427)|settings(?|(*:2447)|/update(*:2463)))|category/([^/]++)/(?|edit(*:2499)|destroy(*:2515))|brand/([^/]++)/(?|edit(*:2547)|destroy(*:2563))|tags/([^/]++)/(?|edit(*:2594)|destroy(*:2610)))|s/([^/]++)/price(?|(*:2640)|/update(*:2656))|\\.(?|category/([^/]++)/update(*:2695)|brand/([^/]++)/update(*:2725)|tags/([^/]++)/update(*:2754))))|make/payment/([^/]++)/([^/]++)(*:2796)|order/(?|([^/]++)/receipt(*:2830)|stock/([^/]++)/(?|show(*:2861)|edit(*:2874)|update(*:2889)|p(?|df(*:2904)|rint(*:2917))|delivered(*:2936)))|delete\\-supplier\\-person/([^/]++)(*:2980))|ropertywingu/(?|property/(?|([^/]++)/(?|edit(*:3034)|update(*:3049)|de(?|tails(*:3068)|lete(*:3081))|remove/image(*:3103)|information(?|(*:3126)|/update(*:3142)))|units/([^/]++)/(?|vacant(*:3177)|occupied(*:3194))|([^/]++)/tenants(*:3220)|tenants/([^/]++)/([^/]++)/show(*:3259)|([^/]++)/(?|tenant/contactperson(*:3300)|leases(*:3315)|add/leases(*:3334)|units(?|(*:3351)|/(?|add(*:3367)|([^/]++)/edit(*:3389))))|units/([^/]++)/up(?|load_document(*:3434)|date(*:3447))|([^/]++)/(?|units/(?|([^/]++)/delete(*:3493)|bulk(*:3506))|invoices(?|(*:3527)|/(?|create(*:3546)|store(*:3560)|([^/]++)/(?|de(?|tails(*:3591)|lete(*:3604))|leases(*:3620)|payments(*:3637))|bulk(?|(*:3654)|/store(*:3669))|([^/]++)/print(*:3693)))|rental/([^/]++)/(?|edit/invoices(*:3736)|update/invoices(*:3760))|payments(?|(*:3781)|/(?|create(*:3800)|([^/]++)/edit(*:3822)))))|([^/]++)/payments/([^/]++)/update(*:3868)|property/([^/]++)/payments/([^/]++)/show(*:3917)|retrive/([^/]++)/invoice/([^/]++)(*:3959)|([^/]++)/payments/(?|file/([^/]++)/([^/]++)/delete(*:4018)|([^/]++)/delete(*:4042))|property/([^/]++)/utility(?|(*:4080)|/create(*:4096))|([^/]++)/prepare/utility(*:4130)|property/([^/]++)/prepare/([^/]++)/utility/bill/([^/]++)/([^/]++)(*:4204)|([^/]++)/utility/store(*:4235)|property/([^/]++)/([^/]++)/edit/utility(*:4283)|([^/]++)/([^/]++)/(?|calculate/utility/consumption(*:4342)|update/utility/consumption(*:4377))|p(?|roperty/([^/]++)/(?|utility/(?|([^/]++)/(?|de(?|tails(*:4444)|lete(*:4457))|leases(*:4473)|payments(*:4490)|compose/mail(*:4511))|compose/send(*:4533))|documents(*:4552)|gallery(*:4568))|ayment/([^/]++)/integration(?|(*:4608)|/([^/]++)/delete(*:4633)|(*:4642)))|settings/([^/]++)/(?|invoice(?|(*:4684)|/(?|update(*:4703)|creditnote(*:4722)))|creditnote(*:4743))|rental/([^/]++)/billing/(?|([^/]++)/([^/]++)/([^/]++)/history(*:4814)|history(*:4830))|([^/]++)/(?|i(?|ntegration/([^/]++)/(?|mpesa(?|api(?|(*:4893)|/update(*:4909))|till(?|(*:4926)|/update(*:4942))|paybill(?|(*:4962)|/update(*:4978)))|bank(?|1(?|(*:5000)|/update(*:5016))|2(?|(*:5030)|/update(*:5046))|3(?|(*:5060)|/update(*:5076))|4(?|(*:5090)|/update(*:5106))|5(?|(*:5120)|/update(*:5136))))|mages(?|(*:5156)|/(?|upload(*:5175)|([^/]++)/delete(*:5199))))|documents/(?|upload(*:5230)|([^/]++)/(?|update(*:5257)|delete(*:5272)))|expenses(?|(*:5294)|/(?|create(*:5313)|store(*:5327)|([^/]++)/(?|edit(*:5352)|update(*:5367)|file/([^/]++)/delete(*:5396)|delete(*:5411))))|creditnote(?|(*:5436)|/(?|create(*:5455)|store(*:5469)|([^/]++)/(?|edit(*:5494)|update(*:5509)|delete(*:5524)|show(*:5537)|p(?|df(*:5552)|rint(*:5565))|mail(*:5579))))|report(?|s(?|(*:5604)|/(?|profitandloss(*:5630)|expensesummary(*:5653)|incomesummary(*:5675)))|/(?|profilandloss/generate/([^/]++)/([^/]++)(*:5730)|expensesummary/generate/([^/]++)/([^/]++)(*:5780)|incomesummary/generate/([^/]++)/([^/]++)(*:5829))))|p(?|roperty/([^/]++)/list(*:5866)|ayment/methods/([^/]++)/(?|update(*:5908)|delete(*:5923)))|ma(?|rketing/property/([^/]++)/(?|edit(*:5972)|details(*:5988)|([^/]++)/cancel(*:6012)|image/([^/]++)/(?|delete(*:6045)|cover(*:6059))|delete(*:6075))|intenance/(?|([^/]++)/edit(*:6111)|property/units/(?|([^/]++)(*:6146)|tenant/([^/]++)(*:6170))|get/category/([^/]++)(*:6201)|category/([^/]++)/(?|edit(*:6235)|update(*:6250)|delete(*:6265))))|delete\\-vendor\\-person/([^/]++)(*:6308)|t(?|enant(?|s/(?|([^/]++)/(?|trash(*:6351)|([^/]++)/notes(*:6374))|notes/([^/]++)/update(*:6405)|([^/]++)/(?|notes/delete(*:6438)|([^/]++)/invoices(*:6464)|statement(*:6482)|([^/]++)/units(*:6505)|edit(*:6518)|update(*:6533)|delete(*:6548)))|/(?|([^/]++)/([^/]++)/(?|lease(*:6589)|([^/]++)/lease/details(*:6620)|edit/([^/]++)/lease(*:6648))|update/([^/]++)/lease(*:6679)|lease/([^/]++)/(?|delete(*:6712)|utility/([^/]++)/delete(*:6744))))|axes/([^/]++)/(?|edit(*:6777)|delete(*:6792)))|utilit(?|y/(?|([^/]++)/(?|billing(*:6836)|readings(*:6853))|bill/readings(*:6876)|([^/]++)/billing/([^/]++)/history(*:6918)|billing/([^/]++)/update(*:6950))|ies/([^/]++)/(?|edit(*:6980)|update(*:6995)|delete(*:7010)))|agents/([^/]++)/(?|edit(*:7044)|update(*:7059)|delete(*:7074))|supplier/([^/]++)/(?|edit(*:7109)|update(*:7124)|delete(*:7139))|landlord/([^/]++)/(?|edit(*:7174)|update(*:7189)|show(*:7202)|delete(?|(*:7220)|\\-contact\\-person(*:7246))|trash(*:7261))|income/category/([^/]++)/(?|edit(*:7303)|delete(*:7318))|expense\\-category/([^/]++)/(?|edit(*:7362)|update(*:7377)|delete(*:7392))))|/e(?|mail/verify/([^/]++)/([^/]++)(*:7438)|commerce/(?|customer/([^/]++)/(?|edit(*:7484)|update(*:7499)|show(*:7512)|delete(*:7527))|s(?|upplier/([^/]++)/(?|edit(*:7565)|update(*:7580)|show(*:7593)|delete(*:7608)|trash(*:7622))|tock/([^/]++)/mail(*:7650))|delete\\-supplier\\-person/([^/]++)(*:7693)|product(?|s/(?|([^/]++)/(?|edit(*:7733)|update(*:7748)|de(?|tails(*:7767)|stroy(*:7781)))|export/([^/]++)(*:7807)|([^/]++)/description(?|(*:7839)|/update(*:7855))|price/([^/]++)/(?|edit(*:7887)|update(*:7902))|([^/]++)/variants(?|(*:7932)|/(?|store(*:7950)|([^/]++)/edit(*:7972)))|variants/([^/]++)/update(*:8007)|inventory/([^/]++)/edit(*:8039)|([^/]++)/inventory/([^/]++)/update(*:8082)|inventory/settings/([^/]++)/update(*:8125)|([^/]++)/inventory/outle/([^/]++)/link/delete(*:8179)|images/([^/]++)/(?|edit(*:8211)|update(*:8226)|destroy(*:8242))|([^/]++)/settings(?|(*:8272)|/update(*:8288))|category/([^/]++)/(?|edit(*:8323)|destroy(*:8339))|brand/([^/]++)/(?|edit(*:8371)|destroy(*:8387))|tags/([^/]++)/(?|edit(*:8418)|destroy(*:8434))|attributes/(?|([^/]++)/(?|edit(*:8474)|update(*:8489)|delete(*:8504)|values(*:8519))|values/([^/]++)/(?|edit(*:8552)|update(*:8567)|delete(*:8582))))|\\.(?|category/([^/]++)/update(*:8623)|brand/([^/]++)/update(*:8653)|tags/([^/]++)/update(*:8682)))|order(?|/stock/([^/]++)/(?|show(*:8724)|edit(*:8737)|update(*:8752)|p(?|df(*:8767)|rint(*:8780))|delivered(*:8799))|s/(?|([^/]++)/(?|show(*:8830)|delete(*:8845)|p(?|df(*:8860)|rint(*:8873)))|file/([^/]++)/([^/]++)(*:8906)))|ecommerce/order/([^/]++)/view(*:8946))|ventmanager/events/([^/]++)/(?|edit(*:8991)|update(*:9006)|details(*:9022)|s(?|p(?|eakers(*:9045)|onsors(?|(*:9063)|/(?|store(*:9081)|delete(*:9096))))|chedules(?|(*:9119)|/([^/]++)/sessions(*:9146)))|ticket(?|s(*:9167)|\\-sold(*:9182))|attendance(*:9202)))|/verify/(?|account/([^/]++)(*:9240)|business/email/([^/]++)/([^/]++)(*:9281))|/finance/(?|c(?|ustomer/(?|([^/]++)/(?|edit(*:9334)|update(*:9349)|show(*:9362)|delete(*:9377)|comments(*:9394))|comments/([^/]++)/delete(*:9428)|([^/]++)/(?|invoices(*:9457)|s(?|ubscriptions(*:9482)|tatement(?|(*:9502)|/(?|convert/([^/]++)(*:9531)|mail(*:9544)|send(*:9557)))|end(*:9571))|quotes(*:9587)|creditnotes(*:9607)|lpos(*:9620)|projects(*:9637)|mail(?|(*:9653)|/([^/]++)/details(*:9679))|documents(*:9698))|documents/([^/]++)/(?|update(*:9736)|([^/]++)/delete(*:9760))|([^/]++)/sms(*:9782)|sms/send(*:9799)|([^/]++)/(?|notes(?|(*:9828)|/(?|update(*:9847)|delete(*:9862)))|calllog(?|s(*:9884)|/(?|update(*:9903)|store(*:9917)))|events(*:9934))|e(?|vents/([^/]++)/(?|update(*:9972)|delete(*:9987))|xport/([^/]++)(*:10011))|category/([^/]++)/(?|edit(*:10047)|update(*:10063)|delete(*:10079)))|reditnote/(?|([^/]++)/(?|edit(*:10120)|update(*:10136)|delete(*:10152)|show(*:10166)|generate/([^/]++)(*:10193))|file/([^/]++)/([^/]++)(*:10226)|attach(?|ed/file/([^/]++)/delete(*:10268)|ment/([^/]++)/([^/]++)/change(*:10307))|([^/]++)/mail(*:10331)))|delete\\-(?|contact\\-person/([^/]++)(*:10378)|supplier\\-person/([^/]++)(*:10413))|s(?|upplier/(?|([^/]++)/(?|edit(*:10455)|update(*:10471)|show(*:10485)|delete(*:10501)|trash(*:10516))|category/([^/]++)/(?|edit(*:10552)|update(*:10568)|delete(*:10584))|export/([^/]++)(*:10610))|tock/([^/]++)/mail(*:10639)|alesorders/(?|([^/]++)/(?|edit(*:10679)|update(*:10695)|delete(*:10711)|show(*:10725)|p(?|df(*:10741)|rint(*:10755)))|file/([^/]++)/([^/]++)(*:10789)|attached/file/([^/]++)/delete(*:10828)|status/([^/]++)/([^/]++)/change(*:10869)|([^/]++)/(?|convert(*:10898)|mail(*:10912)))|ettings/(?|salesorders/(?|generated/([^/]++)/update(*:10975)|([^/]++)/defaults(*:11002)|defaults/([^/]++)/update(*:11036)|([^/]++)/tabs(*:11059)|tabs/([^/]++)/update(*:11089))|invoice/(?|generated/([^/]++)/update(*:11136)|([^/]++)/defaults(*:11163)|defaults/([^/]++)/update(*:11197)|([^/]++)/workflow(*:11224)|workflow/([^/]++)/update(*:11258)|([^/]++)/payments(*:11285)|payments/([^/]++)/update(*:11319)|([^/]++)/tabs(*:11342)|tabs/([^/]++)/update(*:11372)|([^/]++)/print(*:11396)|print/([^/]++)/update(*:11427))|quote/(?|generated/([^/]++)/update(*:11472)|([^/]++)/defaults(*:11499)|defaults/([^/]++)/update(*:11533)|([^/]++)/tabs(*:11556)|tabs/([^/]++)/update(*:11586))|creditnote/(?|generated/([^/]++)/update(*:11636)|([^/]++)/defaults(*:11663)|defaults/([^/]++)/update(*:11697)|([^/]++)/tabs(*:11720)|tabs/([^/]++)/update(*:11750))|taxes/([^/]++)/(?|edit(*:11783)|delete(*:11799))|lpo/(?|generated/([^/]++)/update(*:11842)|([^/]++)/defaults(*:11869)|defaults/([^/]++)/update(*:11903)|([^/]++)/tabs(*:11926)|tabs/([^/]++)/update(*:11956))|payment/modes/([^/]++)/(?|update(*:11999)|delete(*:12015))))|i(?|tem(?|s/(?|([^/]++)/(?|edit(*:12059)|update(*:12075)|de(?|tails(*:12095)|stroy(*:12110)))|export/([^/]++)(*:12137)|([^/]++)/description(?|(*:12170)|/update(*:12187))|inventory/([^/]++)/edit(*:12221)|([^/]++)/inventory/([^/]++)/update(*:12265)|inventory/settings/([^/]++)/update(*:12309)|([^/]++)/inventory/outle/([^/]++)/link/delete(*:12364)|images/([^/]++)/(?|edit(*:12397)|update(*:12413)|destroy(*:12430))|([^/]++)/settings(?|(*:12461)|/update(*:12478))|brand/([^/]++)/(?|edit(*:12511)|destroy(*:12528))|tags/([^/]++)/(?|edit(*:12560)|destroy(*:12577))|attributes/(?|([^/]++)/(?|edit(*:12618)|update(*:12634)|delete(*:12650)|values(*:12666))|values/([^/]++)/(?|edit(*:12700)|update(*:12716)|delete(*:12732))))|/(?|price/([^/]++)/edit(*:12768)|([^/]++)/variants(?|(*:12798)|/(?|store(*:12817)|([^/]++)/edit(*:12840)))|variants/([^/]++)/update(*:12876)))|n(?|voice/(?|([^/]++)/(?|show(*:12917)|del(?|ete(*:12936)|iverynote(*:12955))|convert/([^/]++)(*:12982))|file/([^/]++)/([^/]++)(*:13015)|payment/stk/([^/]++)(*:13045)|([^/]++)/(?|edit(*:13071)|update(*:13087)|mail(*:13101))|send/mail(*:13121)|attachment/([^/]++)/delete(*:13157)|recurring/([^/]++)/(?|edit(*:13193)|update(*:13209)))|come/category/([^/]++)/(?|edit(*:13251)|delete(*:13267))))|p(?|r(?|ice/([^/]++)/update(*:13307)|oduct\\.(?|brand/([^/]++)/update(*:13348)|tags/([^/]++)/update(*:13378)))|ayment(?|s/([^/]++)/(?|edit(*:13417)|update(*:13433)|show(*:13447)|files(*:13462)|delete(*:13478)|p(?|rint(*:13496)|df(*:13508))|mail(*:13523))|/d(?|elete/file/([^/]++)(*:13558)|ownload/file/([^/]++)(*:13589)))|urchaseorders/(?|([^/]++)/(?|edit(*:13634)|update(*:13650)|delete(*:13666)|show(*:13680)|p(?|df(*:13696)|rint(*:13710)))|file/([^/]++)/([^/]++)(*:13744)|attach(?|ed/file/([^/]++)/delete(*:13786)|ment/([^/]++)/([^/]++)/change(*:13825))|([^/]++)/(?|convert(*:13855)|mail(*:13869))))|order/stock/([^/]++)/(?|show(*:13910)|edit(*:13924)|update(*:13940)|convert/([^/]++)(*:13966)|del(?|ivered(*:13988)|ete(*:14001)))|expen(?|se(?|/([^/]++)/(?|edit(*:14043)|update(*:14059)|destroy(*:14076))|\\-category/([^/]++)/(?|edit(*:14114)|update(*:14130)|delete(*:14146)))|ce/([^/]++)/file/d(?|elete(*:14184)|ownload(*:14201)))|re(?|trive_client/([^/]++)(*:14239)|port/(?|account\\-statement/([^/]++)/([^/]++)/([^/]++)/([^/]++)/(?|results(*:14322)|export/(?|excel(*:14347)|p(?|df(*:14363)|rint(*:14377))))|sales/(?|customer/p(?|rint/([^/]++)/([^/]++)(*:14434)|df/([^/]++)/([^/]++)(*:14464))|item/p(?|rint/([^/]++)/([^/]++)(*:14506)|df/([^/]++)/([^/]++)(*:14536))|salesperson/p(?|rint/([^/]++)/([^/]++)(*:14585)|df/([^/]++)/([^/]++)(*:14615))|receivables/p(?|rint/([^/]++)/([^/]++)(*:14664)|df/([^/]++)/([^/]++)(*:14694)))|receivables/aging/([^/]++)/extract(*:14740)|profilandloss/pdf/([^/]++)/([^/]++)(*:14785)|expensesummary/extract/([^/]++)/([^/]++)(*:14835)|in(?|comesummary/([^/]++)/([^/]++)/extract(*:14887)|ventory/product\\-sale/summary/([^/]++)/([^/]++)/extract(*:14952))))|quotes/(?|([^/]++)/(?|edit(*:14991)|update(*:15007)|delete(*:15023)|show(*:15037)|p(?|df(*:15053)|rint(*:15067)))|file/([^/]++)/([^/]++)(*:15101)|attach(?|ed/file/([^/]++)/delete(*:15143)|ment/([^/]++)/([^/]++)/change(*:15182))|([^/]++)/(?|convert(*:15212)|mail(*:15226)))|account/([^/]++)/(?|edit(*:15262)|update(*:15278)|delete(*:15294))|fee(?|/(?|items/([^/]++)/(?|update(*:15339)|delete(*:15355))|structures/([^/]++)/(?|edit(*:15393)|update(*:15409)|show(*:15423)|link/(?|items(?|(*:15449)|/([^/]++)/delete(*:15475))|classes(?|(*:15496)|/([^/]++)/delete(*:15522)))|delete(*:15540)))|s/statements/([^/]++)/view(*:15578)))|/hrm/(?|e(?|mployee/(?|([^/]++)/(?|update(*:15631)|show(*:15645)|edit(*:15659))|personal\\-info/([^/]++)/edit(*:15698)|company\\-structure/([^/]++)/edit(*:15740)|salary/([^/]++)/edit(*:15770)|bank\\-information/([^/]++)/edit(*:15811)|a(?|cademic\\-information/([^/]++)/edit(*:15859)|llocation/([^/]++)/edit(*:15892)|mily\\-information/([^/]++)/edit(*:15933))|experience/([^/]++)/edit(*:15968)|deductions/(?|([^/]++)/edit(*:16005)|delete/([^/]++)/allocate(*:16039)))|x(?|perience/([^/]++)/delete(*:16079)|it\\-details/([^/]++)/edit(*:16114))|vents/([^/]++)/(?|edit(*:16147)|update(*:16163)|delete(*:16179)))|p(?|ersonal\\-info/([^/]++)/update(*:16224)|ayroll/(?|([^/]++)/(?|show(?|(*:16263)|/update(*:16280))|details(*:16298)|([^/]++)/payslip(?|(*:16327)|/delete(*:16344))|delete(*:16361))|process/([^/]++)/([^/]++)/([^/]++)/review(*:16413)|settings/(?|deduction/([^/]++)/(?|edit(*:16461)|delete(*:16477))|benefits/([^/]++)/(?|edit(*:16513)|delete(*:16529)))))|salary/([^/]++)/update(*:16565)|bank\\-information/([^/]++)/update(*:16608)|a(?|cademic\\-information/([^/]++)/update(*:16658)|nnouncements/([^/]++)/show(*:16694))|delete(?|\\-(?|institution/([^/]++)(*:16739)|f(?|amily\\-information/([^/]++)(*:16780)|ile/([^/]++)(*:16802)))|/([^/]++)/allocation(*:16834))|institution\\-edit/([^/]++)(*:16871)|files/([^/]++)/edit(*:16900)|r(?|oles/([^/]++)/edit(*:16932)|ecruitment/job\\-openings/([^/]++)(?|/(?|edit(*:16986)|update(*:17002))|(*:17013)))|leave/(?|([^/]++)/(?|edit(*:17050)|update(*:17066)|approve(*:17083)|de(?|nay(*:17101)|lete(*:17115)))|apply/([^/]++)/(?|edit(*:17149)|update(*:17165)))|organization/(?|positions/([^/]++)/(?|edit(*:17219)|update(*:17235)|destroy(*:17252))|departments/([^/]++)/(?|edit(*:17291)|update(*:17307)|delete(*:17323))|branches/([^/]++)/(?|edit(*:17359)|update(*:17375)|delete(*:17391)))|company\\-policy/([^/]++)/edit(*:17432)|travel/(?|([^/]++)/(?|edit(*:17468)|update(*:17484)|delete(*:17500))|expenses/([^/]++)/(?|edit(*:17536)|update(*:17552)|show(*:17566)|delete(?|(*:17585)|/([^/]++)/files(*:17610)))))|/c(?|rm/(?|lead(?|s/(?|([^/]++)/(?|show(*:17663)|edit(*:17677)|update(*:17693)|delete(*:17709)|c(?|onvert(*:17729)|alllog(?|(*:17748)|/(?|store(*:17767)|delete(*:17783))))|notes(?|(*:17804)|/(?|update(*:17824)|delete(*:17840)))|tasks(*:17857))|tasks/([^/]++)/(?|update(*:17892)|delete(*:17908))|([^/]++)/events(?|(*:17937)|/list(*:17952))|events/([^/]++)/(?|update(*:17988)|delete(*:18004))|([^/]++)/documents(*:18033)|documents/([^/]++)/update(*:18068)|([^/]++)/(?|/documents/([^/]++)/delete(*:18116)|mail(?|(*:18133)|/([^/]++)/details(*:18160))|s(?|end(*:18178)|ms(*:18190)))|sms/send(*:18210))|/s(?|tatus/([^/]++)/(?|update(*:18250)|delete(*:18266))|ources/([^/]++)/(?|update(*:18302)|delete(*:18318))))|ma(?|il/([^/]++)/details(*:18355)|rketing/(?|retrive/channel/([^/]++)(*:18400)|publi(?|cations/([^/]++)/(?|edit(*:18442)|update(*:18458)|channel/([^/]++)(*:18484))|sh/([^/]++)/([^/]++)(*:18515))|account/([^/]++)/(?|edit(*:18550)|update(*:18566)|delete(*:18582))|medium/([^/]++)/(?|edit(*:18616)|update(*:18632)|delete(*:18648))|([^/]++)/channel(?|(*:18678)|/([^/]++)/edit(*:18702))|channel/([^/]++)/(?|update(*:18739)|delete(*:18755))))|customer/(?|([^/]++)/(?|edit(*:18796)|update(*:18812)|show(*:18826)|c(?|ustomer\\-persons(*:18856)|omments(*:18873))|notes(*:18889)|delete(*:18905))|comments/([^/]++)/delete(*:18940)|([^/]++)/(?|invoices(*:18970)|s(?|ubscriptions(*:18996)|tatement(?|(*:19017)|/(?|p(?|df(*:19037)|rint(*:19051))|mail(*:19066)|send(*:19080)))|end(*:19095))|quotes(*:19112)|creditnotes(*:19133)|lpos(*:19147)|projects(*:19165)|mail(?|(*:19182)|/([^/]++)/details(*:19209))|documents(*:19229))|documents/([^/]++)/(?|update(*:19268)|([^/]++)/delete(*:19293))|([^/]++)/sms(*:19316)|sms/send(*:19334)|export/([^/]++)(*:19359)|category/([^/]++)/(?|edit(*:19394)|update(*:19410)|delete(*:19426))|([^/]++)/(?|notes/(?|update(*:19464)|delete(*:19480))|calllog(?|s(*:19502)|/(?|update(*:19522)|store(*:19537)))|events(*:19555))|events/([^/]++)/(?|update(*:19591)|delete(*:19607)))|s(?|ms/retreve/from/([^/]++)(*:19647)|hort/([^/]++)/delete(*:19677))|url/([^/]++)(*:19700)|deal/([^/]++)/(?|edit(*:19731)|update(*:19747)|s(?|how(*:19764)|tages(*:19779))|delete(*:19796)|call_log(?|(*:19817)|/(?|store(*:19836)|update(*:19852)|delete(*:19868)))|notes(?|(*:19888)|/(?|store(*:19907)|update(*:19923)|delete(*:19939)))|task(?|(*:19958)|/(?|store(*:19977)|update(*:19993)|delete(*:20009)))|appointments(?|(*:20036)|/(?|store(*:20055)|update(*:20071)|delete(*:20087))))|pipeline/(?|([^/]++)/(?|edit(*:20128)|update(*:20144)|show(*:20158)|delete(*:20174))|stages/([^/]++)/(?|edit(*:20208)|update(*:20224)|delete(*:20240)))|reports/leads_by_(?|s(?|tatus/export/([^/]++)/([^/]++)/([^/]++)(*:20315)|ource/export/([^/]++)/([^/]++)/([^/]++)(*:20364))|industry/export/([^/]++)/([^/]++)/([^/]++)(*:20417)))|allback(?|s/(?|ipay/([^/]++)(*:20457)|pesapal/([^/]++)(*:20483))|/daraja/([^/]++)(?|(*:20513)|/cancel(*:20530))))|/jobs/(?|job/(?|([^/]++)/(?|d(?|ashboard(*:20583)|etails(*:20599))|budget(*:20616)|users(*:20631)|activity(*:20649)|settings(*:20667)|edit(*:20681))|update/([^/]++)(*:20707)|destroy/([^/]++)(*:20733)|([^/]++)/(?|discussions(?|(*:20769)|/([^/]++)/delete(*:20795))|tasks(?|(*:20814)|/(?|create(*:20834)|([^/]++)/(?|s(?|how(*:20863)|tatus(*:20878))|edit(*:20893))))|section/([^/]++)/([^/]++)(*:20931))|task(?|s/([^/]++)/(?|update(*:20969)|delete(*:20985)|incomplete(*:21005))|/group/([^/]++)/(?|edit(*:21039)|delete(*:21055)))|([^/]++)/tasks/(?|comment/([^/]++)/delete(*:21108)|files/([^/]++)/delete(*:21139)))|([^/]++)/tasks/filter/(?|overdue(*:21183)|today(*:21198)|last\\-7\\-days(*:21221))|job/(?|([^/]++)/tickets(?|(*:21258)|/([^/]++)/(?|edit(*:21285)|show(*:21299)))|tickets/([^/]++)/update(*:21334)|([^/]++)/tickets/([^/]++)/delete(*:21376)|tickets/comment/([^/]++)/delete(*:21417)|([^/]++)/(?|tickets/documents/([^/]++)/delete(*:21472)|notes(?|(*:21490)|/([^/]++)/(?|edit(*:21517)|update(*:21533)|delete(*:21549)))|files(*:21566)|events(*:21582))|events/([^/]++)/(?|([^/]++)/edit(*:21625)|update(*:21641)|results(*:21658)|([^/]++)/(?|show(*:21684)|delete(*:21700))|goals(*:21716))))|/s(?|ubscriptions/(?|p(?|roducts/([^/]++)/(?|edit(*:21778)|update(*:21794)|delete(*:21810))|lan/(?|([^/]++)(?|(*:21839)|/create(*:21856))|store(*:21872)|([^/]++)/(?|edit/([^/]++)(*:21907)|update(*:21923)|delete(*:21939))))|customer/([^/]++)/(?|edit(*:21977)|update(*:21993)|show(*:22007)|delete(*:22023))|([^/]++)/(?|edit(*:22050)|update(*:22066)|de(?|lete(*:22085)|tails(*:22100))|invoices(*:22119)|renew(*:22134)|cancel(*:22150)|plans(*:22165))|p(?|lans/([^/]++)/price(*:22199)|aypal/cancel(*:22221))|customer/export/([^/]++)(*:22256)|invoice/([^/]++)/show(*:22287))|alesflow/(?|c(?|ustomer/(?|([^/]++)/(?|edit(*:22341)|update(*:22357)|show(*:22371)|delete(*:22387))|export/([^/]++)(*:22413)|category/([^/]++)/(?|edit(*:22448)|update(*:22464)|delete(*:22480)))|ategory/([^/]++)/(?|edit(*:22516)|update(*:22532)|delete(*:22548)))|s(?|u(?|pplier/(?|([^/]++)/(?|edit(*:22594)|update(*:22610)|show(*:22624)|delete(*:22640)|trash(*:22655))|category/([^/]++)/(?|edit(*:22691)|update(*:22707)|delete(*:22723))|export/([^/]++)(*:22749))|rvey/([^/]++)/(?|show(*:22781)|edit(*:22795)|update(*:22811)|delete(*:22827)|questions(?|(*:22849)|/(?|create(*:22869)|store(*:22884)|([^/]++)/(?|edit(*:22910)|update(*:22926)|delete(*:22942))))))|tock/([^/]++)/mail(*:22975)|ettings/account/([^/]++)/update(*:23016))|delete\\-supplier\\-person/([^/]++)(*:23060)|pr(?|oduct(?|s/(?|([^/]++)/(?|edit(*:23104)|update(*:23120)|de(?|tails(*:23140)|stroy(*:23155)))|export/([^/]++)(*:23182)|([^/]++)/description(?|(*:23215)|/update(*:23232))|inventory/([^/]++)/edit(*:23266)|([^/]++)/inventory/([^/]++)/update(*:23310)|inventory/settings/([^/]++)/update(*:23354)|([^/]++)/inventory/outle/([^/]++)/link/delete(*:23409)|images/([^/]++)/(?|edit(*:23442)|update(*:23458)|destroy(*:23475))|category/([^/]++)/(?|edit(*:23511)|destroy(*:23528))|brand/([^/]++)/(?|edit(*:23561)|destroy(*:23578)))|/price/([^/]++)/edit(*:23610)|\\.(?|category/([^/]++)/update(*:23649)|brand/([^/]++)/update(*:23680)))|ice/([^/]++)/update(*:23711))|order(?|/stock/([^/]++)/(?|show(*:23753)|edit(*:23767)|update(*:23783)|p(?|df(*:23799)|rint(*:23813))|delivered(*:23833))|s/([^/]++)/de(?|tails(*:23865)|livery/allocation(*:23892)))|user(?|/([^/]++)/(?|edit(*:23928)|update(*:23944))|([^/]++)/destroy(*:23971))|routes/([^/]++)/(?|update(*:24007)|view(*:24021))|warehousing/([^/]++)/(?|edit(*:24060)|update(*:24076))|inventory/allocate/([^/]++)/items(*:24120))|ettings/(?|business/profile/([^/]++)/(?|update(*:24177)|delete/logo(*:24198))|users/([^/]++)/(?|edit(*:24231)|update(*:24247))|language/(?|([^/]++)/([^/]++)(*:24287)|translate/section(*:24314)|([^/]++)/(?|edit(*:24340)|update(*:24356)|delete(*:24372)))|roles/([^/]++)/(?|show(*:24406)|edit(*:24420)|update(*:24436)|delete(*:24452))|account/application/([^/]++)/(?|delete(*:24501)|billing(*:24518))|payment/integrations(?|([^/]++)/status/([^/]++)(*:24576)|/([^/]++)/(?|delete(*:24605)|p(?|esapal(?|(*:24628)|/update(*:24645))|aypal(?|(*:24664)|/update(*:24681)))|kepler9(?|(*:24703)|/update(*:24720))|ipay(?|(*:24738)|/update(*:24755))|mpesa(?|(*:24774)|/update(*:24791)|\\-(?|p(?|hone\\-number(?|(*:24825)|/update(*:24842))|aybill\\-number(?|(*:24870)|/update(*:24887)))|till\\-number(?|(*:24914)|/update(*:24931))))))|daraja/register/url/([^/]++)(*:24974)|integrations/telephony/([^/]++)/(?|twilio(?|(*:25028)|/update(*:25045))|africasTalking(?|(*:25073)|/update(*:25090)))))|/t(?|rack/(?|email/([^/]++)(*:25131)|invoice/([^/]++)/([^/]++)(*:25166)|salesorder/([^/]++)/([^/]++)(*:25204)|quote/([^/]++)(*:25228))|icket/([^/]++)/details(*:25261)))/?$}sDu',
    ),
    3 => 
    array (
      39 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.clockwork',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      73 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'debugbar.cache.delete',
            'tags' => NULL,
          ),
          1 => 
          array (
            0 => 'key',
            1 => 'tags',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      113 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.message',
          ),
          1 => 
          array (
            0 => 'name',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      143 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.preview-file',
          ),
          1 => 
          array (
            0 => 'filename',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      192 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.permissions.edit',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      200 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.permissions.update',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      229 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.show',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      242 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.edit',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      250 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.update',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles.destroy',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      288 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles-assignment.edit',
          ),
          1 => 
          array (
            0 => 'roles_assignment',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      296 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laratrust.roles-assignment.update',
          ),
          1 => 
          array (
            0 => 'roles_assignment',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      347 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::TuhplJ1VacogjT10',
          ),
          1 => 
          array (
            0 => 'businessCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      364 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::ZmegXaY7dVPOImfM',
          ),
          1 => 
          array (
            0 => 'businessCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      372 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::Ne1juPa0tqGcMqDu',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::2H1D4nC0Utc0PxIa',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      406 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      420 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      432 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.finance',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      461 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      492 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'model.retrive',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      519 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.details.vehicle',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      540 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.image.remove',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      563 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      581 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      594 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      618 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.edit',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'edit',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      632 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.update',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'edit',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      646 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.maintenances.delete',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      662 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.files.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      693 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.files.add',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.files.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      734 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.index',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      759 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkout.checkin',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      802 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkout.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      835 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.event.checkin.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      889 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.checkout.checkin.delete',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      907 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.repairs',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      924 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.repair.store',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      950 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.repair.update',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      964 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.repair.delete',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      986 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.leases',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.lease.store',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1024 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.location',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1050 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.missing',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1069 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.dispose',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1083 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.donate',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1097 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.sell',
          ),
          1 => 
          array (
            0 => 'asset',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1126 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.missing.store',
          ),
          1 => 
          array (
            0 => 'assset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1157 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.dispose.store',
          ),
          1 => 
          array (
            0 => 'assset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1183 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.donate.store',
          ),
          1 => 
          array (
            0 => 'assset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1209 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.other.events.sell.store',
          ),
          1 => 
          array (
            0 => 'assset',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1244 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1259 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1272 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1287 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.assets.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1311 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1330 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1344 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1369 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.edit',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'edit',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1384 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.update',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'edit',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1399 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'licenses.maintenances.delete',
          ),
          1 => 
          array (
            0 => 'asset',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1433 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1448 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1463 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'assets.type.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1502 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.reset',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1543 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.update.cart',
          ),
          1 => 
          array (
            0 => 'cartID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1572 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.remove.cart.item',
          ),
          1 => 
          array (
            0 => 'cartID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1615 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'complete.payment',
          ),
          1 => 
          array (
            0 => 'invoiceID',
            1 => 'gatewayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1648 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1663 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1676 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1691 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.contact.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1729 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.details',
          ),
          1 => 
          array (
            0 => 'saleID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1751 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.sale.receipt.print',
          ),
          1 => 
          array (
            0 => 'saleID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1779 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.stock.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1815 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1830 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1843 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1858 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1872 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1907 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.groups.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1922 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.groups.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1937 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.groups.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1962 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2009 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.settings.notification.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2043 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'history.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2077 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.print.receipt',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2114 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2129 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2148 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2162 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2196 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.inventory',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2239 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.inventory.update',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2282 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.inventory.settings.update',
          ),
          1 => 
          array (
            0 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2336 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.inventory.outlet.link.delete',
          ),
          1 => 
          array (
            0 => 'productID',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2368 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.images',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2383 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.images.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2427 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.images.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'imageCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.settings.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2463 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.settings.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2515 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.category.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2547 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.brand.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2563 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.brand.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2594 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.tags.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.tags.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2640 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.price',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2656 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.products.price.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2695 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2725 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.brand.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2754 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.tags.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2796 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'make.payment',
          ),
          1 => 
          array (
            0 => 'invoiceID',
            1 => 'gatewayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2830 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'order.receipt',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2861 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2874 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2889 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2904 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.pdf',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2917 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.product.stock.order.print',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2936 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.stock.delivered',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2980 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pos.supplier.vendor.person',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3034 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3049 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3068 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3081 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3103 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.remove.image',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3126 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.information',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3142 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.information.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3177 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.vacant',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3194 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.occupied',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3220 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenants',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3259 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenants.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3300 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenant.contactperson.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3315 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.leases',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3334 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.leases.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3351 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3367 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3389 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.edit',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3434 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.document',
          ),
          1 => 
          array (
            0 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.update',
          ),
          1 => 
          array (
            0 => 'uid',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3493 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.delete',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'uid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3506 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.units.bulk.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3527 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.index',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3546 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.create',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3560 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.store',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3591 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3604 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.tenant.leases',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3637 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.payment',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3654 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.create.bulk',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3669 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.store.bulk',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3693 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.print',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3736 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3760 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3781 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3800 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.create',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3822 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3868 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3917 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'paymentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3959 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::ys6D0kY634HMQlni',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4018 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.delete.file',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'fileID',
            2 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4042 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payments.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4080 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.index',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4096 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.create',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4130 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.prepare.utility.billing',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4204 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.record.bulk.reading',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'utility',
            2 => 'from',
            3 => 'to',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.store',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4283 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4342 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.calculate.utility.consumption',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4377 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.update.utility.consumption',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4444 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4473 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.billing.tenant.leases',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4490 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.payment',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4511 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.compose.mail',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4533 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utility.send.mail',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.documents',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4568 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.gallery',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4608 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.integration.settings',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4633 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.integration.settings.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'integrationID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4642 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.integration.settings.activation',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4684 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.settings',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4703 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.invoice.settings.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4722 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.settings.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4743 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.settings',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4814 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.billing.history',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'datefrom',
            2 => 'dateto',
            3 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4830 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.billing.history.search',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4893 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesaapi.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4909 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesaapi.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4926 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesatill.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => true,
          5 => false,
          6 => NULL,
        ),
      ),
      4942 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesatill.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4962 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesapaybill.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4978 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.mpesapaybill.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5000 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank1.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5016 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank1.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5030 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank2.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5046 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank2.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5060 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank3.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5076 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank3.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5090 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank4.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5106 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank4.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5120 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank5.integration',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'getwayID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5136 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.bank5.integration.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5156 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.images',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5175 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.images.upload',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5199 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.images.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5230 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.documents.upload',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5257 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.documents.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'documentID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5272 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.documents.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5294 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5313 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.create',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5327 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.store',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5352 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5367 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5396 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.delete.file',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'parentID',
            2 => 'fileID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5411 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'parentID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5436 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.index',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5455 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.create',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5469 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.store',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5494 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5509 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.update',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5524 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.delete',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5537 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.pdf',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5565 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.print',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5579 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.creditnote.mail',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5604 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5630 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.profitandloss',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5653 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.expensesummary',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5675 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.incomesummary',
          ),
          1 => 
          array (
            0 => 'propertyCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5730 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.profitandloss.generate',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5780 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.expensesummary.generate',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5829 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.reports.incomesummary.generate',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'to',
            2 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5866 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5908 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.method.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5923 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.payment.method.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5972 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5988 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6012 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.cancel',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'listID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.delete.image',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'imageID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.image.cover',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'imageID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6075 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'list.property.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6111 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.maintenance.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6146 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.units',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6170 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.units.tenant',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6201 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pm.maintenance.get.category',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6250 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6265 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'maintenance.category.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6308 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenantsperson.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6351 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6374 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6405 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6438 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.notes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6464 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.invoice.index',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6482 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.statement',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6505 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.units.index',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6518 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6533 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6548 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'tenants.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6589 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.show',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
            2 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6648 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.edit',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'tenantID',
            2 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6679 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.update',
          ),
          1 => 
          array (
            0 => 'leaseID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6712 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.tenant.lease.delete',
          ),
          1 => 
          array (
            0 => 'leaseID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6744 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.leases.delete.utility',
          ),
          1 => 
          array (
            0 => 'leaseID',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6777 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6792 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.taxes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6836 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6853 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.readings',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6876 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.bill.readings',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6918 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.history',
          ),
          1 => 
          array (
            0 => 'propertyCode',
            1 => 'periodID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6950 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'utility.billing.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6980 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6995 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7010 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.utilities.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7044 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7074 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.agents.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7109 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7124 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7139 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.supplier.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7174 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7189 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7202 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7220 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7246 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlordperson.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7261 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'landlord.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7303 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7318 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.income.category.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7362 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7377 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7392 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'propertywingu.property.expense.category.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7438 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.verify',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'hash',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      7484 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7512 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7527 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.customers.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7565 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7580 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7593 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7608 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7622 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.vendor.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7650 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.stock.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7693 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.supplier.vendor.person',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      7733 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7748 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7767 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7781 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7807 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      7839 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.description',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7855 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.description.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7887 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.price',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7902 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.price.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7932 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.variants.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7950 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.variants.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      7972 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.variants.edit',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'variantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.variants.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8039 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.inventory',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8082 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.products.inventory.update',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8125 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.inventory.settings.update',
          ),
          1 => 
          array (
            0 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8179 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.inventory.outlet.link.delete',
          ),
          1 => 
          array (
            0 => 'productID',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8211 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.images',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8226 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.images.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8242 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.images.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8272 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.settings.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8288 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.settings.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8339 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.category.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8371 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.brand.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8387 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.brand.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8418 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.tags.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8434 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.tags.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8474 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8489 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8504 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8519 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.value.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.value.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8567 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.value.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8582 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.attributes.value.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8623 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8653 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.brand.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8682 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.tags.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8724 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8737 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8752 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8767 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.pdf',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8780 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.product.stock.order.print',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8799 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.stock.delivered',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8830 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8845 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8860 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.pdf',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8873 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.print',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8906 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.orders.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      8946 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ecommerce.ecommerce.orders.view',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      8991 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9006 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9022 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.speakers',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9063 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.sponsors',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9081 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.sponsors.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9096 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.sponsors.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9119 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.schedules',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9146 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.schedule.sessions',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'schedule',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9167 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.tickets',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.ticket.sold',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9202 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'events.attendance',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9240 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'account.verify',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9281 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verify.business.email',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'email',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9334 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9349 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9362 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9377 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9394 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9428 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.comments.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.invoices',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9482 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.subscriptions',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9502 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9531 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.convert',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'format',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      9544 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9557 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.statement.send',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9571 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.send',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9587 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.quotes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9607 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.creditnotes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9620 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.lpos',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9637 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customers.projects',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9653 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9679 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.mail.details',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'customerID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9698 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9736 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9760 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.documents.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9782 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.sms',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9799 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9828 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9847 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9862 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.notes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9884 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9903 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9917 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.calllog.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9934 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9972 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      9987 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.customer.events.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10011 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10047 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10063 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10079 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contact.groups.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10120 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10136 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10152 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10166 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10193 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.generate',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'format',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10226 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10268 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.attachment.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10307 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.status.change',
          ),
          1 => 
          array (
            0 => 'creditnoteID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10331 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.creditnote.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10378 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.contactperson.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10413 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.vendor.person',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10455 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10471 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10485 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10501 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10516 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'vendor.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10568 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10584 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.supplier.groups.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'supplier.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10639 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10679 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10695 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10711 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10725 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10741 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10755 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10789 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      10828 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.status.change',
          ),
          1 => 
          array (
            0 => 'salesorderID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10898 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10912 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.salesorders.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      10975 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11002 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11036 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11089 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.salesorders.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11136 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11163 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11197 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11224 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.workflow',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11258 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.workflow.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11285 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.payments',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11319 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.payments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11342 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11372 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11396 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11427 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.invoice.print.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11472 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11533 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11556 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11586 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.quote.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11636 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11663 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11697 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11720 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11750 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.creditnote.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11783 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.taxes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11799 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11842 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.generated.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.defaults',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11903 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.defaults.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11926 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.tabs',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11956 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.settings.lpo.tabs.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      11999 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12015 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.mode.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12075 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12095 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12110 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12137 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      12170 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.description',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12187 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.description.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12221 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12265 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.update',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12309 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.settings.update',
          ),
          1 => 
          array (
            0 => 'productID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12364 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.inventory.outlet.link.delete',
          ),
          1 => 
          array (
            0 => 'productID',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12397 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12413 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12430 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.images.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12461 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.settings.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12478 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.settings.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12511 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12528 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12560 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12577 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12618 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12634 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12650 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12666 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12700 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12716 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12732 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.attributes.value.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12768 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.price',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12798 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12817 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12840 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.edit',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'variantID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12876 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.products.variants.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12917 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12936 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12955 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.deliverynote',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      12982 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.convert',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'format',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13015 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.payments.stkpush',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13071 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13087 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.product.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13101 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13121 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.send.mail',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13157 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.attachment.delete',
          ),
          1 => 
          array (
            0 => 'ud',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13193 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13209 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.invoice.recurring.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13251 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13267 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.income.category.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13307 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.price.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13348 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.brand.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13378 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.tags.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13417 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13433 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13447 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13462 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.received.files',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13478 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13496 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13508 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13523 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payments.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13558 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.file.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13589 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.payment.file.download',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13634 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13650 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13666 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13680 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13696 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13710 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13744 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13786 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13825 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.status.change',
          ),
          1 => 
          array (
            0 => 'lpoID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13855 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.lpo.mail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13910 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13924 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13940 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      13966 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.product.stock.order.convert',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'format',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      13988 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.delivered',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14001 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.stock.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14043 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14076 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14114 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14130 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14146 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.category.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14184 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.file.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14201 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.expense.file.download',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14239 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.retrive.client',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14322 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.results',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14347 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.excel',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14363 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.pdf',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14377 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.account.statement.export.print',
          ),
          1 => 
          array (
            0 => 'clientID',
            1 => 'from',
            2 => 'to',
            3 => 'transaction',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14434 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14464 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.customer.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14506 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14536 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.item.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14585 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14615 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.sales.salesperson.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14664 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance.print',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14694 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.balance.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14740 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.receivables.aging.extract',
          ),
          1 => 
          array (
            0 => 'date',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14785 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.profitandloss.pdf',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14835 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.expensesummary.extract',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      14887 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.incomesummary.extract',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14952 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.report.inventory.sale.summary.extract',
          ),
          1 => 
          array (
            0 => 'to',
            1 => 'from',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      14991 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15023 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15037 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15053 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.pdf',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15067 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.print',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15101 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.status',
          ),
          1 => 
          array (
            0 => 'status',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      15143 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.attachment.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.status.change',
          ),
          1 => 
          array (
            0 => 'quotesID',
            1 => 'status',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15212 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.convert',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15226 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.quotes.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15262 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15278 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15294 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.account.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15339 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.items.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15355 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.items.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15393 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15409 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15423 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15449 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.link.items',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15475 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.link.items.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15496 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.link.classes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15522 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.link.class.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15540 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.structures.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15578 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'finance.fee.statements.view',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15631 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15645 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15659 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15698 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.personalinfo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15740 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.company.structure.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15770 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.salary.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15811 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeebankinformation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15859 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeeacademicinformation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15892 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15933 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      15968 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16005 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16039 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.deductions.delete.allocate',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16079 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.experience.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16114 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.exitdetails.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16147 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16163 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16179 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.events.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16224 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.personalinfo.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16263 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16280 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.people.show.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16298 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16327 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.payslip',
          ),
          1 => 
          array (
            0 => 'employeeID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16344 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.payslip.delete',
          ),
          1 => 
          array (
            0 => 'employeeID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16361 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16413 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.process.review',
          ),
          1 => 
          array (
            0 => 'payroll_date',
            1 => 'type',
            2 => 'branch',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16461 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16477 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.deduction.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16513 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16529 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.payroll.settings.benefits.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16565 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employee.salary.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16608 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeebankinformation.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16658 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeeacademicinformation.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16694 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.announcements.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16739 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institution.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16780 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.famillyinfo.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16802 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16834 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.allocation.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16871 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.institution.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      16900 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeefile.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16932 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.employeerole.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      16986 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17002 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17013 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.recruitment.jobs.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      17050 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17066 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17083 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.approve',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17101 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.denay',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17115 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17149 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17165 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.leave.apply.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17219 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17252 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.positions.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17291 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17307 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.departments.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17359 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17375 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17391 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.branches.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17432 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.companyprofile.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17468 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17484 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17500 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17536 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17566 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17585 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'hrm.travel.expenses.delete.files',
          ),
          1 => 
          array (
            0 => 'expenseID',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17663 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17693 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17709 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17729 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.convert',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17748 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17767 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17783 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.calllog.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17804 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17824 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17840 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.notes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17857 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17892 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17908 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.tasks.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17937 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17952 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.list',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      17988 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18004 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.events.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18033 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18068 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.update',
          ),
          1 => 
          array (
            0 => 'documentCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18116 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.documents.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'documentCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18133 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18160 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.details',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18178 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.send',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18190 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sms',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18210 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18250 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18266 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.status.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18302 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18318 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.leads.sources.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18355 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.mail.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18400 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::AyMlZJKuYe03lHKX',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18442 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18458 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18484 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.post.channel',
          ),
          1 => 
          array (
            0 => 'postID',
            1 => 'channelID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18515 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.publications.post.publish',
          ),
          1 => 
          array (
            0 => 'postID',
            1 => 'channelID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      18550 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18566 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.account.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18582 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.marketing.account.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18616 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18632 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18648 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.medium.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18678 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18702 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.edit',
          ),
          1 => 
          array (
            0 => 'accountID',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18739 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18755 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.channel.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18796 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18812 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18826 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18856 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.persons',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18873 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18889 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18905 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18940 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.comments.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18970 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.invoices',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      18996 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.subscriptions',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19017 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19037 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.pdf',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19051 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.print',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19066 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19080 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.statement.send',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19095 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.send',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19112 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.quotes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19133 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.creditnotes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19147 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.lpos',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19165 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.projects',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19209 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.details',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'customerID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19229 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19268 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19293 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.documents.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'leadID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19316 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.sms',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19334 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.sms.send',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19359 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      19394 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19410 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19426 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customers.groups.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19464 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19480 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.notes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19502 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19522 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19537 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.calllog.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19555 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19591 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19607 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.customer.events.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19647 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::3EW2Iz3sRkcQClbV',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      19677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19700 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'url.get',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      19731 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19747 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19764 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19779 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.stages',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19796 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19817 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19836 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19852 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19868 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.calllog.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19888 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19907 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19923 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19939 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.notes.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19958 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19977 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      19993 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20009 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.task.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20036 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20055 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20071 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20087 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.deals.appointments.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20128 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20144 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20158 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20174 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20208 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20224 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20240 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.pipeline.stage.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20315 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.status.export',
          ),
          1 => 
          array (
            0 => 'statusID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20364 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.source.export',
          ),
          1 => 
          array (
            0 => 'sourceID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20417 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crm.reports.leads.industry.export',
          ),
          1 => 
          array (
            0 => 'sourceID',
            1 => 'start',
            2 => 'end',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'callback.ipay',
          ),
          1 => 
          array (
            0 => 'business_code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20483 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'callback.pesapal',
          ),
          1 => 
          array (
            0 => 'business_code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20513 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'daraja.payment.callback',
          ),
          1 => 
          array (
            0 => 'business_code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20530 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'daraja.payment.cancel.callback',
          ),
          1 => 
          array (
            0 => 'business_code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20583 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.dashboard',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20599 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20616 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.budget',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20631 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.users',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20649 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.activity',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20667 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.settings',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20681 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20733 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20769 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.discussions',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20795 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.discussions.delete',
          ),
          1 => 
          array (
            0 => 'jobCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20814 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.task',
          ),
          1 => 
          array (
            0 => 'jobCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20834 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20863 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.show',
          ),
          1 => 
          array (
            0 => 'projectID',
            1 => 'taskID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20878 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.complete',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'taskcode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20893 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.edit',
          ),
          1 => 
          array (
            0 => 'projectID',
            1 => 'taskID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20931 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.task.section',
          ),
          1 => 
          array (
            0 => 'jobCode',
            1 => 'sectionCode',
            2 => 'sectionName',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      20969 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      20985 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21005 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.all.user.incomplete',
          ),
          1 => 
          array (
            0 => 'userID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21039 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.group.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21055 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.group.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21108 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.comment.delete',
          ),
          1 => 
          array (
            0 => 'projectCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21139 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.file.delete',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21183 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.filter.overdue',
          ),
          1 => 
          array (
            0 => 'projectID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21198 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.filter.today',
          ),
          1 => 
          array (
            0 => 'projectID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21221 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'task.last.seven.days',
          ),
          1 => 
          array (
            0 => 'projectID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21258 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.index',
          ),
          1 => 
          array (
            0 => 'pid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21285 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.edit',
          ),
          1 => 
          array (
            0 => 'projectID',
            1 => 'ticketID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21299 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.show',
          ),
          1 => 
          array (
            0 => 'projectID',
            1 => 'ticketID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21334 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.update',
          ),
          1 => 
          array (
            0 => 'tid',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21376 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'tid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21417 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.comment.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21472 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.tickets.document.delete',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21490 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.notes',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21517 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.notes.edit',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'notecode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21533 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.notes.update',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21549 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.notes.delete',
          ),
          1 => 
          array (
            0 => 'pid',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21566 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.files',
          ),
          1 => 
          array (
            0 => 'jobcode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21582 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events',
          ),
          1 => 
          array (
            0 => 'jobcode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21625 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.edit',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'eventcode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21641 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.update',
          ),
          1 => 
          array (
            0 => 'eventcode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21658 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.results',
          ),
          1 => 
          array (
            0 => 'jobcode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21684 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.show',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21700 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.events.delete',
          ),
          1 => 
          array (
            0 => 'jobcode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21716 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'job.goals',
          ),
          1 => 
          array (
            0 => 'jobcode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21778 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21794 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21810 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.products.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21839 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      21856 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21872 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.store',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21907 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.edit',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'pid',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      21923 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21939 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21977 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      21993 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22023 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22050 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22066 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22085 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22100 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22119 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.invoices',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22134 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.renew',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22150 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.cancel',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22165 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscriptions.plan',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22199 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::9oz0tqHLYxNk1ujn',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22221 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.subscription.paypal.cancel',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22256 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.customer.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      22287 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscription.invoice.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22341 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22357 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22371 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22387 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22413 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.export',
          ),
          1 => 
          array (
            0 => 'formart',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      22448 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.groups.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22464 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.groups.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22480 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.customer.groups.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22516 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22532 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22548 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.category.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22594 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22624 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22640 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22655 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.vendor.trash.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22691 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22723 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.category.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22749 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      22781 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22795 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22811 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22827 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22849 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.index',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.create',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22884 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.store',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22910 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.edit',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'questionID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22926 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.update',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'questionID',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22942 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.survey.questions.delete',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'questionID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      22975 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.stock.mail',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23016 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.settings.account.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23060 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.supplier.vendor.person',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      23104 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23120 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23140 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23155 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23182 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.export',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      23215 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'description',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23232 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'description.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23266 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.inventory',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23310 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.inventory.update',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'productCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23354 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.inventory.settings.update',
          ),
          1 => 
          array (
            0 => 'productCode',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23409 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.products.inventory.outlet.link.delete',
          ),
          1 => 
          array (
            0 => 'productCode',
            1 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23442 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.images',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23458 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.images.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23475 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.images.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23511 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.category.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23528 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.category.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23561 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.brand.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23578 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.brand.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23610 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.price',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23649 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.category.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23680 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.brand.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23711 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.price.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23753 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23767 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23783 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23799 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.pdf',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23813 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.product.stock.order.print',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23833 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.stock.delivered',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23865 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.orders.details',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23892 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.orders.delivery.allocation',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23928 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.user.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23944 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.user.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      23971 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.user.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24007 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.routes.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24021 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.routes.view',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24060 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.warehousing.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24076 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.warehousing.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24120 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'salesflow.inventory.allocate.items',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24177 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24198 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.business.delete.logo',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24231 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24247 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.users.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24287 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.show',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'section',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      24314 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.translate.section',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24340 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24356 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24372 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'language.destroy',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24406 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.show',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24420 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24436 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24452 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.roles.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24501 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.application.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24518 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.applications.billing',
          ),
          1 => 
          array (
            0 => 'applicationID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24576 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.status',
          ),
          1 => 
          array (
            0 => 'code',
            1 => 'statusID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      24605 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.delete',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24628 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.pesapal.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24645 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.pesapal.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24664 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.paypal.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24681 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.paypal.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24703 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.kepler9',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24720 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.kepler9.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24738 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.ipay',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24755 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.ipay.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24774 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.mpesa.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24791 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.payments.mpesa.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24825 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.phonenumber',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24842 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.phonenumber.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24870 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.paybillnumber',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24887 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.paybillnumber.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24914 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.tillnumber',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24931 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.payments.integrations.mpesa.tillnumber.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      24974 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.daraja.register.urls',
          ),
          1 => 
          array (
            0 => 'businessID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      25028 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.twilio.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      25045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.twilio.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      25073 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.africasTalking.edit',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      25090 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'settings.integrations.telephony.africasTalking.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      25131 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::LMXXBfzmxJBIuLQP',
          ),
          1 => 
          array (
            0 => 'mailCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      25166 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::nNaP2jRDlnzdLlaw',
          ),
          1 => 
          array (
            0 => 'trackCode',
            1 => 'invoiceID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      25204 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::7y4ZLgcsif4rIDNq',
          ),
          1 => 
          array (
            0 => 'trackCode',
            1 => 'salesID',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      25228 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::UjWsAiOZsj4XhVFz',
          ),
          1 => 
          array (
            0 => 'trackCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      25261 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'wingu.ticket.details',
          ),
          1 => 
          array (
            0 => 'ticketCode',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => NULL,
          1 => NULL,
          2 => NULL,
          3 => NULL,
          4 => false,
          5 => false,
          6 => 0,
        ),
      ),
    ),
    4 => NULL,
  ),
  'attributes' => 
  array (
    'pesapal-callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pesapal-callback',
      'action' => 
      array (
        'as' => 'pesapal-callback',
        'uses' => 'Knox\\Pesapal\\PesapalAPIController@handleCallback',
        'controller' => 'Knox\\Pesapal\\PesapalAPIController@handleCallback',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pesapal-ipn' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pesapal-ipn',
      'action' => 
      array (
        'as' => 'pesapal-ipn',
        'uses' => 'Knox\\Pesapal\\PesapalAPIController@handleIPN',
        'controller' => 'Knox\\Pesapal\\PesapalAPIController@handleIPN',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'debugbar.openhandler' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/open',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@handle',
        'as' => 'debugbar.openhandler',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@handle',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'debugbar.clockwork' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/clockwork/{id}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@clockwork',
        'as' => 'debugbar.clockwork',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\OpenHandlerController@clockwork',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'debugbar.assets.css' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/assets/stylesheets',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@css',
        'as' => 'debugbar.assets.css',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@css',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'debugbar.assets.js' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_debugbar/assets/javascript',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@js',
        'as' => 'debugbar.assets.js',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\AssetController@js',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'debugbar.cache.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => '_debugbar/cache/{key}/{tags?}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Barryvdh\\Debugbar\\Middleware\\DebugbarEnabled',
        ),
        'uses' => 'Barryvdh\\Debugbar\\Controllers\\CacheController@delete',
        'as' => 'debugbar.cache.delete',
        'controller' => 'Barryvdh\\Debugbar\\Controllers\\CacheController@delete',
        'namespace' => 'Barryvdh\\Debugbar\\Controllers',
        'prefix' => '_debugbar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'scribe' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'wingu/v2/api',
      'action' => 
      array (
        'middleware' => 
        array (
        ),
        'uses' => 'Knuckles\\Scribe\\Http\\Controller@webpage',
        'controller' => 'Knuckles\\Scribe\\Http\\Controller@webpage',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'scribe',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'scribe.postman' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'wingu/v2/api.postman',
      'action' => 
      array (
        'middleware' => 
        array (
        ),
        'uses' => 'Knuckles\\Scribe\\Http\\Controller@postman',
        'controller' => 'Knuckles\\Scribe\\Http\\Controller@postman',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'scribe.postman',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'scribe.openapi' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'wingu/v2/api.openapi',
      'action' => 
      array (
        'middleware' => 
        array (
        ),
        'uses' => 'Knuckles\\Scribe\\Http\\Controller@openapi',
        'controller' => 'Knuckles\\Scribe\\Http\\Controller@openapi',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'scribe.openapi',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.message' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/message/{name}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\HttpConnectionHandler@__invoke',
        'controller' => 'Livewire\\Controllers\\HttpConnectionHandler',
        'as' => 'livewire.message',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.upload-file' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/upload-file',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'controller' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'as' => 'livewire.upload-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.preview-file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/preview-file/{filename}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'controller' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'as' => 'livewire.preview-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::z2SaceRMZY2E8ZZ5' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'as' => 'generated::z2SaceRMZY2E8ZZ5',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::zXkCivBQrCUodhYs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js.map',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'as' => 'generated::zXkCivBQrCUodhYs',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::HGPUSD7koRhZ7z43' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
        2 => 'POST',
        3 => 'PUT',
        4 => 'PATCH',
        5 => 'DELETE',
        6 => 'OPTIONS',
      ),
      'uri' => 'laratrust',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => '\\Illuminate\\Routing\\RedirectController@__invoke',
        'controller' => '\\Illuminate\\Routing\\RedirectController',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust',
        'where' => 
        array (
        ),
        'as' => 'generated::HGPUSD7koRhZ7z43',
      ),
      'fallback' => false,
      'defaults' => 
      array (
        'destination' => '/laratrust/roles-assignment',
        'status' => 302,
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.permissions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/permissions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.permissions.index',
        'uses' => 'Laratrust\\Http\\Controllers\\PermissionsController@index',
        'controller' => 'Laratrust\\Http\\Controllers\\PermissionsController@index',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.permissions.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/permissions/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.permissions.create',
        'uses' => 'Laratrust\\Http\\Controllers\\PermissionsController@create',
        'controller' => 'Laratrust\\Http\\Controllers\\PermissionsController@create',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.permissions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'laratrust/permissions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.permissions.store',
        'uses' => 'Laratrust\\Http\\Controllers\\PermissionsController@store',
        'controller' => 'Laratrust\\Http\\Controllers\\PermissionsController@store',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.permissions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/permissions/{permission}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.permissions.edit',
        'uses' => 'Laratrust\\Http\\Controllers\\PermissionsController@edit',
        'controller' => 'Laratrust\\Http\\Controllers\\PermissionsController@edit',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.permissions.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'laratrust/permissions/{permission}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.permissions.update',
        'uses' => 'Laratrust\\Http\\Controllers\\PermissionsController@update',
        'controller' => 'Laratrust\\Http\\Controllers\\PermissionsController@update',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.index',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@index',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@index',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.create',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@create',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@create',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'laratrust/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.store',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@store',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@store',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.show',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@show',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@show',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles/{role}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.edit',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@edit',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@edit',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'laratrust/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.update',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@update',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@update',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'laratrust/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles.destroy',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesController@destroy',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesController@destroy',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles-assignment.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles-assignment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles-assignment.index',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@index',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@index',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles-assignment.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laratrust/roles-assignment/{roles_assignment}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles-assignment.edit',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@edit',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@edit',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laratrust.roles-assignment.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'laratrust/roles-assignment/{roles_assignment}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'laratrust.roles-assignment.update',
        'uses' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@update',
        'controller' => 'Laratrust\\Http\\Controllers\\RolesAssignmentController@update',
        'namespace' => 'Laratrust\\Http\\Controllers',
        'prefix' => 'laratrust/',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::TuhplJ1VacogjT10' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/hrm/recruitment/job/{businessCode}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@getAllJobs',
        'controller' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@getAllJobs',
        'namespace' => 'App\\Http\\Controllers\\Api',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::TuhplJ1VacogjT10',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::ZmegXaY7dVPOImfM' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/hrm/recruitment/job/{businessCode}/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@getJob',
        'controller' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@getJob',
        'namespace' => 'App\\Http\\Controllers\\Api',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::ZmegXaY7dVPOImfM',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::Z2xwIeHPJPwurgjk' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/hrm/recruitment/job',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@createJob',
        'controller' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@createJob',
        'namespace' => 'App\\Http\\Controllers\\Api',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::Z2xwIeHPJPwurgjk',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::Ne1juPa0tqGcMqDu' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'api/hrm/recruitment/job/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@updateJob',
        'controller' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@updateJob',
        'namespace' => 'App\\Http\\Controllers\\Api',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::Ne1juPa0tqGcMqDu',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::2H1D4nC0Utc0PxIa' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'api/hrm/recruitment/job/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@deleteJob',
        'controller' => 'App\\Http\\Controllers\\Api\\hr\\recruitment\\jobsController@deleteJob',
        'namespace' => 'App\\Http\\Controllers\\Api',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::2H1D4nC0Utc0PxIa',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'home.page' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '/',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'home.page',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@showLoginForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::pPhbFdMDrWiYGsY8' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@login',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@login',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::pPhbFdMDrWiYGsY8',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'logout' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'logout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'logout',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'register' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@showRegistrationForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@showRegistrationForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'register',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::0HlWIofTzSxKv1Fc' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@register',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@register',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::0HlWIofTzSxKv1Fc',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.request' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/reset',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@showLinkRequestForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@showLinkRequestForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.request',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.email' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/email',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@sendResetLinkEmail',
        'controller' => 'App\\Http\\Controllers\\Auth\\ForgotPasswordController@sendResetLinkEmail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.email',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.reset' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/reset/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@showResetForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@showResetForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.reset',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/reset',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@reset',
        'controller' => 'App\\Http\\Controllers\\Auth\\ResetPasswordController@reset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'password/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@showConfirmForm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@showConfirmForm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.confirm',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::lznw6LDjXaPKv9wh' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'password/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@confirm',
        'controller' => 'App\\Http\\Controllers\\Auth\\ConfirmPasswordController@confirm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::lznw6LDjXaPKv9wh',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.notice' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@show',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.notice',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify/{id}/{hash}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@verify',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@verify',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.resend' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'email/resend',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\VerificationController@resend',
        'controller' => 'App\\Http\\Controllers\\Auth\\VerificationController@resend',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.resend',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::f3TDHeBFch6gjd8J' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'logout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@logout',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::f3TDHeBFch6gjd8J',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'signup' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'signup/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'signup',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'signup.page' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'signup',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup_form',
        'controller' => 'App\\Http\\Controllers\\Auth\\RegisterController@signup_form',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'signup.page',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'account.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'verify/account/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_account',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_account',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'account.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verify.business.email' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'verify/business/email/{code}/{email}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_business_email',
        'controller' => 'App\\Http\\Controllers\\Auth\\LoginController@verify_business_email',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verify.business.email',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\dashboard\\dashboardController@dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/dashboard',
        'where' => 
        array (
        ),
        'as' => 'wingu.dashboard',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\dashboard\\dashboardController@home',
        'as' => 'finance.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\dashboard\\dashboardController@home',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.ajax.product.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.ajax.product.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@index',
        'as' => 'finance.contact.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@create',
        'as' => 'finance.contact.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@store',
        'as' => 'finance.contact.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@edit',
        'as' => 'finance.contact.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@update',
        'as' => 'finance.contact.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.contact.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete',
        'as' => 'finance.contact.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contactperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/delete-contact-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete_contact_person',
        'as' => 'finance.contactperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_list',
        'as' => 'finance.contact.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_store',
        'as' => 'finance.contact.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.comments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/comments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@index',
        'as' => 'finance.customers.comments',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.comments.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/comments/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@store',
        'as' => 'finance.customers.comments.post',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.comments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/comments/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@delete',
        'as' => 'finance.customers.comments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\commentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.invoices' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.invoices',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.subscriptions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/subscriptions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.subscriptions',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.quotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.quotes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.creditnotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/creditnotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.creditnotes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.lpos' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/lpos',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.lpos',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.projects' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/projects',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'as' => 'finance.customers.projects',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@index',
        'as' => 'finance.customers.statement',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.statement.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/statement/convert/{format}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@convert',
        'as' => 'finance.customers.statement.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.statement.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/statement/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@mail',
        'as' => 'finance.customers.statement.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customers.statement.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{code}/statement/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@send',
        'as' => 'finance.customers.statement.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\statementController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@index',
        'as' => 'finance.customer.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.mail.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/mail/{customerID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@details',
        'as' => 'finance.customer.mail.details',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@send',
        'as' => 'finance.customer.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@store',
        'as' => 'finance.customer.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@index',
        'as' => 'finance.customer.documents',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@store',
        'as' => 'finance.customer.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/documents/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@update',
        'as' => 'finance.customer.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/documents/{code}/{leadID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@delete',
        'as' => 'finance.customer.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@index',
        'as' => 'finance.customer.sms',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@send',
        'as' => 'finance.customer.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@index',
        'as' => 'finance.customer.notes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@store',
        'as' => 'finance.customer.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{code}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@update',
        'as' => 'finance.customer.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@delete',
        'as' => 'finance.customer.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/calllogs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@index',
        'as' => 'finance.customer.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@store',
        'as' => 'finance.customer.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/{code}/calllog/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@update',
        'as' => 'finance.customer.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@delete',
        'as' => 'finance.customer.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/{code}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@index',
        'as' => 'finance.customer.events',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@store',
        'as' => 'finance.customer.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/events/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@update',
        'as' => 'finance.customer.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/events/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@delete',
        'as' => 'finance.customer.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import',
        'as' => 'finance.contact.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import_contact',
        'as' => 'finance.contact.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@download_import_sample',
        'as' => 'finance.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@export',
        'as' => 'finance.contact.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@index',
        'as' => 'finance.contact.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@store',
        'as' => 'finance.contact.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@edit',
        'as' => 'finance.contact.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/customer/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@update',
        'as' => 'finance.contact.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.contact.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/customer/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@delete',
        'as' => 'finance.contact.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\contact\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@index',
        'as' => 'finance.supplier.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@create',
        'as' => 'finance.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post-supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@store',
        'as' => 'finance.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@edit',
        'as' => 'finance.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@update',
        'as' => 'finance.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@show',
        'as' => 'finance.supplier.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete',
        'as' => 'finance.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.vendor.person' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/delete-supplier-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete_contact_person',
        'as' => 'finance.supplier.vendor.person',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'vendor.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@trash',
        'as' => 'vendor.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@download_import_sample',
        'as' => 'finance.supplier.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/supplier/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_list',
        'as' => 'finance.supplier.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/supplier/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_save',
        'as' => 'finance.supplier.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\supplierController@express_save',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@index',
        'as' => 'finance.supplier.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@store',
        'as' => 'finance.supplier.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@edit',
        'as' => 'finance.supplier.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@update',
        'as' => 'finance.supplier.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.supplier.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@delete',
        'as' => 'finance.supplier.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'supplier.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@index',
        'as' => 'supplier.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'supplier.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/supplier/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@import',
        'as' => 'supplier.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'supplier.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/supplier/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@export',
        'as' => 'supplier.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\supplier\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@index',
        'as' => 'finance.product.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@create',
        'as' => 'finance.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@store',
        'as' => 'finance.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@edit',
        'as' => 'finance.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@update',
        'as' => 'finance.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@details',
        'as' => 'finance.products.details',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@destroy',
        'as' => 'finance.products.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_list',
        'as' => 'finance.product.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.express.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_store',
        'as' => 'finance.products.express.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@index',
        'as' => 'finance.products.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.post.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@import',
        'as' => 'finance.products.post.import',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@export',
        'as' => 'finance.products.export',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.sample.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@download_import_sample',
        'as' => 'finance.products.sample.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.description' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/description',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description',
        'as' => 'finance.description',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.description.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{code}/description/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description_update',
        'as' => 'finance.description.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@description_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/price/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price',
        'as' => 'finance.price',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.price.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/price/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price_update',
        'as' => 'finance.price.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@price_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.variants.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/{code}/variants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@index',
        'as' => 'finance.products.variants.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.variants.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/item/{code}/variants/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@store',
        'as' => 'finance.products.variants.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.variants.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/item/{code}/variants/{variantID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@edit',
        'as' => 'finance.products.variants.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.products.variants.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/item/variants/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@update',
        'as' => 'finance.products.variants.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\variantsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.inventory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/inventory/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory',
        'as' => 'finance.inventory',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.inventory.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/{code}/inventory/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_update',
        'as' => 'finance.inventory.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.inventory.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/inventory/settings/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_settings',
        'as' => 'finance.inventory.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.inventory.outlet.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/inventory/outlet/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_outlet_link',
        'as' => 'finance.inventory.outlet.link',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@inventory_outlet_link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.inventory.outlet.link.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{productID}/inventory/outle/{code}/link/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@delete_inventroy',
        'as' => 'finance.inventory.outlet.link.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\inventoryController@delete_inventroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/images/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@edit',
        'as' => 'finance.product.images',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.images.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@update',
        'as' => 'finance.product.images.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.images.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@store',
        'as' => 'finance.product.images.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.images.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/images/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@destroy',
        'as' => 'finance.product.images.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\imagesController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.settings.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@edit',
        'as' => 'finance.product.settings.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/{code}/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@update',
        'as' => 'finance.product.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.control' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/stock/control',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@index',
        'as' => 'finance.product.stock.control',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@order',
        'as' => 'finance.product.stock.order',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@show',
        'as' => 'finance.product.stock.order.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/post/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@store',
        'as' => 'finance.product.stock.order.post',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.ajax.product.stock.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/lpo/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.ajax.product.stock.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@edit',
        'as' => 'finance.product.stock.order.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/order/stock/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@update',
        'as' => 'finance.product.stock.order.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.stock.order.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{code}/convert/{format}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@convert',
        'as' => 'finance.product.stock.order.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.stock.delivered' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{code}/delivered',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delivered',
        'as' => 'finance.stock.delivered',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delivered',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.stock.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/order/stock/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delete',
        'as' => 'finance.stock.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.stock.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/stock/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@mail',
        'as' => 'finance.stock.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.stock.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/stock/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@send',
        'as' => 'finance.stock.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.stock.attach' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/stock/attach/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@attachment_files',
        'as' => 'finance.stock.attach',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\stockcontrolController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@category',
        'as' => 'finance.product.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\productController@category',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.brand' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@index',
        'as' => 'finance.product.brand',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.brand.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/brand/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@store',
        'as' => 'finance.product.brand.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.brand.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@edit',
        'as' => 'finance.product.brand.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.brand.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/product.brand/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@update',
        'as' => 'finance.product.brand.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.brand.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/brand/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@destroy',
        'as' => 'finance.product.brand.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\brandController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.tags' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@index',
        'as' => 'finance.product.tags',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/tags/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@store',
        'as' => 'finance.product.tags.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@edit',
        'as' => 'finance.product.tags.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/product.tags/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@update',
        'as' => 'finance.product.tags.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/tags/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@destroy',
        'as' => 'finance.product.tags.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\tagsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@index',
        'as' => 'finance.product.attributes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@store',
        'as' => 'finance.product.attributes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@edit',
        'as' => 'finance.product.attributes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@update',
        'as' => 'finance.product.attributes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@delete',
        'as' => 'finance.product.attributes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.value.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/{code}/values',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@create',
        'as' => 'finance.product.attributes.value.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.value.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/values/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@store',
        'as' => 'finance.product.attributes.value.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.value.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/values/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@edit',
        'as' => 'finance.product.attributes.value.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.value.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/items/attributes/values/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@update',
        'as' => 'finance.product.attributes.value.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.product.attributes.value.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/items/attributes/values/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@delete',
        'as' => 'finance.product.attributes.value.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\products\\attributeValueController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@index',
        'as' => 'finance.expense.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@create',
        'as' => 'finance.expense.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@store',
        'as' => 'finance.expense.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@edit',
        'as' => 'finance.expense.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@update',
        'as' => 'finance.expense.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@destroy',
        'as' => 'finance.expense.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.file.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expence/{id}/file/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@file_delete',
        'as' => 'finance.expense.file.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@file_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.file.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expence/{id}/file/download',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@download',
        'as' => 'finance.expense.file.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseController@download',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@index',
        'as' => 'finance.expense.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@store',
        'as' => 'finance.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense-category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@edit',
        'as' => 'finance.expense.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/expense-category/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@update',
        'as' => 'finance.expense.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.expense.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/expense-category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@destroy',
        'as' => 'finance.expense.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.express.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@express',
        'as' => 'finance.express.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.express.expense.category.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/expense/category/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@list',
        'as' => 'finance.express.expense.category.list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\expense\\expenseCategoryController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.received' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@index',
        'as' => 'finance.payments.received',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@create',
        'as' => 'finance.payments.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@store',
        'as' => 'finance.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@edit',
        'as' => 'finance.payments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@update',
        'as' => 'finance.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@show',
        'as' => 'finance.payments.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.received.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@files',
        'as' => 'finance.received.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.receivedfile.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/paymentsfile/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_store',
        'as' => 'finance.receivedfile.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.retrive.client' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/retrive_client/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@retrive_client',
        'as' => 'finance.retrive.client',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@retrive_client',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.file.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payment/delete/file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_delete',
        'as' => 'finance.payment.file.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@file_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.file.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payment/download/file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@download',
        'as' => 'finance.payment.file.download',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@download',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@delete',
        'as' => 'finance.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@print',
        'as' => 'finance.payments.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@pdf',
        'as' => 'finance.payments.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/payments/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@mail',
        'as' => 'finance.payments.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payments.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/payments/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@send',
        'as' => 'finance.payments.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@index',
        'as' => 'finance.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@show',
        'as' => 'finance.invoice.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_invoice',
        'as' => 'finance.invoice.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{code}/convert/{format}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@convert',
        'as' => 'finance.invoice.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.deliverynote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{code}/deliverynote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@deliverynote',
        'as' => 'finance.invoice.deliverynote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@deliverynote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@update_file_status',
        'as' => 'finance.invoice.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/payment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@payment',
        'as' => 'finance.invoice.payment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.payments.stkpush' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/payment/stk/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\stkpushController@stkpush',
        'as' => 'finance.invoice.payments.stkpush',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\daraja\\stkpushController@stkpush',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.product.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@create',
        'as' => 'finance.invoice.product.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.due' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/due/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@due_invoices',
        'as' => 'finance.invoice.due',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@due_invoices',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.product.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@store',
        'as' => 'finance.invoice.product.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.product.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@edit',
        'as' => 'finance.invoice.product.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.product.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@update',
        'as' => 'finance.invoice.product.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\productinvoiceController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@mail',
        'as' => 'finance.invoice.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.send.mail' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/send/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@send',
        'as' => 'finance.invoice.send.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/invoice/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment',
        'as' => 'finance.invoice.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment_files',
        'as' => 'finance.invoice.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/attachment/{ud}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_file',
        'as' => 'finance.invoice.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.product.test' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/create/test',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceTestController@create',
        'as' => 'finance.invoice.product.test',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\invoiceTestController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.recurring.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/recurring/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@create',
        'as' => 'finance.invoice.recurring.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.recurring.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/recurring/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@store',
        'as' => 'finance.invoice.recurring.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.recurring.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/invoice/recurring/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@edit',
        'as' => 'finance.invoice.recurring.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.invoice.recurring.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/invoice/recurring/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@update',
        'as' => 'finance.invoice.recurring.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\invoice\\recurringController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@index',
        'as' => 'finance.salesorders.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@create',
        'as' => 'finance.salesorders.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@store',
        'as' => 'finance.salesorders.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@edit',
        'as' => 'finance.salesorders.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update',
        'as' => 'finance.salesorders.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_salesorder',
        'as' => 'finance.salesorders.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_salesorder',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@show',
        'as' => 'finance.salesorders.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@pdf',
        'as' => 'finance.salesorders.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@print',
        'as' => 'finance.salesorders.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment',
        'as' => 'finance.salesorders.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment_files',
        'as' => 'finance.salesorders.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update_file_status',
        'as' => 'finance.salesorders.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_file',
        'as' => 'finance.salesorders.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/status/{salesorderID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@change_status',
        'as' => 'finance.salesorders.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@convert_to_invoice',
        'as' => 'finance.salesorders.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/salesorders/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@mail',
        'as' => 'finance.salesorders.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.salesorders.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/salesorders/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@send',
        'as' => 'finance.salesorders.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\salesorders\\salesordersController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_generated_number',
        'as' => 'finance.settings.salesorders.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_defaults',
        'as' => 'finance.settings.salesorders.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/salesorders/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'as' => 'finance.settings.salesorders.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.salesorders.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/salesorders/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_tabs',
        'as' => 'finance.settings.salesorders.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\salesordersController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@index',
        'as' => 'finance.quotes.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@create',
        'as' => 'finance.quotes.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@store',
        'as' => 'finance.quotes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@edit',
        'as' => 'finance.quotes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update',
        'as' => 'finance.quotes.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_quotes',
        'as' => 'finance.quotes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_quotes',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@show',
        'as' => 'finance.quotes.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@pdf',
        'as' => 'finance.quotes.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@print',
        'as' => 'finance.quotes.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment',
        'as' => 'finance.quotes.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment_files',
        'as' => 'finance.quotes.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update_file_status',
        'as' => 'finance.quotes.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_file',
        'as' => 'finance.quotes.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/attachment/{quotesID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@change_status',
        'as' => 'finance.quotes.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@convert_to_invoice',
        'as' => 'finance.quotes.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/quotes/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@mail',
        'as' => 'finance.quotes.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.quotes.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/quotes/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@send',
        'as' => 'finance.quotes.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\quotes\\quotesController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@index',
        'as' => 'finance.lpo.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@create',
        'as' => 'finance.lpo.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@store',
        'as' => 'finance.lpo.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@edit',
        'as' => 'finance.lpo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update',
        'as' => 'finance.lpo.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_lpo',
        'as' => 'finance.lpo.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_lpo',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@show',
        'as' => 'finance.lpo.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@pdf',
        'as' => 'finance.lpo.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@print',
        'as' => 'finance.lpo.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment',
        'as' => 'finance.lpo.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment_files',
        'as' => 'finance.lpo.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/file/{status}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update_file_status',
        'as' => 'finance.lpo.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/attached/file/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_file',
        'as' => 'finance.lpo.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/attachment/{lpoID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@change_status',
        'as' => 'finance.lpo.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@convert_to_invoice',
        'as' => 'finance.lpo.convert',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@convert_to_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/purchaseorders/{id}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@mail',
        'as' => 'finance.lpo.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.lpo.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/purchaseorders/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@send',
        'as' => 'finance.lpo.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\lpo\\lpoController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@index',
        'as' => 'finance.creditnote.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@create',
        'as' => 'finance.creditnote.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@store',
        'as' => 'finance.creditnote.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@edit',
        'as' => 'finance.creditnote.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update',
        'as' => 'finance.creditnote.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_creditnote',
        'as' => 'finance.creditnote.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_creditnote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@show',
        'as' => 'finance.creditnote.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{code}/generate/{format}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@generate',
        'as' => 'finance.creditnote.generate',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.attachment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/attachment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment',
        'as' => 'finance.creditnote.attachment',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.attachment.files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/attachment/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment_files',
        'as' => 'finance.creditnote.attachment.files',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/file/{status}/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update_file_status',
        'as' => 'finance.creditnote.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.attachment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/attached/file/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_file',
        'as' => 'finance.creditnote.attachment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.status.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/attachment/{creditnoteID}/{status}/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@change_status',
        'as' => 'finance.creditnote.status.change',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@change_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.apply.credit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/apply/credit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@apply_credit',
        'as' => 'finance.creditnote.apply.credit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@apply_credit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/creditnote/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@mail',
        'as' => 'finance.creditnote.mail',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.creditnote.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/creditnote/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@send',
        'as' => 'finance.creditnote.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\creditnote\\creditnoteController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_generated_number',
        'as' => 'finance.settings.invoice.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_defaults',
        'as' => 'finance.settings.invoice.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.workflow' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/workflow',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.workflow',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.workflow.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/workflow/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_workflow',
        'as' => 'finance.settings.invoice.workflow.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_workflow',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.payments',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/payments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_payments',
        'as' => 'finance.settings.invoice.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_payments',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_tabs',
        'as' => 'finance.settings.invoice.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/invoice/{id}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'as' => 'finance.settings.invoice.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.invoice.print.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/invoice/print/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_print',
        'as' => 'finance.settings.invoice.print.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\invoiceController@update_print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_generated_number',
        'as' => 'finance.settings.quote.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_defaults',
        'as' => 'finance.settings.quote.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/quote/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'as' => 'finance.settings.quote.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.quote.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/quote/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_tabs',
        'as' => 'finance.settings.quote.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\quoteController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_generated_number',
        'as' => 'finance.settings.creditnote.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_defaults',
        'as' => 'finance.settings.creditnote.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/creditnote/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'as' => 'finance.settings.creditnote.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.creditnote.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/creditnote/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_tabs',
        'as' => 'finance.settings.creditnote.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\creditnoteController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.taxes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@index',
        'as' => 'finance.settings.taxes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.taxes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/taxes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store',
        'as' => 'finance.settings.taxes.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.taxes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@edit',
        'as' => 'finance.settings.taxes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/taxes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@update',
        'as' => 'finance.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/taxes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@delete',
        'as' => 'finance.settings.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.taxes.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/taxes/express',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@express_list',
        'as' => 'finance.settings.taxes.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.taxes.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/taxes/express/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store_express',
        'as' => 'finance.settings.taxes.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\taxesController@store_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo.generated.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/generated/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_generated_number',
        'as' => 'finance.settings.lpo.generated.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_generated_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo.defaults' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo/{id}/defaults',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo.defaults',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo.defaults.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/defaults/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_defaults',
        'as' => 'finance.settings.lpo.defaults.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_defaults',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo.tabs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/lpo/{id}/tabs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'as' => 'finance.settings.lpo.tabs',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.settings.lpo.tabs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/lpo/tabs/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_tabs',
        'as' => 'finance.settings.lpo.tabs.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\settings\\lpoController@update_tabs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@index',
        'as' => 'finance.account',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@create',
        'as' => 'finance.account.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@store',
        'as' => 'finance.account.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@edit',
        'as' => 'finance.account.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/account/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@update',
        'as' => 'finance.account.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/account/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@delete',
        'as' => 'finance.account.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.account.express' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@express',
        'as' => 'finance.account.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.bank.account.access' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/access/bank/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@list',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\account\\accountController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'finance.bank.account.access',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@index',
        'as' => 'finance.income.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@create',
        'as' => 'finance.income.category.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/income/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@store',
        'as' => 'finance.income.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@edit',
        'as' => 'finance.income.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/income/category/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@update',
        'as' => 'finance.income.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/income/category/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@delete',
        'as' => 'finance.income.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::SFZJScupksL6lA1d' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
        'as' => 'generated::SFZJScupksL6lA1d',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.income.express.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/income/category/get',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@get_express',
        'as' => 'finance.income.express.category',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\income\\incomeController@get_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/payment/modes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@index',
        'as' => 'finance.payment.mode',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@store',
        'as' => 'finance.payment.mode.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/settings/payment/modes/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@update',
        'as' => 'finance.payment.mode.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/settings/payment/modes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@delete',
        'as' => 'finance.payment.mode.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/express/payment/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_list',
        'as' => 'finance.payment.mode.express',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.payment.mode.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/express/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_store',
        'as' => 'finance.payment.mode.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\payments\\paymentModeController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\reportsController@dashboard',
        'as' => 'finance.report',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\reportsController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@index',
        'as' => 'finance.report.account.statement',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement.process' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/report/account-statement/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@process',
        'as' => 'finance.report.account.statement.process',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement.results' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/results',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@results',
        'as' => 'finance.report.account.statement.results',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement.export.excel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/excel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@excel',
        'as' => 'finance.report.account.statement.export.excel',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@excel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement.export.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@pdf',
        'as' => 'finance.report.account.statement.export.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.account.statement.export.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/account-statement/{clientID}/{from}/{to}/{transaction}/export/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@print',
        'as' => 'finance.report.account.statement.export.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\accountStatementController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.balancesheet' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/balancesheet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\balancesheetController@index',
        'as' => 'finance.report.balancesheet',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\balancesheetController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.customer' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@salesbycustomer',
        'as' => 'finance.report.sales.customer',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@salesbycustomer',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.customer.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@print',
        'as' => 'finance.report.sales.customer.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.customer.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/customer/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@pdf',
        'as' => 'finance.report.sales.customer.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\customerController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.item' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@salesbyitem',
        'as' => 'finance.report.sales.item',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@salesbyitem',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.item.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@print',
        'as' => 'finance.report.sales.item.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.item.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/item/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@pdf',
        'as' => 'finance.report.sales.item.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\itemController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.salesperson' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@salesbysalesperson',
        'as' => 'finance.report.sales.salesperson',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@salesbysalesperson',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.salesperson.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@print',
        'as' => 'finance.report.sales.salesperson.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.sales.salesperson.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/salesperson/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@pdf',
        'as' => 'finance.report.sales.salesperson.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\sales\\salespersonController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.receivables.balance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/customerbalances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@balance',
        'as' => 'finance.report.receivables.balance',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.receivables.balance.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/receivables/print/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@print',
        'as' => 'finance.report.receivables.balance.print',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.receivables.balance.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/sales/receivables/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@pdf',
        'as' => 'finance.report.receivables.balance.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\customerbalancesController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.receivables.aging' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/aging',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@report',
        'as' => 'finance.report.receivables.aging',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.receivables.aging.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/receivables/aging/{date}/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@extract',
        'as' => 'finance.report.receivables.aging.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\receivables\\agingController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.profitandloss' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/profilandloss',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@details',
        'as' => 'finance.report.profitandloss',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.profitandloss.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/profilandloss/pdf/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@pdf',
        'as' => 'finance.report.profitandloss.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\profitandlossController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.expensesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/expensesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@details',
        'as' => 'finance.report.expensesummary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.expensesummary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/expensesummary/extract/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@extract',
        'as' => 'finance.report.expensesummary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\expensesummaryController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.incomesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/incomesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@report',
        'as' => 'finance.report.incomesummary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.incomesummary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/incomesummary/{to}/{from}/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@extract',
        'as' => 'finance.report.incomesummary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\incomesummaryController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@report',
        'as' => 'finance.report.inventory.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.summary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/summary/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@extract',
        'as' => 'finance.report.inventory.summary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\summaryController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.valuation.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/valuation/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@report',
        'as' => 'finance.report.inventory.valuation.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.valuation.summary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/valuation/summary/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@extract',
        'as' => 'finance.report.inventory.valuation.summary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\valuationController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.sale.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/product-sale/summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@report',
        'as' => 'finance.report.inventory.sale.summary',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.report.inventory.sale.summary.extract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/report/inventory/product-sale/summary/{to}/{from}/extract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@extract',
        'as' => 'finance.report.inventory.sale.summary.extract',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\report\\inventory\\productsaleController@extract',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.items.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@index',
        'as' => 'finance.fee.items.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.items' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/get/fee/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@items',
        'as' => 'finance.fee.items',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@items',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.items.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/items/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@store',
        'as' => 'finance.fee.items.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.items.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/items/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@update',
        'as' => 'finance.fee.items.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.items.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/items/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@delete',
        'as' => 'finance.fee.items.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeItemsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.statements.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fees/statements',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@index',
        'as' => 'finance.fee.statements.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.general.statements' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/general/fee/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@general_fee_statement',
        'as' => 'finance.fee.general.statements',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@general_fee_statement',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.statements.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fees/statements/{code}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@view',
        'as' => 'finance.fee.statements.view',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\statementsController@view',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@index',
        'as' => 'finance.fee.structures.index',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@create',
        'as' => 'finance.fee.structures.create',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/structures/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@store',
        'as' => 'finance.fee.structures.store',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@edit',
        'as' => 'finance.fee.structures.edit',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/structures/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@update',
        'as' => 'finance.fee.structures.update',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@show',
        'as' => 'finance.fee.structures.show',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.link.items' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/structures/{code}/link/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@link_fee_items',
        'as' => 'finance.fee.structures.link.items',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@link_fee_items',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.link.items.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/{code}/link/items/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete_linked_fee_item',
        'as' => 'finance.fee.structures.link.items.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete_linked_fee_item',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.link.classes' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'finance/fee/structures/{code}/link/classes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@link_classes',
        'as' => 'finance.fee.structures.link.classes',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@link_classes',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.link.class.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/{code}/link/classes/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete_linked_class',
        'as' => 'finance.fee.structures.link.class.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete_linked_class',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'finance.fee.structures.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'finance/fee/structures/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete',
        'as' => 'finance.fee.structures.delete',
        'controller' => 'App\\Http\\Controllers\\app\\finance\\fee\\feeStructuresController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/finance',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\hrm\\dashboardController@dashboard',
        'as' => 'hrm.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\hrm\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@index',
        'as' => 'hrm.employee.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@create',
        'as' => 'hrm.employee.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@store',
        'as' => 'hrm.employee.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@update',
        'as' => 'hrm.employee.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@show',
        'as' => 'hrm.employee.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@edit',
        'as' => 'hrm.employee.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.personalinfo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/personal-info/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@edit',
        'as' => 'hrm.personalinfo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.personalinfo.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/personal-info/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@update',
        'as' => 'hrm.personalinfo.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\personalinfoController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.company.structure.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/company-structure/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@edit',
        'as' => 'hrm.employee.company.structure.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.company.structure.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/company/structure/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@update',
        'as' => 'hrm.employee.company.structure.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\companyStructureController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.salary.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/salary/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@edit',
        'as' => 'hrm.employee.salary.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.salary.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/salary/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@update',
        'as' => 'hrm.employee.salary.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\salaryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeebankinformation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/bank-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@edit',
        'as' => 'hrm.employeebankinformation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeebankinformation.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/bank-information/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@update',
        'as' => 'hrm.employeebankinformation.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\bankinformationController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeeacademicinformation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/academic-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit',
        'as' => 'hrm.employeeacademicinformation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeeacademicinformation.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/academic-information/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@update',
        'as' => 'hrm.employeeacademicinformation.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.institutioninformation.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/institution-information-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@post_institution',
        'as' => 'hrm.institutioninformation.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@post_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.institution.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-institution/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@delete_institution',
        'as' => 'hrm.institution.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@delete_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.institution.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/institution-edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit_institution',
        'as' => 'hrm.institution.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\academicinformationController@edit_institution',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.experience.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/experience/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@edit',
        'as' => 'hrm.experience.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.experience.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/experience/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@store',
        'as' => 'hrm.experience.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.experience.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/experience/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@delete',
        'as' => 'hrm.experience.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\workexperienceController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.allocation.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/allocation/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@edit',
        'as' => 'hrm.allocation.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.allocation.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/allocation/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@store',
        'as' => 'hrm.allocation.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.allocation.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete/{id}/allocation',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@delete',
        'as' => 'hrm.allocation.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\allocationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.famillyinfo.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/amily-information/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@edit',
        'as' => 'hrm.famillyinfo.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.famillyinfo.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/family-information-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@post_family',
        'as' => 'hrm.famillyinfo.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@post_family',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.famillyinfo.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-family-information/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@delete_family_information',
        'as' => 'hrm.famillyinfo.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\familyController@delete_family_information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeefile.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/files/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@edit',
        'as' => 'hrm.employeefile.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeefile.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/file-post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@post_file',
        'as' => 'hrm.employeefile.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@post_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeefile.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/delete-file/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@delete_file',
        'as' => 'hrm.employeefile.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\filesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employeerole.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/roles/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeerolesController@edit',
        'as' => 'hrm.employeerole.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\employeerolesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.deductions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/deductions/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@index',
        'as' => 'hrm.employee.deductions',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.deductions.allocate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/employee/deductions/allocate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@allocate',
        'as' => 'hrm.employee.deductions.allocate',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@allocate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.employee.deductions.delete.allocate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/employee/deductions/delete/{id}/allocate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@delete',
        'as' => 'hrm.employee.deductions.delete.allocate',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\employee\\deductionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/recruitment/job-openings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@index',
        'as' => 'hrm.recruitment.jobs',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/recruitment/job-openings/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@create',
        'as' => 'hrm.recruitment.jobs.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/recruitment/job-openings/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@store',
        'as' => 'hrm.recruitment.jobs.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/recruitment/job-openings/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@edit',
        'as' => 'hrm.recruitment.jobs.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/recruitment/job-openings/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@update',
        'as' => 'hrm.recruitment.jobs.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.recruitment.jobs.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/recruitment/job-openings/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@show',
        'as' => 'hrm.recruitment.jobs.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\recruitment\\jobsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@index',
        'as' => 'hrm.leave.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@create',
        'as' => 'hrm.leave.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@store',
        'as' => 'hrm.leave.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@edit',
        'as' => 'hrm.leave.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@update',
        'as' => 'hrm.leave.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.balance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/balance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@balance',
        'as' => 'hrm.leave.balance',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.calendar' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/calendar',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@calendar',
        'as' => 'hrm.leave.calendar',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@calendar',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.approve' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/approve',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@approve',
        'as' => 'hrm.leave.approve',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@approve',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.denay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/denay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@denay',
        'as' => 'hrm.leave.denay',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@denay',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@delete',
        'as' => 'hrm.leave.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.apply' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/apply',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@application',
        'as' => 'hrm.leave.apply',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@application',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.apply.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/apply/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@store',
        'as' => 'hrm.leave.apply.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.apply.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/apply/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@edit',
        'as' => 'hrm.leave.apply.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.apply.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/apply/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@update',
        'as' => 'hrm.leave.apply.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.apply.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/my-leave-list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@my_list',
        'as' => 'hrm.leave.apply.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\leaveapplyController@my_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.settings.holiday' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/holiday',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings.holiday',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.settings.holiday.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/leave/holiday/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_holiday',
        'as' => 'hrm.leave.settings.holiday.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@store_holiday',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.settings.workdays' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/workdays',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'as' => 'hrm.leave.settings.workdays',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\leave\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.leave.type' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/leave/type',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\hrm\\settingsController@leave_types',
        'as' => 'hrm.leave.type',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\hrm\\settingsController@leave_types',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.people' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/people',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@index',
        'as' => 'hrm.payroll.people',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.people.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@show',
        'as' => 'hrm.payroll.people.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.people.show.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/{id}/show/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@update',
        'as' => 'hrm.payroll.people.show.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\peopleController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payrolls',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@index',
        'as' => 'hrm.payroll.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payroll_details',
        'as' => 'hrm.payroll.details',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payroll_details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.payslip' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{employeeID}/{id}/payslip',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip',
        'as' => 'hrm.payroll.payslip',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.payslip.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{employeeID}/{id}/payslip/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip_delete',
        'as' => 'hrm.payroll.payslip.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@payslip_delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@delete_payroll',
        'as' => 'hrm.payroll.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@delete_payroll',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.mpesa.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/mpesa/payment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\mpesaPaymentController@process_payment',
        'as' => 'hrm.payroll.mpesa.payment',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\mpesaPaymentController@process_payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.process' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@create',
        'as' => 'hrm.payroll.process',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.process.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/process/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@run',
        'as' => 'hrm.payroll.process.post',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@run',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.process.review' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/process/{payroll_date}/{type}/{branch}/review',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@review',
        'as' => 'hrm.payroll.process.review',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@review',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.process.run' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/process/run',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@process',
        'as' => 'hrm.payroll.process.run',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\runPayrollController@process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.payday' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@payday',
        'as' => 'hrm.payroll.settings.payday',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@payday',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.payday.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@update',
        'as' => 'hrm.payroll.settings.payday.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.approval' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/approval',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval',
        'as' => 'hrm.payroll.settings.approval',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.approval.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/approval/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval_update',
        'as' => 'hrm.payroll.settings.approval.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\settingsController@approval_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.deduction' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@index',
        'as' => 'hrm.payroll.settings.deduction',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.deduction.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/deduction/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@store',
        'as' => 'hrm.payroll.settings.deduction.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.deduction.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@edit',
        'as' => 'hrm.payroll.settings.deduction.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.deduction.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/deduction/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@update',
        'as' => 'hrm.payroll.settings.deduction.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.deduction.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/deduction/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@delete',
        'as' => 'hrm.payroll.settings.deduction.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\deductionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.benefits' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@index',
        'as' => 'hrm.payroll.settings.benefits',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.benefits.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/benefits/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@store',
        'as' => 'hrm.payroll.settings.benefits.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.benefits.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@edit',
        'as' => 'hrm.payroll.settings.benefits.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.benefits.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/payroll/settings/benefits/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@update',
        'as' => 'hrm.payroll.settings.benefits.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.payroll.settings.benefits.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/payroll/settings/benefits/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@delete',
        'as' => 'hrm.payroll.settings.benefits.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\payroll\\benefitsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.calendar' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/calendar',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-hrcalendar',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\calendar\\calendarController@index',
        'as' => 'hrm.calendar',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\calendar\\calendarController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.positions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@index',
        'as' => 'hrm.positions',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.positions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/positions/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@store',
        'as' => 'hrm.positions.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.positions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@edit',
        'as' => 'hrm.positions.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.positions.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/positions/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@update',
        'as' => 'hrm.positions.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.positions.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/positions/{id}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@destroy',
        'as' => 'hrm.positions.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\positionsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@index',
        'as' => 'hrm.departments',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@create',
        'as' => 'hrm.departments.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/departments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@store',
        'as' => 'hrm.departments.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@edit',
        'as' => 'hrm.departments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/departments/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@update',
        'as' => 'hrm.departments.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.departments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/departments/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@delete',
        'as' => 'hrm.departments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\departmentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@index',
        'as' => 'hrm.branches',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@create',
        'as' => 'hrm.branches.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/branches/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@store',
        'as' => 'hrm.branches.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@edit',
        'as' => 'hrm.branches.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/organization/branches/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@update',
        'as' => 'hrm.branches.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.branches.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/organization/branches/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@delete',
        'as' => 'hrm.branches.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\organization\\branchesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.announcements.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/announcements',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@announcements_list',
        'as' => 'hrm.announcements.list',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@announcements_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.announcements.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/announcements/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@show',
        'as' => 'hrm.announcements.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\Announcements\\AnnouncementsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.exitdetails.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@index',
        'as' => 'hrm.exitdetails.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.exitdetails.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@create',
        'as' => 'hrm.exitdetails.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.exitdetails.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/exit-details/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@edit',
        'as' => 'hrm.exitdetails.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\ExitDetails\\ExitdetailsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.companyprofile.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@index',
        'as' => 'hrm.companyprofile.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.companyprofile.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@create',
        'as' => 'hrm.companyprofile.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.companyprofile.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/company-policy/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@edit',
        'as' => 'hrm.companyprofile.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\CompanyProfile\\CompanyProfileController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.my' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/myTravels',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@my_travels',
        'as' => 'hrm.travel.my',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@my_travels',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@index',
        'as' => 'hrm.travel.index',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@create',
        'as' => 'hrm.travel.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@store',
        'as' => 'hrm.travel.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@edit',
        'as' => 'hrm.travel.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@update',
        'as' => 'hrm.travel.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@delete',
        'as' => 'hrm.travel.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\travelController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@index',
        'as' => 'hrm.travel.expenses',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@create',
        'as' => 'hrm.travel.expenses.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/expenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@store',
        'as' => 'hrm.travel.expenses.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@edit',
        'as' => 'hrm.travel.expenses.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/travel/expenses/{id}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@update',
        'as' => 'hrm.travel.expenses.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@show',
        'as' => 'hrm.travel.expenses.show',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{id}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete',
        'as' => 'hrm.travel.expenses.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.travel.expenses.delete.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/travel/expenses/{expenseID}/delete/{id}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete_file',
        'as' => 'hrm.travel.expenses.delete.files',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\travel\\expensesController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@index',
        'as' => 'hrm.events',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/events/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@create',
        'as' => 'hrm.events.create',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@store',
        'as' => 'hrm.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/events/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@edit',
        'as' => 'hrm.events.edit',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'hrm/events/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@update',
        'as' => 'hrm.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'hrm.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'hrm/events/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@delete',
        'as' => 'hrm.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\hr\\events\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/hrm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'as' => 'crm.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'as' => 'crm.leads.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.canvas' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/canvas',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@canvas',
        'as' => 'crm.leads.canvas',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@canvas',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@show',
        'as' => 'crm.leads.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@create',
        'as' => 'crm.leads.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@store',
        'as' => 'crm.leads.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@edit',
        'as' => 'crm.leads.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@update',
        'as' => 'crm.leads.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@delete',
        'as' => 'crm.leads.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.convert' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/convert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@convert',
        'as' => 'crm.leads.convert',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\leadsController@convert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@notes',
        'as' => 'crm.leads.notes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@notes',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@store',
        'as' => 'crm.leads.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{code}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@update',
        'as' => 'crm.leads.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@delete',
        'as' => 'crm.leads.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/calllog',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@calllog',
        'as' => 'crm.leads.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@store_calllog',
        'as' => 'crm.leads.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@store_calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/{code}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@update_calllog',
        'as' => 'crm.leads.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@update_calllog',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/calllog/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@delete',
        'as' => 'crm.leads.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@index',
        'as' => 'crm.leads.status',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.status.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/status/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@store',
        'as' => 'crm.leads.status.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.status.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/status/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@update',
        'as' => 'crm.leads.status.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.status.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/status/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@delete',
        'as' => 'crm.leads.status.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\statusController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sources' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/sources',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@index',
        'as' => 'crm.leads.sources',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sources.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/sources/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@store',
        'as' => 'crm.leads.sources.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sources.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/lead/sources/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@update',
        'as' => 'crm.leads.sources.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sources.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/lead/sources/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@delete',
        'as' => 'crm.leads.sources.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\sourcesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.tasks' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/tasks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@index',
        'as' => 'crm.leads.tasks',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.tasks.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/tasks/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@store',
        'as' => 'crm.leads.tasks.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.tasks.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/tasks/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@update',
        'as' => 'crm.leads.tasks.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.tasks.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/tasks/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@delete',
        'as' => 'crm.leads.tasks.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\tasksController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'as' => 'crm.leads.events',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.events.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/events/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'as' => 'crm.leads.events.list',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@store',
        'as' => 'crm.leads.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/events/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@update',
        'as' => 'crm.leads.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/events/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@delete',
        'as' => 'crm.leads.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@index',
        'as' => 'crm.leads.documents',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@store',
        'as' => 'crm.leads.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/documents/{documentCode}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@update',
        'as' => 'crm.leads.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}//documents/{documentCode}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@delete',
        'as' => 'crm.leads.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@index',
        'as' => 'crm.leads.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/mail/{leadID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@details',
        'as' => 'crm.leads.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@send',
        'as' => 'crm.leads.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@store',
        'as' => 'crm.leads.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/leads/{code}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@index',
        'as' => 'crm.leads.sms',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.leads.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/leads/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@send',
        'as' => 'crm.leads.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\leads\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.mail.inbox' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/inbox',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@inbox',
        'as' => 'crm.mail.inbox',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@inbox',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.mail.sent' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/sent',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@sent',
        'as' => 'crm.mail.sent',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.mail.compose' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/compose',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@compose',
        'as' => 'crm.mail.compose',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@compose',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.mail.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/mail/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@details',
        'as' => 'crm.mail.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\mail\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@index',
        'as' => 'crm.customers.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@create',
        'as' => 'crm.customers.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_store',
        'as' => 'crm.customers.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@edit',
        'as' => 'crm.customers.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_update',
        'as' => 'crm.customers.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@contact_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.persons' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/customer-persons',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.persons',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@index',
        'as' => 'crm.customer.notes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@store',
        'as' => 'crm.customer.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@delete',
        'as' => 'crm.customers.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.comments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/comments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@index',
        'as' => 'crm.customers.comments',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.comments.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/comments/post',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@store',
        'as' => 'crm.customers.comments.post',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.comments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/comments/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@delete',
        'as' => 'crm.customers.comments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\commentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.invoices' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.invoices',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.subscriptions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/subscriptions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.subscriptions',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.quotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/quotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.quotes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.creditnotes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/creditnotes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.creditnotes',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.lpos' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/lpos',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.lpos',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.projects' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/projects',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'as' => 'crm.customers.projects',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\customersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@index',
        'as' => 'crm.customers.statement',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.statement.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/statement/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@pdf',
        'as' => 'crm.customers.statement.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.statement.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/statement/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@print',
        'as' => 'crm.customers.statement.print',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.statement.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/statement/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@mail',
        'as' => 'crm.customers.statement.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.statement.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{code}/statement/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@send',
        'as' => 'crm.customers.statement.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\statementController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@index',
        'as' => 'crm.customer.mail',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/mail/{customerID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@details',
        'as' => 'crm.customer.details',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@send',
        'as' => 'crm.customer.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.mail.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/mail/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@store',
        'as' => 'crm.customer.mail.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\mailController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@index',
        'as' => 'crm.customer.documents',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.documents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/documents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@store',
        'as' => 'crm.customer.documents.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/documents/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@update',
        'as' => 'crm.customer.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/documents/{code}/{leadID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@delete',
        'as' => 'crm.customer.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@index',
        'as' => 'crm.customer.sms',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.sms.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/sms/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@send',
        'as' => 'crm.customer.sms.send',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import',
        'as' => 'crm.customers.import',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import_contact',
        'as' => 'crm.customers.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@download_import_sample',
        'as' => 'crm.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@export',
        'as' => 'crm.customers.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@index',
        'as' => 'crm.customers.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@store',
        'as' => 'crm.customers.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@edit',
        'as' => 'crm.customers.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@update',
        'as' => 'crm.customers.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customers.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@delete',
        'as' => 'crm.customers.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{code}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@update',
        'as' => 'crm.customer.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@delete',
        'as' => 'crm.customer.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.calllog' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/calllogs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@index',
        'as' => 'crm.customer.calllog',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@store',
        'as' => 'crm.customer.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/{code}/calllog/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@update',
        'as' => 'crm.customer.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/calllog/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@delete',
        'as' => 'crm.customer.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/{code}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@index',
        'as' => 'crm.customer.events',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@store',
        'as' => 'crm.customer.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/customer/events/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@update',
        'as' => 'crm.customer.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.customer.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/customer/events/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@delete',
        'as' => 'crm.customer.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\customers\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.sms.sent' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/sms',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'as' => 'crm.sms.sent',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.sms.send.single' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/sms/send/single',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@send',
        'as' => 'crm.sms.send.single',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.sms.send.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/sms/send/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'as' => 'crm.sms.send.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@sent',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::3EW2Iz3sRkcQClbV' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/sms/retreve/from/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@retrieve_from',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\sms\\smsController@retrieve_from',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'generated::3EW2Iz3sRkcQClbV',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.social.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\dashboardController@dashboard',
        'as' => 'crm.social.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.social.post.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/posts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@index',
        'as' => 'crm.social.post.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.social.post.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/social/posts/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@create',
        'as' => 'crm.social.post.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.social.post.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/social/social/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@store',
        'as' => 'crm.social.post.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\social\\postsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::AyMlZJKuYe03lHKX' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/retrive/channel/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@retrieve_channels',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@retrieve_channels',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'generated::AyMlZJKuYe03lHKX',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.publications.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publications/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@edit',
        'as' => 'crm.publications.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.publications.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/publications/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@update',
        'as' => 'crm.publications.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.publications.post.channel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publications/{postID}/channel/{channelID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@post_per_channel',
        'as' => 'crm.publications.post.channel',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@post_per_channel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.publications.post.publish' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/publish/{postID}/{channelID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@publish',
        'as' => 'crm.publications.post.publish',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\publicationsController@publish',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.account.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@index',
        'as' => 'crm.account.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.account.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@create',
        'as' => 'crm.account.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.account.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/account/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@store',
        'as' => 'crm.account.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.account.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@edit',
        'as' => 'crm.account.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.account.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/account/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@update',
        'as' => 'crm.account.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.marketing.account.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/account/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@delete',
        'as' => 'crm.marketing.account.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\accountController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@index',
        'as' => 'crm.medium.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@create',
        'as' => 'crm.medium.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/medium/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@store',
        'as' => 'crm.medium.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@edit',
        'as' => 'crm.medium.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/medium/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@update',
        'as' => 'crm.medium.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.medium.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/medium/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@delete',
        'as' => 'crm.medium.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\mediumController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.channel.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/{code}/channel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@index',
        'as' => 'crm.channel.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.channel.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/channel/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@store',
        'as' => 'crm.channel.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.channel.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/{accountID}/channel/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@edit',
        'as' => 'crm.channel.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.channel.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/marketing/channel/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@update',
        'as' => 'crm.channel.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.channel.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/marketing/channel/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@delete',
        'as' => 'crm.channel.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\digitalmarketing\\channelController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'url.shortener' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/shortener',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@index',
        'as' => 'url.shortener',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'url.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/store/url',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@store',
        'as' => 'url.store',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'url.get' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/url/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@get',
        'as' => 'url.get',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@get',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'url.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/short/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@delete',
        'controller' => 'App\\Http\\Controllers\\app\\cms\\shortener\\ShortenerController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
        'as' => 'url.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@index',
        'as' => 'crm.deals.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.grid' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deals/grid',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@grid',
        'as' => 'crm.deals.grid',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@grid',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@create',
        'as' => 'crm.deals.create',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@store',
        'as' => 'crm.deals.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@edit',
        'as' => 'crm.deals.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@update',
        'as' => 'crm.deals.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@show',
        'as' => 'crm.deals.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@delete',
        'as' => 'crm.deals.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.stages' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/stages',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stages',
        'as' => 'crm.deals.stages',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stages',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.stage.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/stage/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stage_change',
        'as' => 'crm.deals.stage.change',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\dealsController@stage_change',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.calllog.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/call_log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@index',
        'as' => 'crm.deals.calllog.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.calllog.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/call_log/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@store',
        'as' => 'crm.deals.calllog.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.calllog.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/call_log/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@update',
        'as' => 'crm.deals.calllog.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.calllog.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/call_log/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@delete',
        'as' => 'crm.deals.calllog.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\calllogController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.notes.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@index',
        'as' => 'crm.deals.notes.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@store',
        'as' => 'crm.deals.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/notes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@update',
        'as' => 'crm.deals.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@delete',
        'as' => 'crm.deals.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.task.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/task',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@index',
        'as' => 'crm.deals.task.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.task.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/task/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@store',
        'as' => 'crm.deals.task.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.task.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/task/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@update',
        'as' => 'crm.deals.task.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.task.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/task/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@delete',
        'as' => 'crm.deals.task.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\tasksController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.appointments.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/appointments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@index',
        'as' => 'crm.deals.appointments.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.appointments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/appointments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@store',
        'as' => 'crm.deals.appointments.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.appointments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/deal/{code}/appointments/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@update',
        'as' => 'crm.deals.appointments.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.deals.appointments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/deal/{code}/appointments/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@delete',
        'as' => 'crm.deals.appointments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\appointmentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@index',
        'as' => 'crm.pipeline.index',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@store',
        'as' => 'crm.pipeline.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@edit',
        'as' => 'crm.pipeline.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@update',
        'as' => 'crm.pipeline.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@show',
        'as' => 'crm.pipeline.show',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@delete',
        'as' => 'crm.pipeline.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\pipelineController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.stage.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/stages/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@store',
        'as' => 'crm.pipeline.stage.store',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.stage.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/stages/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@edit',
        'as' => 'crm.pipeline.stage.edit',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.stage.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'crm/pipeline/stages/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@update',
        'as' => 'crm.pipeline.stage.update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.pipeline.stage.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/pipeline/stages/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@delete',
        'as' => 'crm.pipeline.stage.delete',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'stage_position_update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'crm/pipeline/stages/position',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@position',
        'as' => 'stage_position_update',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\deals\\stagesController@position',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\dashboardController@dashboard',
        'as' => 'crm.reports',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.status.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@filter',
        'as' => 'crm.reports.leads.status.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.status.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_status/export/{statusID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@export',
        'as' => 'crm.reports.leads.status.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByStatusController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.source.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_source',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@filter',
        'as' => 'crm.reports.leads.source.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.source.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_source/export/{sourceID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@export',
        'as' => 'crm.reports.leads.source.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsBySourceController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.industry.filter' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_industry',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@filter',
        'as' => 'crm.reports.leads.industry.filter',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@filter',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crm.reports.leads.industry.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'crm/reports/leads_by_industry/export/{sourceID}/{start}/{end}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@export',
        'as' => 'crm.reports.leads.industry.export',
        'controller' => 'App\\Http\\Controllers\\app\\crm\\reports\\leadsByIndustryController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/crm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'jobs.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsManagementController@dashboard',
        'as' => 'jobs.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsManagementController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@index',
        'as' => 'job.index',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@create',
        'as' => 'job.create',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@store',
        'as' => 'job.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@dashboard',
        'as' => 'job.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@show',
        'as' => 'job.show',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.budget' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/budget',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@budget',
        'as' => 'job.budget',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@budget',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.users' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/users',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@users',
        'as' => 'job.users',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@users',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.activity' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/activity',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@activity',
        'as' => 'job.activity',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@activity',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@settings',
        'as' => 'job.settings',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@edit',
        'as' => 'job.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/update/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@update',
        'as' => 'job.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/destroy/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@destroy',
        'as' => 'job.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\jobsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.discussions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/discussions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@index',
        'as' => 'job.discussions',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.discussions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/discussions/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@store',
        'as' => 'job.discussions.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.discussions.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/discussions/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@delete',
        'as' => 'job.discussions.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\discussionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.task' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/tasks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@tasks',
        'as' => 'job.task',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@tasks',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.task.section' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobCode}/section/{sectionCode}/{sectionName}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@section',
        'as' => 'job.task.section',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@section',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/tasks/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@create',
        'as' => 'task.create',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/tasks/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@store',
        'as' => 'task.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{projectID}/tasks/{taskID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@show',
        'as' => 'task.show',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{projectID}/tasks/{taskID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@edit',
        'as' => 'task.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.complete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobcode}/tasks/{taskcode}/status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@complete',
        'as' => 'task.complete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@complete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/tasks/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@update',
        'as' => 'task.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/tasks/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete',
        'as' => 'task.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.group.change' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/tasks/group/change',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@group_change',
        'as' => 'task.group.change',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@group_change',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.all' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/tasks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@all',
        'as' => 'task.all',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@all',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.all.user.incomplete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/tasks/{userID}/incomplete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@incomplete',
        'as' => 'task.all.user.incomplete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@incomplete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.all.incomplete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/tasks/all/incomplete/t',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@all_incomplete',
        'as' => 'task.all.incomplete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@all_incomplete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.group.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/task/group',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@store',
        'as' => 'task.group.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.group.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/task/group/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@edit',
        'as' => 'task.group.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.group.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/task/group/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@update',
        'as' => 'task.group.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.group.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/task/group/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@delete',
        'as' => 'task.group.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\grouptaskController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.comment.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/comment/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@comment',
        'as' => 'task.comment.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@comment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.comment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{projectCode}/tasks/comment/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete_comment',
        'as' => 'task.comment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete_comment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.file.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{pid}/tasks/files/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete_file',
        'as' => 'task.file.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\taskController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.filter.overdue' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/{projectID}/tasks/filter/overdue',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@overdue',
        'as' => 'task.filter.overdue',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@overdue',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.filter.today' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/{projectID}/tasks/filter/today',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@today',
        'as' => 'task.filter.today',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@today',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'task.last.seven.days' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/{projectID}/tasks/filter/last-7-days',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@last_seven',
        'as' => 'task.last.seven.days',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\tasksFilterController@last_seven',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.mytask.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/my-tasks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\myTaskController@list',
        'as' => 'job.mytask.list',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\myTaskController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{pid}/tickets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@index',
        'as' => 'job.tickets.index',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/tickets/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@store',
        'as' => 'job.tickets.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{projectID}/tickets/{ticketID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@edit',
        'as' => 'job.tickets.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{projectID}/tickets/{ticketID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@show',
        'as' => 'job.tickets.show',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/tickets/{tid}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@update',
        'as' => 'job.tickets.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/tickets/{tid}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete',
        'as' => 'job.tickets.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.comment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/tickets/comment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@comment',
        'as' => 'job.tickets.comment',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@comment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.comment.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/tickets/comment/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete_comment',
        'as' => 'job.tickets.comment.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete_comment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.tickets.document.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{pid}/tickets/documents/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete_file',
        'as' => 'job.tickets.document.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\ticketsController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{code}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\notesController@index',
        'as' => 'job.notes',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.notes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobcode}/notes/{notecode}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\notesController@edit',
        'as' => 'job.notes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\notesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/{jobcode}/notes/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\notesController@update',
        'as' => 'job.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{pid}/notes/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\notesController@delete',
        'as' => 'job.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobcode}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\filesController@index',
        'as' => 'job.files',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\filesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.files.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/files/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\filesController@store',
        'as' => 'job.files.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\filesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/{jobcode}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@index',
        'as' => 'job.events',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@store',
        'as' => 'job.events.store',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/events/{jobcode}/{eventcode}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@edit',
        'as' => 'job.events.edit',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/events/{eventcode}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@update',
        'as' => 'job.events.update',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.results' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'jobs/job/events/{jobcode}/results',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@results',
        'as' => 'job.events.results',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/events/{jobcode}/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@show',
        'as' => 'job.events.show',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.events.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/events/{jobcode}/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@delete',
        'as' => 'job.events.delete',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\eventsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'todo.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/todo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\todoController@index',
        'as' => 'todo.index',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\todoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.goals' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/job/events/{jobcode}/goals',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\goalsController@goals',
        'as' => 'job.goals',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\goalsController@goals',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'job.clients.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'jobs/clients',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\jobs\\clientsController@index',
        'as' => 'job.clients.index',
        'controller' => 'App\\Http\\Controllers\\app\\jobs\\clientsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/jobs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\dashboardController@dashboard',
        'as' => 'assets.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'as' => 'assets.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@create',
        'as' => 'assets.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@store',
        'as' => 'assets.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@edit',
        'as' => 'assets.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'as' => 'assets.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.show',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.finance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/finance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.finance',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'as' => 'assets.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'model.retrive' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/retrive/model/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@retrive_model',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@retrive_model',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
        'as' => 'model.retrive',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.details.vehicle' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/vehicle',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.details.vehicle',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.image.remove' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/remove-image',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@remove_image',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@remove_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
        'as' => 'assets.image.remove',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/maintenances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.maintenances.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.maintenances.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{code}/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@store',
        'as' => 'assets.maintenances.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/maintenance/{edit}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@edit',
        'as' => 'assets.maintenances.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{asset}/maintenance/{edit}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@update',
        'as' => 'assets.maintenances.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.maintenances.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/maintenance/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@delete',
        'as' => 'assets.maintenances.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\maintenancesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.files.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{code}/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.files.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.files.add' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/files/{code}/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@add_file',
        'as' => 'assets.files.add',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@add_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.files.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/files/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@files',
        'as' => 'assets.files.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.event.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.checkout.checkin' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/checkout-checkin',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.event.checkout.checkin',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.checkout.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkout/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_out_store',
        'as' => 'assets.event.checkout.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_out_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.checkout.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkout/{code}/events/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_out_update',
        'as' => 'assets.event.checkout.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_out_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.checkin.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkin/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_in_store',
        'as' => 'assets.event.checkin.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_in_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.event.checkin.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/checkin/{code}/events/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_in_update',
        'as' => 'assets.event.checkin.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@check_in_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.checkout.checkin.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/checkout-checkin/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@delete',
        'as' => 'assets.checkout.checkin.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\checkoutcheckinController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.repairs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/repairs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.repairs',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.repair.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{asset}/repair/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\repairController@store',
        'as' => 'assets.repair.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\repairController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.repair.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{asset}/repair/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'as' => 'assets.repair.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.repair.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/repair/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'as' => 'assets.repair.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.leases',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.lease.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{asset}/lease/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@lease_store',
        'as' => 'assets.lease.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@lease_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.missing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/other/missing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.other.events.missing',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.missing.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{assset}/missing/asset/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@missing_asset',
        'as' => 'assets.other.events.missing.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@missing_asset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.dispose' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/other/dispose',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.other.events.dispose',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.dispose.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{assset}/dispose/asset/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@dispose_asset',
        'as' => 'assets.other.events.dispose.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@dispose_asset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.donate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/other/donate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.other.events.donate',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.donate.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{assset}/donate/asset/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@donate_asset',
        'as' => 'assets.other.events.donate.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@donate_asset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.sell' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/other/sell',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.other.events.sell',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.other.events.sell.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/{assset}/sell/asset/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@sell_asset',
        'as' => 'assets.other.events.sell.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@sell_asset',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.location' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/{asset}/location',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'as' => 'assets.location',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\asset\\assetsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@index',
        'as' => 'licenses.assets.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@create',
        'as' => 'licenses.assets.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@store',
        'as' => 'licenses.assets.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@edit',
        'as' => 'licenses.assets.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@update',
        'as' => 'licenses.assets.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{code}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'as' => 'licenses.assets.show',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.assets.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@delete',
        'as' => 'licenses.assets.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{code}/maintenances',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'as' => 'licenses.maintenances.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\licensesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{code}/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@show',
        'as' => 'licenses.maintenances.create',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{code}/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@store',
        'as' => 'licenses.maintenances.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{asset}/maintenance/{edit}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@edit',
        'as' => 'licenses.maintenances.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/licenses/{asset}/maintenance/{edit}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@update',
        'as' => 'licenses.maintenances.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'licenses.maintenances.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/licenses/{asset}/maintenance/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@delete',
        'as' => 'licenses.maintenances.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\license\\maintenancesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.type.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/types',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@index',
        'as' => 'assets.type.index',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.type.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/type/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@store',
        'as' => 'assets.type.store',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.type.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/type/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@edit',
        'as' => 'assets.type.edit',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.type.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'assets/type/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@update',
        'as' => 'assets.type.update',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'assets.type.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'assets/type/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\assets\\typeController@delete',
        'as' => 'assets.type.delete',
        'controller' => 'App\\Http\\Controllers\\app\\assets\\typeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/assets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\dashboardController@dashboard',
        'as' => 'subscriptions.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/products',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@index',
        'as' => 'subscriptions.products.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/products/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@create',
        'as' => 'subscriptions.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/products/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@store',
        'as' => 'subscriptions.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/products/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@edit',
        'as' => 'subscriptions.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/products/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@update',
        'as' => 'subscriptions.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.products.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/products/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@delete',
        'as' => 'subscriptions.products.delete',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\productsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/plan/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@index',
        'as' => 'subscriptions.plan.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/plan/{code}/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@create',
        'as' => 'subscriptions.plan.create',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/plan/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@stoplanre',
        'as' => 'subscriptions.plan.store',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@stoplanre',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/plan/{code}/edit/{pid}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@edit',
        'as' => 'subscriptions.plan.edit',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/plan/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@update',
        'as' => 'subscriptions.plan.update',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/plan/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@delete',
        'as' => 'subscriptions.plan.delete',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\planController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@index',
        'as' => 'subscription.customer.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@create',
        'as' => 'subscription.customer.create',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@store',
        'as' => 'subscription.customer.store',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@edit',
        'as' => 'subscription.customer.edit',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@update',
        'as' => 'subscription.customer.update',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@show',
        'as' => 'subscription.customer.show',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@trash',
        'as' => 'subscription.customer.delete',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\customerController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/all',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@index',
        'as' => 'subscriptions.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@create',
        'as' => 'subscriptions.create',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@store',
        'as' => 'subscriptions.store',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@edit',
        'as' => 'subscriptions.edit',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@update',
        'as' => 'subscriptions.update',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@delete',
        'as' => 'subscriptions.delete',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@show',
        'as' => 'subscriptions.show',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.invoices' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@invoices',
        'as' => 'subscriptions.invoices',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@invoices',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.renew' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/renew',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@renew',
        'as' => 'subscriptions.renew',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@renew',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@cancel',
        'as' => 'subscriptions.cancel',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.plan' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/{code}/plans',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@plan',
        'as' => 'subscriptions.plan',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@plan',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::9oz0tqHLYxNk1ujn' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/plans/{code}/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@plan_price',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\subscriptionController@plan_price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
        'as' => 'generated::9oz0tqHLYxNk1ujn',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/subscription/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@import',
        'as' => 'subscription.customer.import',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.contact.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/subscription/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@import_customer',
        'as' => 'subscription.contact.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@import_customer',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/subscription/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@download_import_sample',
        'as' => 'subscription.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.customer.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/customer/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@export',
        'as' => 'subscription.customer.export',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\invoiceController@index',
        'as' => 'subscription.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\invoiceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscription.invoice.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/invoice/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\invoiceController@show',
        'as' => 'subscription.invoice.show',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\invoiceController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscriptions.settings.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\subscriptions\\settingsController@index',
        'as' => 'subscriptions.settings.index',
        'controller' => 'App\\Http\\Controllers\\app\\subscriptions\\settingsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/subscriptions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@dashboard',
        'as' => 'pos.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sell' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sales/terminal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@sales',
        'as' => 'pos.sell',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@sales',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.update.cart' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/cart/{cartID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@update_cart',
        'as' => 'pos.update.cart',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@update_cart',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.remove.cart.item' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/cart/item/{cartID}/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@remove_cart_item',
        'as' => 'pos.remove.cart.item',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@remove_cart_item',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.cancel.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/cancel/order',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@cancel_sale',
        'as' => 'pos.cancel.order',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@cancel_sale',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.tax.apply' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/sale/apply/tax',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@apply_sale',
        'as' => 'pos.sale.tax.apply',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@apply_sale',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.remove.tax' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sale/remove/tax',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@remove_tax',
        'as' => 'pos.sale.remove.tax',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@remove_tax',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.checkout' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sale/checkout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@sale_checkout',
        'as' => 'pos.sale.checkout',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@sale_checkout',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.save.order' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/save/order',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@save_sale',
        'as' => 'pos.save.order',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@save_sale',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sale/{saleID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@sale_view',
        'as' => 'pos.sale.details',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@sale_view',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.receipt.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sale/{saleID}/receipt/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@receipt_print',
        'as' => 'pos.sale.receipt.print',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@receipt_print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.sale.receipt.mail' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/sale/receipt/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@receipt_mail',
        'as' => 'pos.sale.receipt.mail',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@receipt_mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'sales.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/sales/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\salesController@index',
        'as' => 'sales.history',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\salesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'history.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/history/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\salesController@show',
        'as' => 'history.details',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\salesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.print.receipt' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/print/receipt/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\salesController@print',
        'as' => 'pos.print.receipt',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\salesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'make.payment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/make/payment/{invoiceID}/{gatewayID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@make_payment',
        'as' => 'make.payment',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@make_payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'complete.payment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/complete/payment/{invoiceID}/{gatewayID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@complete_payment',
        'as' => 'complete.payment',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@complete_payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'order.receipt' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/{code}/receipt',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\posController@order_receipt',
        'as' => 'order.receipt',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\posController@order_receipt',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/products',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@index',
        'as' => 'pos.products',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@create',
        'as' => 'pos.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@store',
        'as' => 'pos.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@edit',
        'as' => 'pos.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@update',
        'as' => 'pos.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@details',
        'as' => 'pos.products.details',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsController@destroy',
        'as' => 'pos.products.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/products/{code}/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsPriceController@price',
        'as' => 'pos.products.price',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsPriceController@price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.products.price.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/products/{code}/price/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\productsPriceController@price_update',
        'as' => 'pos.products.price.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\productsPriceController@price_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.inventory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/inventory/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory',
        'as' => 'pos.inventory',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.inventory.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/{code}/inventory/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_update',
        'as' => 'pos.inventory.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.inventory.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/inventory/settings/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_settings',
        'as' => 'pos.inventory.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.inventory.outlet.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/inventory/outlet/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_outlet_link',
        'as' => 'pos.inventory.outlet.link',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@inventory_outlet_link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.inventory.outlet.link.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{productID}/inventory/outle/{code}/link/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@delete_inventroy',
        'as' => 'pos.inventory.outlet.link.delete',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\inventoryController@delete_inventroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/images/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\imagesController@edit',
        'as' => 'pos.product.images',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\imagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.images.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/images/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\imagesController@update',
        'as' => 'pos.product.images.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\imagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.images.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/images/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\imagesController@store',
        'as' => 'pos.product.images.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\imagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.images.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/images/{imageCode}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\imagesController@delete',
        'as' => 'pos.product.images.delete',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\imagesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.settings.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\settingsController@edit',
        'as' => 'pos.product.settings.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\settingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/{code}/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\settingsController@update',
        'as' => 'pos.product.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.control' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/stock/control',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@index',
        'as' => 'pos.product.stock.control',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@order',
        'as' => 'pos.product.stock.order',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@show',
        'as' => 'pos.product.stock.order.show',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/post/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@store',
        'as' => 'pos.product.stock.order.post',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.ajax.product.stock.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/lpo/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
        'as' => 'pos.ajax.product.stock.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@edit',
        'as' => 'pos.product.stock.order.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/order/stock/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@update',
        'as' => 'pos.product.stock.order.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock/{code}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@pdf',
        'as' => 'pos.product.stock.order.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.stock.order.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock/{code}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@print',
        'as' => 'pos.product.stock.order.print',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.stock.delivered' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/order/stock/{code}/delivered',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@delivered',
        'as' => 'pos.stock.delivered',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@delivered',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.stock.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/stock/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@mail',
        'as' => 'pos.stock.mail',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.stock.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/stock/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@send',
        'as' => 'pos.stock.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.stock.attach' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/stock/attach/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@attachment_files',
        'as' => 'pos.stock.attach',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\stockcontrolController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\categoryController@index',
        'as' => 'pos.product.category',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\categoryController@store',
        'as' => 'pos.product.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\categoryController@edit',
        'as' => 'pos.product.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product.category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\categoryController@update',
        'as' => 'pos.product.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/category/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\categoryController@destroy',
        'as' => 'pos.product.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\categoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.brand' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/brand',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\brandController@index',
        'as' => 'pos.product.brand',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\brandController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.brand.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/brand/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\brandController@store',
        'as' => 'pos.product.brand.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\brandController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.brand.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/brand/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\brandController@edit',
        'as' => 'pos.product.brand.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\brandController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.brand.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product.brand/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\brandController@update',
        'as' => 'pos.product.brand.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\brandController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.brand.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/brand/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\brandController@destroy',
        'as' => 'pos.product.brand.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\brandController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.tags' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\tagsController@index',
        'as' => 'pos.product.tags',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\tagsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product/tags/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\tagsController@store',
        'as' => 'pos.product.tags.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\tagsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/tags/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\tagsController@edit',
        'as' => 'pos.product.tags.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\tagsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/product.tags/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\tagsController@update',
        'as' => 'pos.product.tags.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\tagsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.product.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/product/tags/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\tagsController@destroy',
        'as' => 'pos.product.tags.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\tagsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@index',
        'as' => 'pos.supplier.index',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@create',
        'as' => 'pos.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/post-supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@store',
        'as' => 'pos.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@edit',
        'as' => 'pos.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/supplier/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@update',
        'as' => 'pos.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@show',
        'as' => 'pos.supplier.show',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@delete',
        'as' => 'pos.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.vendor.person' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/delete-supplier-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@delete_contact_person',
        'as' => 'pos.supplier.vendor.person',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@trash',
        'as' => 'pos.supplier.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@download_import_sample',
        'as' => 'pos.supplier.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/express/supplier/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@express_list',
        'as' => 'pos.supplier.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/express/supplier/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@express_save',
        'as' => 'pos.supplier.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\supplierController@express_save',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.groups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@index',
        'as' => 'pos.supplier.groups.index',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.groups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/supplier/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@store',
        'as' => 'pos.supplier.groups.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@edit',
        'as' => 'pos.supplier.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/supplier/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@update',
        'as' => 'pos.supplier.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@delete',
        'as' => 'pos.supplier.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@index',
        'as' => 'pos.supplier.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/supplier/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@import',
        'as' => 'pos.supplier.import',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.supplier.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/supplier/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@export',
        'as' => 'pos.supplier.export',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\supplier\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@index',
        'as' => 'pos.contact.index',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@create',
        'as' => 'pos.contact.create',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@store',
        'as' => 'pos.contact.store',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@edit',
        'as' => 'pos.contact.edit',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@update',
        'as' => 'pos.contact.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@show',
        'as' => 'pos.contact.show',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.contact.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@delete',
        'as' => 'pos.contact.delete',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\contact\\contactController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.settings.notification' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pos/settings/notifications',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\settings\\generalController@notification',
        'as' => 'pos.settings.notification',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\settings\\generalController@notification',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pos.settings.notification.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'pos/settings/notifications/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\pos\\settings\\generalController@notification_update',
        'as' => 'pos.settings.notification.update',
        'controller' => 'App\\Http\\Controllers\\app\\pos\\settings\\generalController@notification_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pos',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\dashboard\\dashboardController@dashboard',
        'as' => 'ecommerce.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\dashboard\\dashboardController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@index',
        'as' => 'ecommerce.customers.index',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@create',
        'as' => 'ecommerce.customers.create',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@store',
        'as' => 'ecommerce.customers.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@edit',
        'as' => 'ecommerce.customers.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@update',
        'as' => 'ecommerce.customers.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@show',
        'as' => 'ecommerce.customers.show',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.customers.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@delete',
        'as' => 'ecommerce.customers.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\contact\\contactController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@index',
        'as' => 'ecommerce.supplier.index',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@create',
        'as' => 'ecommerce.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/post-supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@store',
        'as' => 'ecommerce.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@edit',
        'as' => 'ecommerce.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/supplier/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@update',
        'as' => 'ecommerce.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@show',
        'as' => 'ecommerce.supplier.show',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@delete',
        'as' => 'ecommerce.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.vendor.person' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/delete-supplier-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@delete_contact_person',
        'as' => 'ecommerce.supplier.vendor.person',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.vendor.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@trash',
        'as' => 'ecommerce.vendor.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\supplierController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.supplier.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/supplier/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\importController@download_import_sample',
        'as' => 'ecommerce.supplier.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\supplier\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@index',
        'as' => 'ecommerce.product.index',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@create',
        'as' => 'ecommerce.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@store',
        'as' => 'ecommerce.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@edit',
        'as' => 'ecommerce.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@update',
        'as' => 'ecommerce.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@details',
        'as' => 'ecommerce.products.details',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@destroy',
        'as' => 'ecommerce.products.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/express/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@express_list',
        'as' => 'ecommerce.product.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.express.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/express/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@express_store',
        'as' => 'ecommerce.products.express.create',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@index',
        'as' => 'ecommerce.products.import',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.post.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@import',
        'as' => 'ecommerce.products.post.import',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@export',
        'as' => 'ecommerce.products.export',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.sample.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@download_import_sample',
        'as' => 'ecommerce.products.sample.download',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.description' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/description',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@description',
        'as' => 'ecommerce.products.description',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@description',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.description.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/{code}/description/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@description_update',
        'as' => 'ecommerce.products.description.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@description_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/price/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@price',
        'as' => 'ecommerce.products.price',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.price.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/price/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@price_update',
        'as' => 'ecommerce.products.price.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\productController@price_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.variants.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/variants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@index',
        'as' => 'ecommerce.products.variants.index',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.variants.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/{code}/variants/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@store',
        'as' => 'ecommerce.products.variants.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.variants.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/variants/{variantID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@edit',
        'as' => 'ecommerce.products.variants.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.variants.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/variants/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@update',
        'as' => 'ecommerce.products.variants.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\variantsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.inventory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/inventory/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory',
        'as' => 'ecommerce.products.inventory',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.products.inventory.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/{code}/inventory/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_update',
        'as' => 'ecommerce.products.inventory.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.inventory.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/inventory/settings/{productID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_settings',
        'as' => 'ecommerce.inventory.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.inventory.outlet.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/inventory/outlet/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_outlet_link',
        'as' => 'ecommerce.inventory.outlet.link',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@inventory_outlet_link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.inventory.outlet.link.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{productID}/inventory/outle/{code}/link/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@delete_inventory',
        'as' => 'ecommerce.inventory.outlet.link.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\inventoryController@delete_inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/images/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@edit',
        'as' => 'ecommerce.product.images',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.images.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/images/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@update',
        'as' => 'ecommerce.product.images.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.images.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/images/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@store',
        'as' => 'ecommerce.product.images.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.images.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/images/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@destroy',
        'as' => 'ecommerce.product.images.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\imagesController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.settings.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\settingsController@edit',
        'as' => 'ecommerce.product.settings.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\settingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/{code}/settings/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\settingsController@update',
        'as' => 'ecommerce.product.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\settingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.control' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/stock/control',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@index',
        'as' => 'ecommerce.product.stock.control',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@order',
        'as' => 'ecommerce.product.stock.order',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@show',
        'as' => 'ecommerce.product.stock.order.show',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/post/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@store',
        'as' => 'ecommerce.product.stock.order.post',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.ajax.product.stock.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/lpo/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
        'as' => 'ecommerce.ajax.product.stock.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@edit',
        'as' => 'ecommerce.product.stock.order.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/order/stock/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@update',
        'as' => 'ecommerce.product.stock.order.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock/{code}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@pdf',
        'as' => 'ecommerce.product.stock.order.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.stock.order.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock/{code}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@print',
        'as' => 'ecommerce.product.stock.order.print',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.stock.delivered' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/order/stock/{code}/delivered',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@delivered',
        'as' => 'ecommerce.stock.delivered',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@delivered',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.stock.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/stock/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@mail',
        'as' => 'ecommerce.stock.mail',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.stock.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/stock/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@send',
        'as' => 'ecommerce.stock.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.stock.attach' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/stock/attach/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@attachment_files',
        'as' => 'ecommerce.stock.attach',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\stockcontrolController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.ecommerce.orders' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/ecommerce/order',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ecommerceControlController@orders',
        'as' => 'ecommerce.ecommerce.orders',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ecommerceControlController@orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.ecommerce.orders.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/ecommerce/order/{code}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ecommerceControlController@show',
        'as' => 'ecommerce.ecommerce.orders.view',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ecommerceControlController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@index',
        'as' => 'ecommerce.product.category',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@store',
        'as' => 'ecommerce.product.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@edit',
        'as' => 'ecommerce.product.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/product.category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@update',
        'as' => 'ecommerce.product.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/category/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@destroy',
        'as' => 'ecommerce.product.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\categoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.brand' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/brand',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@index',
        'as' => 'ecommerce.product.brand',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.brand.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/brand/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@store',
        'as' => 'ecommerce.product.brand.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.brand.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/brand/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@edit',
        'as' => 'ecommerce.product.brand.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.brand.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/product.brand/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@update',
        'as' => 'ecommerce.product.brand.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.brand.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/brand/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@destroy',
        'as' => 'ecommerce.product.brand.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\brandController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.tags' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@index',
        'as' => 'ecommerce.product.tags',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/tags/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@store',
        'as' => 'ecommerce.product.tags.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/tags/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@edit',
        'as' => 'ecommerce.product.tags.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/product.tags/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@update',
        'as' => 'ecommerce.product.tags.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/tags/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@destroy',
        'as' => 'ecommerce.product.tags.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\tagsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@index',
        'as' => 'ecommerce.product.attributes',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/attributes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@store',
        'as' => 'ecommerce.product.attributes.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@edit',
        'as' => 'ecommerce.product.attributes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/attributes/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@update',
        'as' => 'ecommerce.product.attributes.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productattributes',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@delete',
        'as' => 'ecommerce.product.attributes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.value.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes/{code}/values',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@create',
        'as' => 'ecommerce.product.attributes.value.create',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.value.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/attributes/values/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@store',
        'as' => 'ecommerce.product.attributes.value.store',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.value.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes/values/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@edit',
        'as' => 'ecommerce.product.attributes.value.edit',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.value.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/products/attributes/values/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@update',
        'as' => 'ecommerce.product.attributes.value.update',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.product.attributes.value.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/products/attributes/values/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-productattributevalues',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@delete',
        'as' => 'ecommerce.product.attributes.value.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\attributeValueController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@index',
        'as' => 'ecommerce.orders.index',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@show',
        'as' => 'ecommerce.orders.show',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@delete_invoice',
        'as' => 'ecommerce.orders.delete',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@delete_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders/{code}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@pdf',
        'as' => 'ecommerce.orders.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders/{code}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@print',
        'as' => 'ecommerce.orders.print',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.attachment.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/orders/file/{status}/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@update_file_status',
        'as' => 'ecommerce.orders.attachment.status',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@update_file_status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.orders.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/orders/payment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@payment',
        'as' => 'ecommerce.orders.payment',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\products\\ordersController@payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/settings/website/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@details',
        'as' => 'ecommerce.settings.website.details',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.details.save' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/settings/website/details/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_details',
        'as' => 'ecommerce.settings.website.details.save',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.contacts' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/settings/website/contacts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@contacts',
        'as' => 'ecommerce.settings.website.contacts',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@contacts',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.contacts.save' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/settings/website/contacts/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_contacts',
        'as' => 'ecommerce.settings.website.contacts.save',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_contacts',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.policies' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/settings/website/policies',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@policies',
        'as' => 'ecommerce.settings.website.policies',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@policies',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.policies.save' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/settings/website/policies/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_policies',
        'as' => 'ecommerce.settings.website.policies.save',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_policies',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.analytics' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ecommerce/settings/website/analytics',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@analytics',
        'as' => 'ecommerce.settings.website.analytics',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@analytics',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ecommerce.settings.website.analytics.save' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ecommerce/settings/website/analytics/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_analytics',
        'as' => 'ecommerce.settings.website.analytics.save',
        'controller' => 'App\\Http\\Controllers\\app\\ecommerce\\settings\\websiteController@save_analytics',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\salesflowController@dashboard',
        'as' => 'salesflow.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\salesflowController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'app.dashboard.user.summary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/dashboard/users-summary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\sokoflowController@user_summary',
        'controller' => 'App\\Http\\Controllers\\app\\sokoflowController@user_summary',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'app.dashboard.user.summary',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@index',
        'as' => 'salesflow.customer.index',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@create',
        'as' => 'salesflow.customer.create',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/post-customer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@store',
        'as' => 'salesflow.customer.store',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@edit',
        'as' => 'salesflow.customer.edit',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/customer/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@update',
        'as' => 'salesflow.customer.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@show',
        'as' => 'salesflow.customer.show',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@delete',
        'as' => 'salesflow.customer.delete',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\customerController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@import',
        'as' => 'salesflow.customer.import',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.import.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/customer/import/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@import_contact',
        'as' => 'salesflow.customer.import.store',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@download_import_sample',
        'as' => 'salesflow.customer.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/export/{formart}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@export',
        'as' => 'salesflow.customer.export',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@index',
        'as' => 'salesflow.customer.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/customer/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@store',
        'as' => 'salesflow.customer.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.groups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@edit',
        'as' => 'salesflow.customer.groups.edit',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.groups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/customer/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@update',
        'as' => 'salesflow.customer.groups.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.groups.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@delete',
        'as' => 'salesflow.customer.groups.delete',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.customer.checkin.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/customer/checkins',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\checkinController@index',
        'as' => 'salesflow.customer.checkin.index',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\customer\\checkinController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@index',
        'as' => 'salesflow.supplier.index',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@create',
        'as' => 'salesflow.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/post-supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@store',
        'as' => 'salesflow.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@edit',
        'as' => 'salesflow.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/supplier/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@update',
        'as' => 'salesflow.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@show',
        'as' => 'salesflow.supplier.show',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@delete',
        'as' => 'salesflow.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.vendor.person' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/delete-supplier-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@delete_contact_person',
        'as' => 'salesflow.supplier.vendor.person',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.vendor.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@trash',
        'as' => 'salesflow.vendor.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\supplierController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@download_import_sample',
        'as' => 'salesflow.supplier.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@index',
        'as' => 'salesflow.supplier.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/supplier/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@store',
        'as' => 'salesflow.supplier.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@edit',
        'as' => 'salesflow.supplier.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/supplier/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@update',
        'as' => 'salesflow.supplier.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@delete',
        'as' => 'salesflow.supplier.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\groupsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@index',
        'as' => 'salesflow.supplier.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/supplier/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@import',
        'as' => 'salesflow.supplier.import',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.supplier.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/supplier/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@export',
        'as' => 'salesflow.supplier.export',
        'controller' => 'App\\Http\\Controllers\\app\\supplier\\ImportController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@index',
        'as' => 'salesflow.product.index',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@create',
        'as' => 'salesflow.products.create',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@store',
        'as' => 'salesflow.products.store',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@edit',
        'as' => 'salesflow.products.edit',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@update',
        'as' => 'salesflow.products.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@details',
        'as' => 'salesflow.products.details',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-products',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@destroy',
        'as' => 'salesflow.products.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.express.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/express/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@express_list',
        'as' => 'salesflow.product.express.list',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.express.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/express/items/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@express_store',
        'as' => 'salesflow.products.express.create',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@index',
        'as' => 'salesflow.products.import',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.post.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@import',
        'as' => 'salesflow.products.post.import',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/export/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@export',
        'as' => 'salesflow.products.export',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.sample.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@download_import_sample',
        'as' => 'salesflow.products.sample.download',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\ImportController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'description' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/{code}/description',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@description',
        'as' => 'description',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@description',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'description.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/{code}/description/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@description_update',
        'as' => 'description.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@description_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/product/price/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@price',
        'as' => 'salesflow.product.price',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@price',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.price.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/price/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@price_update',
        'as' => 'salesflow.product.price.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\productController@price_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.inventory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/inventory/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory',
        'as' => 'salesflow.products.inventory',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.inventory.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/{code}/inventory/{productCode}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_update',
        'as' => 'salesflow.products.inventory.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.inventory.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/inventory/settings/{productCode}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_settings',
        'as' => 'salesflow.inventory.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_settings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.inventory.outlet.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/inventory/outlet/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_outlet_link',
        'as' => 'salesflow.products.inventory.outlet.link',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@inventory_outlet_link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.products.inventory.outlet.link.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/{productCode}/inventory/outle/{code}/link/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@delete_inventroy',
        'as' => 'salesflow.products.inventory.outlet.link.delete',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\inventoryController@delete_inventroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/images/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@edit',
        'as' => 'salesflow.product.images',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.images.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/images/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@update',
        'as' => 'salesflow.product.images.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.images.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/images/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@store',
        'as' => 'salesflow.product.images.store',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.images.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/images/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@destroy',
        'as' => 'salesflow.product.images.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\imagesController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.control' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/stock/control',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@index',
        'as' => 'salesflow.product.stock.control',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@order',
        'as' => 'salesflow.product.stock.order',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@show',
        'as' => 'salesflow.product.stock.order.show',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.post' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/post/order/stock',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:create-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@store',
        'as' => 'salesflow.product.stock.order.post',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ajax.product.stock.price' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/lpo/ajax/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@productPrice',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@productPrice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'ajax.product.stock.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@edit',
        'as' => 'salesflow.product.stock.order.edit',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/order/stock/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@update',
        'as' => 'salesflow.product.stock.order.update',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock/{code}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@pdf',
        'as' => 'salesflow.product.stock.order.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.stock.order.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock/{code}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@print',
        'as' => 'salesflow.product.stock.order.print',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.stock.delivered' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/order/stock/{code}/delivered',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@delivered',
        'as' => 'salesflow.stock.delivered',
        'controller' => 'App\\Http\\Controllers\\app\\salesflow\\products\\stockcontrolController@delivered',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.stock.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/stock/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@mail',
        'as' => 'salesflow.stock.mail',
        'controller' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.stock.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/stock/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@send',
        'as' => 'salesflow.stock.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.stock.attach' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/stock/attach/files',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:update-stockcontrol',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@attachment_files',
        'as' => 'salesflow.stock.attach',
        'controller' => 'App\\Http\\Controllers\\app\\products\\stockcontrolController@attachment_files',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\categoryController@index',
        'as' => 'salesflow.product.category',
        'controller' => 'App\\Http\\Controllers\\app\\products\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\categoryController@store',
        'as' => 'salesflow.product.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\products\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\categoryController@edit',
        'as' => 'salesflow.product.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\products\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/product.category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\categoryController@update',
        'as' => 'salesflow.product.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\products\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/category/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\categoryController@destroy',
        'as' => 'salesflow.product.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\products\\categoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.brand' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/brand',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\brandController@index',
        'as' => 'salesflow.product.brand',
        'controller' => 'App\\Http\\Controllers\\app\\products\\brandController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.brand.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/products/brand/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\brandController@store',
        'as' => 'salesflow.product.brand.store',
        'controller' => 'App\\Http\\Controllers\\app\\products\\brandController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.brand.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/brand/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\brandController@edit',
        'as' => 'salesflow.product.brand.edit',
        'controller' => 'App\\Http\\Controllers\\app\\products\\brandController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.brand.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/product.brand/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\brandController@update',
        'as' => 'salesflow.product.brand.update',
        'controller' => 'App\\Http\\Controllers\\app\\products\\brandController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.product.brand.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/products/brand/{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\products\\brandController@destroy',
        'as' => 'salesflow.product.brand.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\products\\brandController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.users.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/users',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@index',
        'as' => 'salesflow.users.index',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.user.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/user/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@create',
        'as' => 'salesflow.user.create',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.user.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/user/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@store',
        'as' => 'salesflow.user.store',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.user.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/user/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@edit',
        'as' => 'salesflow.user.edit',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.user.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/user/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@update',
        'as' => 'salesflow.user.update',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.user.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/user{code}/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\usersController@destroy',
        'as' => 'salesflow.user.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\usersController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.routes.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/routes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\routesController@index',
        'as' => 'salesflow.routes.index',
        'controller' => 'App\\Http\\Controllers\\app\\routesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.routes.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/routes/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\routesController@create',
        'as' => 'salesflow.routes.create',
        'controller' => 'App\\Http\\Controllers\\app\\routesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.routes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/routes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\routesController@store',
        'as' => 'salesflow.routes.store',
        'controller' => 'App\\Http\\Controllers\\app\\routesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.routes.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/routes/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\routesController@update',
        'as' => 'salesflow.routes.update',
        'controller' => 'App\\Http\\Controllers\\app\\routesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.routes.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/routes/{code}/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\routesController@view',
        'as' => 'salesflow.routes.view',
        'controller' => 'App\\Http\\Controllers\\app\\routesController@view',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.orders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ordersController@index',
        'as' => 'salesflow.orders.index',
        'controller' => 'App\\Http\\Controllers\\app\\ordersController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.orders.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/orders/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ordersController@details',
        'as' => 'salesflow.orders.details',
        'controller' => 'App\\Http\\Controllers\\app\\ordersController@details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.orders.delivery.allocation' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/orders/{code}/delivery/allocation',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ordersController@allocation',
        'as' => 'salesflow.orders.delivery.allocation',
        'controller' => 'App\\Http\\Controllers\\app\\ordersController@allocation',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.order.create.delivery' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/orders/allocate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\ordersController@delivery',
        'as' => 'salesflow.order.create.delivery',
        'controller' => 'App\\Http\\Controllers\\app\\ordersController@delivery',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.delivery.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/delivery',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\deliveryController@index',
        'as' => 'salesflow.delivery.index',
        'controller' => 'App\\Http\\Controllers\\app\\deliveryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.warehousing.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/warehousing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\warehousingController@index',
        'as' => 'salesflow.warehousing.index',
        'controller' => 'App\\Http\\Controllers\\app\\warehousingController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.warehousing.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/warehousing/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\warehousingController@create',
        'as' => 'salesflow.warehousing.create',
        'controller' => 'App\\Http\\Controllers\\app\\warehousingController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.warehousing.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/warehousing/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\warehousingController@store',
        'as' => 'salesflow.warehousing.store',
        'controller' => 'App\\Http\\Controllers\\app\\warehousingController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.warehousing.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/warehousing/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\warehousingController@edit',
        'as' => 'salesflow.warehousing.edit',
        'controller' => 'App\\Http\\Controllers\\app\\warehousingController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.warehousing.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/warehousing/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\warehousingController@update',
        'as' => 'salesflow.warehousing.update',
        'controller' => 'App\\Http\\Controllers\\app\\warehousingController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.inventory.allocated' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/inventory/allocated',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\inventoryController@allocated',
        'as' => 'salesflow.inventory.allocated',
        'controller' => 'App\\Http\\Controllers\\app\\inventoryController@allocated',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.inventory.allocate.user' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/inventory/allocate/user',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\inventoryController@allocate_user',
        'as' => 'salesflow.inventory.allocate.user',
        'controller' => 'App\\Http\\Controllers\\app\\inventoryController@allocate_user',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.inventory.allocate.items' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/inventory/allocate/{code}/items',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\inventoryController@allocate_items',
        'as' => 'salesflow.inventory.allocate.items',
        'controller' => 'App\\Http\\Controllers\\app\\inventoryController@allocate_items',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.settings.account' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/settings/account',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settingsController@account',
        'as' => 'salesflow.settings.account',
        'controller' => 'App\\Http\\Controllers\\app\\settingsController@account',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.settings.account.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/settings/account/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settingsController@update_account',
        'as' => 'salesflow.settings.account.update',
        'controller' => 'App\\Http\\Controllers\\app\\settingsController@update_account',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.settings.activity.log' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/settings/activity-log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settingsController@activity_log',
        'as' => 'salesflow.settings.activity.log',
        'controller' => 'App\\Http\\Controllers\\app\\settingsController@activity_log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.territories.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/territories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\territoriesController@index',
        'as' => 'salesflow.territories.index',
        'controller' => 'App\\Http\\Controllers\\app\\territoriesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/category/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@index',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@create',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@store',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@update',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\categoryController@delete',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\categoryController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.category.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@index',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@create',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/survey/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@store',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@show',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.show',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/survey/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@update',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\surveyController@delete',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\surveyController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/questions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@index',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/questions/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@create',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.create',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/survey/{code}/questions/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@store',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.store',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/questions/{questionID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@edit',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.edit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'salesflow/survey/{code}/questions/{questionID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@update',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'salesflow.survey.questions.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'salesflow/survey/{code}/questions/{questionID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\survey\\questionsController@delete',
        'controller' => 'App\\Http\\Controllers\\app\\survey\\questionsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/salesflow',
        'where' => 
        array (
        ),
        'as' => 'salesflow.survey.questions.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\propertywinguController@dashboard',
        'as' => 'propertywingu.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\propertywinguController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/properties',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@index',
        'as' => 'propertywingu.property.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@create',
        'as' => 'propertywingu.property.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@store',
        'as' => 'propertywingu.property.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@edit',
        'as' => 'propertywingu.property.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@update',
        'as' => 'propertywingu.property.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@show',
        'as' => 'propertywingu.property.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.remove.image' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/remove/image',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@remove_image',
        'as' => 'propertywingu.property.remove.image',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@remove_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.information' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/information',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@information',
        'as' => 'propertywingu.property.information',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.information.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{code}/information/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@update_information',
        'as' => 'propertywingu.property.information.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@update_information',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@delete',
        'as' => 'propertywingu.property.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.vacant' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/units/{code}/vacant',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@vacant',
        'as' => 'propertywingu.property.vacant',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@vacant',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.occupied' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/units/{code}/occupied',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@occupied',
        'as' => 'propertywingu.property.occupied',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@occupied',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.document.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/document/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@document_upload',
        'as' => 'propertywingu.property.document.upload',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@document_upload',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenants' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/tenants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@tenants',
        'as' => 'propertywingu.property.tenants',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\propertyController@tenants',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenants.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/tenants/{propertyCode}/{tenantID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@show',
        'as' => 'propertywingu.property.tenants.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenant.contactperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/tenant/contactperson',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@delete_contact_person',
        'as' => 'tenant.contactperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@index',
        'as' => 'propertywingu.property.leases',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.leases.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/add/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@create',
        'as' => 'propertywingu.property.leases.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.leases.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/store/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@store',
        'as' => 'propertywingu.property.leases.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\leasesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/units',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@index',
        'as' => 'propertywingu.property.units',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/units/add',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@create',
        'as' => 'propertywingu.property.units.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/units/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@store',
        'as' => 'propertywingu.property.units.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{pid}/units/{uid}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@edit',
        'as' => 'propertywingu.property.units.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.document' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/units/{uid}/upload_document',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@edit',
        'as' => 'propertywingu.property.units.document',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/units/{uid}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@update',
        'as' => 'propertywingu.property.units.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{pid}/units/{uid}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@delete',
        'as' => 'propertywingu.property.units.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.bulk.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/units/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@bulk',
        'as' => 'propertywingu.property.units.bulk.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.units.bulk.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/units/bulk/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@store_bulk',
        'as' => 'propertywingu.property.units.bulk.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\unitsController@store_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@index',
        'as' => 'propertywingu.property.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@create',
        'as' => 'propertywingu.property.invoice.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@store',
        'as' => 'propertywingu.property.invoice.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/rental/{invoiceID}/edit/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@edit',
        'as' => 'propertywingu.property.invoice.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/rental/{invoiceID}/update/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@update',
        'as' => 'propertywingu.property.invoice.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/{invoiceID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@show',
        'as' => 'propertywingu.property.invoice.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/{invoiceID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@delete',
        'as' => 'propertywingu.property.invoice.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.tenant.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/{tenantID}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@get_leases',
        'as' => 'propertywingu.property.invoice.tenant.leases',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@get_leases',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/{invoiceID}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@payments',
        'as' => 'propertywingu.property.invoice.payment',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@payments',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.create.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/bulk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@create_bulk',
        'as' => 'propertywingu.property.invoice.create.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@create_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.store.bulk' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/bulk/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@store_bulk',
        'as' => 'propertywingu.property.invoice.store.bulk',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@store_bulk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/invoices/{invoiceID}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@print',
        'as' => 'propertywingu.property.invoice.print',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\invoicesController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@index',
        'as' => 'propertywingu.property.payments',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/payments/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@create',
        'as' => 'propertywingu.property.payments.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/payments/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@store',
        'as' => 'propertywingu.property.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/payments/{paymentID}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@edit',
        'as' => 'propertywingu.property.payments.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/payments/{paymentID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@update',
        'as' => 'propertywingu.property.payments.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/payments/{paymentID}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@show',
        'as' => 'propertywingu.property.payments.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::ys6D0kY634HMQlni' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/retrive/{propertyCode}/invoice/{tenantID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@retrive_tenant_invoice',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@retrive_tenant_invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
        'as' => 'generated::ys6D0kY634HMQlni',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.delete.file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/payments/file/{fileID}/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@delete_file',
        'as' => 'propertywingu.property.payments.delete.file',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/payments/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@destroy',
        'as' => 'propertywingu.property.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\paymentsController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@index',
        'as' => 'propertywingu.property.utility.billing.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@create',
        'as' => 'propertywingu.property.utility.billing.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.prepare.utility.billing' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/prepare/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@prepare_bulk_billing',
        'as' => 'propertywingu.property.prepare.utility.billing',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@prepare_bulk_billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.record.bulk.reading' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/prepare/{utility}/utility/bill/{from}/{to}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@record_bulk_reading',
        'as' => 'propertywingu.property.record.bulk.reading',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@record_bulk_reading',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/utility/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@store',
        'as' => 'propertywingu.property.utility.billing.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/{invoiceID}/edit/utility',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@edit',
        'as' => 'propertywingu.property.utility.billing.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.calculate.utility.consumption' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/{invoiceID}/calculate/utility/consumption',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@calculate_consumption',
        'as' => 'propertywingu.property.calculate.utility.consumption',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@calculate_consumption',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.update.utility.consumption' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/{invoiceID}/update/utility/consumption',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@update_utility_billing',
        'as' => 'propertywingu.property.update.utility.consumption',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@update_utility_billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/{invoiceID}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@show',
        'as' => 'propertywingu.property.utility.billing.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/{invoiceID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@delete',
        'as' => 'propertywingu.property.utility.billing.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.billing.tenant.leases' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/{tenantID}/leases',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@get_leases',
        'as' => 'propertywingu.property.utility.billing.tenant.leases',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@get_leases',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.payment' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/{invoiceID}/payments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@pay_utility',
        'as' => 'propertywingu.property.utility.payment',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@pay_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.compose.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/{invoiceID}/compose/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@compose_mail',
        'as' => 'propertywingu.property.utility.compose.mail',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@compose_mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utility.send.mail' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/{propertyCode}/utility/compose/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@send_mail',
        'as' => 'propertywingu.property.utility.send.mail',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@send_mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/settings/{code}/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\invoiceSettingsController@edit',
        'as' => 'propertywingu.property.invoice.settings',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\invoiceSettingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.invoice.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/settings/{code}/invoice/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\invoiceSettingsController@update',
        'as' => 'propertywingu.property.invoice.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\invoiceSettingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/settings/{code}/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\creditnoteSettingsController@edit',
        'as' => 'propertywingu.property.creditnote.settings',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\creditnoteSettingsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/settings/{code}/invoice/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\creditnoteSettingsController@update',
        'as' => 'propertywingu.property.creditnote.settings.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\creditnoteSettingsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.billing.process' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/rental/billing/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@bulk_process',
        'as' => 'propertywingu.property.billing.process',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@bulk_process',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.billing.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/rental/{code}/billing/{datefrom}/{dateto}/{type}/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@history',
        'as' => 'propertywingu.property.billing.history',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.billing.history.search' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/rental/{code}/billing/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@search_history',
        'as' => 'propertywingu.property.billing.history.search',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@search_history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.billing.history.search.results' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/rental/billing/search/results',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@search_results',
        'as' => 'propertywingu.property.billing.history.search.results',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@search_results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.billing.missing.invoice' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/property/billing/missing/invoice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@missing_billings',
        'as' => 'propertywingu.property.billing.missing.invoice',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\rentController@missing_billings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.documents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/documents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@index',
        'as' => 'propertywingu.property.documents',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.gallery' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/gallery',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\galleryController@index',
        'as' => 'propertywingu.property.gallery',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\galleryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.integration.settings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/payment/{code}/integration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@index',
        'as' => 'propertywingu.property.payment.integration.settings',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.integration.settings.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/payment/{code}/integration/{integrationID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@delete',
        'as' => 'propertywingu.property.payment.integration.settings.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.integration.settings.activation' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/payment/{code}/integration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@activation',
        'as' => 'propertywingu.property.payment.integration.settings.activation',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentIntegrationController@activation',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesaapi.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/mpesaapi',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@api',
        'as' => 'propertywingu.property.mpesaapi.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@api',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesaapi.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/mpesaapi/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@api_update',
        'as' => 'propertywingu.property.mpesaapi.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@api_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesatill.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/mpesatill/ ',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@till',
        'as' => 'propertywingu.property.mpesatill.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@till',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesatill.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/mpesatill/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@till_update',
        'as' => 'propertywingu.property.mpesatill.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@till_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesapaybill.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/mpesapaybill',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@paybill',
        'as' => 'propertywingu.property.mpesapaybill.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@paybill',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.mpesapaybill.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/mpesapaybill/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@paybill_update',
        'as' => 'propertywingu.property.mpesapaybill.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\mpesaController@paybill_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank1.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/bank1',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'as' => 'propertywingu.property.bank1.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank1.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/bank1/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank1_update',
        'as' => 'propertywingu.property.bank1.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank1_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank2.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/bank2',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'as' => 'propertywingu.property.bank2.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank2.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/bank2/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank2_update',
        'as' => 'propertywingu.property.bank2.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank2_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank3.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/bank3',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'as' => 'propertywingu.property.bank3.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank3.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/bank3/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank3_update',
        'as' => 'propertywingu.property.bank3.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank3_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank4.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/bank4',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'as' => 'propertywingu.property.bank4.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank4.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/bank4/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank4_update',
        'as' => 'propertywingu.property.bank4.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank4_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank5.integration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{getwayID}/bank5',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'as' => 'propertywingu.property.bank5.integration',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.bank5.integration.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/integration/{code}/bank5/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank5_update',
        'as' => 'propertywingu.property.bank5.integration.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\integration\\payments\\bankController@bank5_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.images' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/images',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@index',
        'as' => 'propertywingu.property.images',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.images.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/images/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@upload_image',
        'as' => 'propertywingu.property.images.upload',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@upload_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.images.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/images/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@delete',
        'as' => 'propertywingu.property.images.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\imagesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.documents.upload' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/documents/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@upload_document',
        'as' => 'propertywingu.property.documents.upload',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@upload_document',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.documents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/documents/{documentID}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@update',
        'as' => 'propertywingu.property.documents.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.documents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/documents/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@delete',
        'as' => 'propertywingu.property.documents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\documentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@index',
        'as' => 'propertywingu.property.expense',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@create',
        'as' => 'propertywingu.property.expense.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@store',
        'as' => 'propertywingu.property.expense.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@edit',
        'as' => 'propertywingu.property.expense.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@update',
        'as' => 'propertywingu.property.expense.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.delete.file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/{parentID}/file/{fileID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@delete_file',
        'as' => 'propertywingu.property.expense.delete.file',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@delete_file',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/expenses/{parentID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@destroy',
        'as' => 'propertywingu.property.expense.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\expenseController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@index',
        'as' => 'propertywingu.property.creditnote.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@create',
        'as' => 'propertywingu.property.creditnote.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@store',
        'as' => 'propertywingu.property.creditnote.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@edit',
        'as' => 'propertywingu.property.creditnote.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@update',
        'as' => 'propertywingu.property.creditnote.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@delete_creditnote',
        'as' => 'propertywingu.property.creditnote.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@delete_creditnote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@show',
        'as' => 'propertywingu.property.creditnote.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.pdf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/pdf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@pdf',
        'as' => 'propertywingu.property.creditnote.pdf',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@pdf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.print' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/print',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@print',
        'as' => 'propertywingu.property.creditnote.print',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@print',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.apply.credit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/creditnote/apply/credit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@apply_credit',
        'as' => 'propertywingu.property.creditnote.apply.credit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@apply_credit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.mail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/creditnote/{code}/mail',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@mail',
        'as' => 'propertywingu.property.creditnote.mail',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@mail',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.creditnote.mail.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/creditnote/mail/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@send',
        'as' => 'propertywingu.property.creditnote.mail.send',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\creditnoteController@send',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/reports',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\reportsController@dashboard',
        'as' => 'propertywingu.property.reports',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\reportsController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.profitandloss' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/reports/profitandloss',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\profitandlossController@report',
        'as' => 'propertywingu.property.reports.profitandloss',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\profitandlossController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.profitandloss.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/report/profilandloss/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\profitandlossController@generate',
        'as' => 'propertywingu.property.reports.profitandloss.generate',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\profitandlossController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.expensesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/reports/expensesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\expensesummaryController@report',
        'as' => 'propertywingu.property.reports.expensesummary',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\expensesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.expensesummary.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/report/expensesummary/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\expensesummaryController@generate',
        'as' => 'propertywingu.property.reports.expensesummary.generate',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\expensesummaryController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.incomesummary' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/reports/incomesummary',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\incomesummaryController@report',
        'as' => 'propertywingu.property.reports.incomesummary',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\incomesummaryController@report',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.reports.incomesummary.generate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/{propertyCode}/report/incomesummary/generate/{to}/{from}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\incomesummaryController@generate',
        'as' => 'propertywingu.property.reports.incomesummary.generate',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\reports\\incomesummaryController@generate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.lisitng' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/listings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@index',
        'as' => 'propertywingu.property.lisitng',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/property/{code}/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@add_to_list',
        'as' => 'list.property',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@add_to_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@edit',
        'as' => 'list.property.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/marketing/property/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@update',
        'as' => 'list.property.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@show',
        'as' => 'list.property.details',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{propertyCode}/{listID}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@cancel_listing',
        'as' => 'list.property.cancel',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@cancel_listing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.delete.image' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{code}/image/{imageID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@delete_image',
        'as' => 'list.property.delete.image',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@delete_image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.image.cover' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{code}/image/{imageID}/cover',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@image_cover',
        'as' => 'list.property.image.cover',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@image_cover',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'list.property.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/marketing/property/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@delete',
        'as' => 'list.property.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\listingController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.inquiry' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/inquiry',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\inquiryController@index',
        'as' => 'propertywingu.property.inquiry',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\marketing\\inquiryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenantsperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/delete-vendor-person/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@delete_vendor_person',
        'as' => 'tenantsperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@delete_vendor_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@trash',
        'as' => 'tenants.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.notes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{propertyCode}/{tenantID}/notes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@index',
        'as' => 'tenants.notes',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.notes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenants/notes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@store',
        'as' => 'tenants.notes.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.notes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenants/notes/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@update',
        'as' => 'tenants.notes.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.notes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{code}/notes/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@delete',
        'as' => 'tenants.notes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\notesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.invoice.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{propertyCode}/{tenantID}/invoices',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\invoicesController@index',
        'as' => 'tenants.invoice.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\invoicesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.statement' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{code}/statement',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@show',
        'as' => 'tenants.statement',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\tenantsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.units.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{propertyCode}/{tenantID}/units',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\unitsController@index',
        'as' => 'tenants.units.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\unitsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenant/{propertyCode}/{tenantID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@index',
        'as' => 'propertywingu.property.tenant.lease',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenant/{propertyCode}/{tenantID}/{leaseID}/lease/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@show',
        'as' => 'propertywingu.property.tenant.lease.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenant/{propertyCode}/{tenantID}/edit/{leaseID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@edit',
        'as' => 'propertywingu.property.tenant.lease.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenant/update/{leaseID}/lease',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@update',
        'as' => 'propertywingu.property.tenant.lease.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenant/lease/{leaseID}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@delete_lease',
        'as' => 'propertywingu.property.tenant.lease.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@delete_lease',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.add.utility' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenant/lease/utility/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@add_utility',
        'as' => 'propertywingu.property.tenant.lease.add.utility',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@add_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.tenant.lease.update.utility' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenant/lease/utility/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@update_utility',
        'as' => 'propertywingu.property.tenant.lease.update.utility',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@update_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.leases.delete.utility' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenant/lease/{leaseID}/utility/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@delete_utility',
        'as' => 'propertywingu.property.leases.delete.utility',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@delete_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.lease.terminate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenant/lease/terminate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@lease_termination',
        'as' => 'propertywingu.property.lease.terminate',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\leasesController@lease_termination',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.billing.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utility/{code}/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@index',
        'as' => 'utility.billing.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.billing.hold' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utility/billing/hold',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@hold_utility',
        'as' => 'utility.billing.hold',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@hold_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.readings' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utility/{code}/readings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_readings',
        'as' => 'utility.readings',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_readings',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.bill.readings' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utility/bill/readings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@bill_utility',
        'as' => 'utility.bill.readings',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@bill_utility',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.bill.search' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utility/bill/search',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_search',
        'as' => 'utility.bill.search',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_search',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.billing.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utility/{propertyCode}/billing/{periodID}/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@history',
        'as' => 'utility.billing.history',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'utility.billing.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utility/billing/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_update',
        'as' => 'utility.billing.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\accounting\\utilityController@utility_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/agents',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@index',
        'as' => 'propertywingu.property.agents',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/agents/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@create',
        'as' => 'propertywingu.property.agents.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/agents/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@store',
        'as' => 'propertywingu.property.agents.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/agents/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@edit',
        'as' => 'propertywingu.property.agents.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/agents/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@update',
        'as' => 'propertywingu.property.agents.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.agents.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/agents/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@delete',
        'as' => 'propertywingu.property.agents.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\agentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/supplier',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@index',
        'as' => 'propertywingu.property.supplier',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/supplier/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@create',
        'as' => 'propertywingu.property.supplier.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/supplier/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@store',
        'as' => 'propertywingu.property.supplier.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/supplier/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@edit',
        'as' => 'propertywingu.property.supplier.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/supplier/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@update',
        'as' => 'propertywingu.property.supplier.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.supplier.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/supplier/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@delete',
        'as' => 'propertywingu.property.supplier.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\supplierController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@index',
        'as' => 'landlord.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@create',
        'as' => 'landlord.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/post-landlords',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@store',
        'as' => 'landlord.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@edit',
        'as' => 'landlord.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/landlord/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@update',
        'as' => 'landlord.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@show',
        'as' => 'landlord.show',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@delete',
        'as' => 'landlord.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlordperson.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/{code}/delete-contact-person',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@delete_contact_person',
        'as' => 'landlordperson.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@delete_contact_person',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.trash.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/{code}/trash',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@trash',
        'as' => 'landlord.trash.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\landlordController@trash',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@import',
        'as' => 'landlord.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/landlord/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@import_contact',
        'as' => 'landlord.import',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@import_contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@download_import_sample',
        'as' => 'landlord.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'landlord.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/landlord/export',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@export',
        'as' => 'landlord.export',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\landlords\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@index',
        'as' => 'tenants.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@create',
        'as' => 'tenants.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenants/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@store',
        'as' => 'tenants.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@edit',
        'as' => 'tenants.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenants/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@update',
        'as' => 'tenants.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@delete',
        'as' => 'tenants.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\tenantsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.import.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@index',
        'as' => 'tenants.import.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.import' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/tenants/post/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@import',
        'as' => 'tenants.import',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@import',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.download.sample.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/download/import/sample',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\importController@download_import_sample',
        'as' => 'tenants.download.sample.import',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\property\\tenants\\importController@download_import_sample',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'tenants.export' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/tenants/export',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@export',
        'as' => 'tenants.export',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\tenants\\importController@export',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.maintenance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@index',
        'as' => 'propertywingu.property.maintenance',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.maintenance.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@create',
        'as' => 'propertywingu.property.maintenance.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.maintenance.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/maintenance/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@store',
        'as' => 'propertywingu.property.maintenance.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.maintenance.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@edit',
        'as' => 'propertywingu.property.maintenance.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pm.maintenance.get.units' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/property/units/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_units',
        'as' => 'pm.maintenance.get.units',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_units',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pm.maintenance.get.units.tenant' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/property/units/tenant/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_tenant',
        'as' => 'pm.maintenance.get.units.tenant',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_tenant',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pm.maintenance.get.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/get/category/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_maintenance_category',
        'as' => 'pm.maintenance.get.category',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceController@get_maintenance_category',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'maintenance.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@index',
        'as' => 'maintenance.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'maintenance.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/maintenance/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@store',
        'as' => 'maintenance.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'maintenance.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@edit',
        'as' => 'maintenance.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'maintenance.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/maintenance/category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@update',
        'as' => 'maintenance.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'maintenance.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/maintenance/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@delete',
        'as' => 'maintenance.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\maintenance\\maintenanceCategoryController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/taxes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@index',
        'as' => 'propertywingu.property.taxes',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/taxes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@store',
        'as' => 'propertywingu.property.taxes.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/taxes/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@edit',
        'as' => 'propertywingu.property.taxes.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/taxes/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@update',
        'as' => 'propertywingu.property.taxes.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/taxes/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@delete',
        'as' => 'propertywingu.property.taxes.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/taxes/express',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@express_list',
        'as' => 'propertywingu.property.taxes.express',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.taxes.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/taxes/express/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@store_express',
        'as' => 'propertywingu.property.taxes.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\taxesController@store_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/income/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@index',
        'as' => 'propertywingu.property.income.category',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@create',
        'as' => 'propertywingu.property.income.category.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/income/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@store',
        'as' => 'propertywingu.property.income.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/income/category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@edit',
        'as' => 'propertywingu.property.income.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/income/category/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@update',
        'as' => 'propertywingu.property.income.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/income/category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@delete',
        'as' => 'propertywingu.property.income.category.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::zFH1caPDCMxIeX0u' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/express/income/category/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@express',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
        'as' => 'generated::zFH1caPDCMxIeX0u',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.income.express.category' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/express/income/category/get',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@get_express',
        'as' => 'propertywingu.property.income.express.category',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\incomeController@get_express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/payment/methods',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@index',
        'as' => 'propertywingu.property.payment.method',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.method.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/payment/methods/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@store',
        'as' => 'propertywingu.property.payment.method.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.method.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/payment/methods/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@update',
        'as' => 'propertywingu.property.payment.method.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.method.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/payment/methods/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@delete',
        'as' => 'propertywingu.property.payment.method.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.mode.express' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/express/payment/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@express_list',
        'as' => 'propertywingu.property.payment.mode.express',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@express_list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.payment.mode.express.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/express/payment/modes/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@express_store',
        'as' => 'propertywingu.property.payment.mode.express.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\paymentMethodsController@express_store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/expense/category',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@index',
        'as' => 'propertywingu.property.expense.category.index',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@store',
        'as' => 'propertywingu.property.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/expense-category/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@edit',
        'as' => 'propertywingu.property.expense.category.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/expense-category/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@update',
        'as' => 'propertywingu.property.expense.category.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.expense.category.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/expense-category/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@destroy',
        'as' => 'propertywingu.property.expense.category.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.express.expense.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/express/expense/category/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@express',
        'as' => 'propertywingu.property.express.expense.category.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@express',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.express.expense.category.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/express/expense/category/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@list',
        'as' => 'propertywingu.property.express.expense.category.list',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\expenseCategoryController@list',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utilities',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@index',
        'as' => 'propertywingu.property.utilities',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utilities/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@create',
        'as' => 'propertywingu.property.utilities.create',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utilities/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@store',
        'as' => 'propertywingu.property.utilities.store',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utilities/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@edit',
        'as' => 'propertywingu.property.utilities.edit',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'propertywingu/utilities/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@update',
        'as' => 'propertywingu.property.utilities.update',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'propertywingu.property.utilities.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'propertywingu/utilities/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@delete',
        'as' => 'propertywingu.property.utilities.delete',
        'controller' => 'App\\Http\\Controllers\\app\\propertywingu\\settings\\utilitiesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/propertywingu',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.manager.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventManagerController@dashboard',
        'as' => 'events.manager.dashboard',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventManagerController@dashboard',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@index',
        'as' => 'events',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@create',
        'as' => 'events.create',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'eventmanager/events/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@store',
        'as' => 'events.store',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@edit',
        'as' => 'events.edit',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'eventmanager/events/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@update',
        'as' => 'events.update',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@show',
        'as' => 'events.show',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.speakers' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/speakers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@speakers',
        'as' => 'events.speakers',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@speakers',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.sponsors' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/sponsors',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@index',
        'as' => 'events.sponsors',
        'controller' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.sponsors.store' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/sponsors/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@store',
        'as' => 'events.sponsors.store',
        'controller' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.sponsors.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/sponsors/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@delete',
        'as' => 'events.sponsors.delete',
        'controller' => 'App\\Http\\Controllers\\app\\events\\sponsorsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.tickets' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/tickets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@tickets',
        'as' => 'events.tickets',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@tickets',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.ticket.sold' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/ticket-sold',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@ticket_sold',
        'as' => 'events.ticket.sold',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@ticket_sold',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.attendance' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/attendance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\eventsController@attendance',
        'as' => 'events.attendance',
        'controller' => 'App\\Http\\Controllers\\app\\events\\eventsController@attendance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.schedules' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/schedules',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\schedulesController@index',
        'as' => 'events.schedules',
        'controller' => 'App\\Http\\Controllers\\app\\events\\schedulesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'events.schedule.sessions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'eventmanager/events/{code}/schedules/{schedule}/sessions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\events\\schedulesController@sessions',
        'as' => 'events.schedule.sessions',
        'controller' => 'App\\Http\\Controllers\\app\\events\\schedulesController@sessions',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/eventmanager',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.business.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/business/profile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.business.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.business.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/business/profile/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'as' => 'settings.business.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.business.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/business/profile/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@update',
        'as' => 'settings.business.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.business.delete.logo' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/business/profile/{code}/delete/logo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@delete_logo',
        'as' => 'settings.business.delete.logo',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\business\\businessController@delete_logo',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.users.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@index',
        'as' => 'settings.users.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.users.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@create',
        'as' => 'settings.users.create',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.users.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/users/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@store',
        'as' => 'settings.users.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.users.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/users/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@edit',
        'as' => 'settings.users.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.users.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/users/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@update',
        'as' => 'settings.users.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\UserController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@index',
        'as' => 'language.index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{code}/{section}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@show',
        'as' => 'language.show',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.translate.section' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/translate/section',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@post_show',
        'as' => 'language.translate.section',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@post_show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.translate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/translate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@translate',
        'as' => 'language.translate',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@translate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@edit',
        'as' => 'language.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@update',
        'as' => 'language.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.defaultLanguage' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/settings/defaultLanguage',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@defaultLanguage',
        'as' => 'language.defaultLanguage',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\language\\languageController@defaultLanguage',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/language/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@store',
        'as' => 'language.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'language.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/language/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@destroy',
        'as' => 'language.destroy',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\Language\\LanguageController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@index',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
        'as' => 'settings.roles.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{code}/show',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@show',
        'as' => 'settings.roles.show',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@create',
        'as' => 'settings.roles.create',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/roles/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@store',
        'as' => 'settings.roles.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{code}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@edit',
        'as' => 'settings.roles.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/roles/{code}/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@update',
        'as' => 'settings.roles.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.roles.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/roles/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'permission:delete-roles',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@delete',
        'as' => 'settings.roles.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\users\\rolesController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.applications' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/applications',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@index',
        'as' => 'settings.applications',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.application.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/application/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@delete',
        'as' => 'settings.application.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.applications.billing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/application/{applicationID}/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@billing',
        'as' => 'settings.applications.billing',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\applications\\applicationController@billing',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.billing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/account/billing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\billingController@index',
        'as' => 'settings.billing',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\billingController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@index',
        'as' => 'settings.integrations.payments',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@store',
        'as' => 'settings.integrations.payments.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.status' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations{code}/status/{statusID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@status',
        'as' => 'settings.integrations.payments.status',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@status',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@delete',
        'as' => 'settings.integrations.payments.delete',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paymentsController@delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.pesapal.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/pesapal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@edit',
        'as' => 'settings.integrations.payments.pesapal.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.pesapal.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/pesapal/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@update',
        'as' => 'settings.integrations.payments.pesapal.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\pesapalController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.paypal.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/paypal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@edit',
        'as' => 'settings.integrations.payments.paypal.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.paypal.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/paypal/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@update',
        'as' => 'settings.integrations.payments.paypal.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\paypalController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.kepler9' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/kepler9',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@edit',
        'as' => 'settings.payments.integrations.kepler9',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.kepler9.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/kepler9/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@update',
        'as' => 'settings.integrations.payments.kepler9.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\kepler9Controller@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.ipay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/ipay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@edit',
        'as' => 'settings.payments.integrations.ipay',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.ipay.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/ipay/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@update',
        'as' => 'settings.payments.integrations.ipay.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\ipayController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.mpesa.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@edit',
        'as' => 'settings.integrations.payments.mpesa.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.payments.mpesa.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@update',
        'as' => 'settings.integrations.payments.mpesa.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.daraja.register.urls' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/daraja/register/url/{businessID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@registerUrls',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\darajaController@registerUrls',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
        'as' => 'settings.integrations.daraja.register.urls',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.phonenumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-phone-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@phone_number',
        'as' => 'settings.payments.integrations.mpesa.phonenumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@phone_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.phonenumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-phone-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@update_phone_number',
        'as' => 'settings.payments.integrations.mpesa.phonenumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\phonenumberController@update_phone_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.tillnumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-till-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@till_number',
        'as' => 'settings.payments.integrations.mpesa.tillnumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@till_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.tillnumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-till-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@update_till_number',
        'as' => 'settings.payments.integrations.mpesa.tillnumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\tillnumberController@update_till_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.paybillnumber' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-paybill-number',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@paybill_number',
        'as' => 'settings.payments.integrations.mpesa.paybillnumber',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@paybill_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.payments.integrations.mpesa.paybillnumber.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/payment/integrations/{code}/mpesa-paybill-number/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@update_paybill_number',
        'as' => 'settings.payments.integrations.mpesa.paybillnumber.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\payments\\mpesa\\paybillnumberController@update_paybill_number',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@index',
        'as' => 'settings.integrations.telephony',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@store',
        'as' => 'settings.integrations.telephony.store',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\telephonyController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony.twilio.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony/{code}/twilio',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@edit',
        'as' => 'settings.integrations.telephony.twilio.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony.twilio.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/{code}/twilio/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@update',
        'as' => 'settings.integrations.telephony.twilio.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\twilioController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony.africasTalking.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/integrations/telephony/{code}/africasTalking',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@edit',
        'as' => 'settings.integrations.telephony.africasTalking.edit',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@edit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.integrations.telephony.africasTalking.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'settings/integrations/telephony/{code}/africasTalking/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@update',
        'as' => 'settings.integrations.telephony.africasTalking.update',
        'controller' => 'App\\Http\\Controllers\\app\\settings\\integrations\\telephony\\africasTalkingController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'settings.account.subscription' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'settings/subscription',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@subscription',
        'as' => 'settings.account.subscription',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@subscription',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/settings',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'winguplus.apps' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'winguplus/apps',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@apps',
        'as' => 'winguplus.apps',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@apps',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/winguplus',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'winguplus.apps.install' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'winguplus/apps/install',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@install',
        'as' => 'winguplus.apps.install',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@install',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/winguplus',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.subscription.paypal' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscriptions/paypal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@payment',
        'as' => 'wingu.subscription.paypal',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@payment',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.subscription.paypal.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/paypal/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@callback',
        'as' => 'wingu.subscription.paypal.callback',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.subscription.paypal.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'subscriptions/paypal/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@cancel',
        'as' => 'wingu.subscription.paypal.cancel',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\paypalController@cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.application.payment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'application/ipay/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\ipayController@callback',
        'as' => 'wingu.application.payment',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\ipayController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::LMXXBfzmxJBIuLQP' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/email/{mailCode}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@email',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@email',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::LMXXBfzmxJBIuLQP',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::nNaP2jRDlnzdLlaw' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/invoice/{trackCode}/{invoiceID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@invoice',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@invoice',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::nNaP2jRDlnzdLlaw',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::7y4ZLgcsif4rIDNq' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/salesorder/{trackCode}/{salesID}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@salesorder',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@salesorder',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::7y4ZLgcsif4rIDNq',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::UjWsAiOZsj4XhVFz' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'track/quote/{trackCode}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@quote',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\trackerController@quote',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::UjWsAiOZsj4XhVFz',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::3oZm5WuXGYHNMPMa' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'lab/mailchimp',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\lab\\mailchimpController@index',
        'controller' => 'App\\Http\\Controllers\\lab\\mailchimpController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::3oZm5WuXGYHNMPMa',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'callback.ipay' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'callbacks/ipay/{business_code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@ipay',
        'as' => 'callback.ipay',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@ipay',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'daraja.payment.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'callback/daraja/{business_code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\darajaController@callback',
        'as' => 'daraja.payment.callback',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\darajaController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'daraja.payment.cancel.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'callback/daraja/{business_code}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\darajaController@cancel',
        'as' => 'daraja.payment.cancel.callback',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\darajaController@cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.application.flutterwave.pay' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'application/flutterwave/pay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\flutterwaveController@pay',
        'as' => 'wingu.application.flutterwave.pay',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\flutterwaveController@pay',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.application.flutterwave.callback' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'application/flutterwave/callback',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\flutterwaveController@callback',
        'as' => 'wingu.application.flutterwave.callback',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\flutterwaveController@callback',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::FPghIZsAI8DgTc9p' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ticket',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@tickets',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@tickets',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::FPghIZsAI8DgTc9p',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'wingu.ticket.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ticket/{ticketCode}/details',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@ticket_details',
        'as' => 'wingu.ticket.details',
        'controller' => 'App\\Http\\Controllers\\app\\wingu\\winguplusController@ticket_details',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'callback.pesapal' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'callbacks/pesapal/{business_code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@pesapal',
        'as' => 'callback.pesapal',
        'controller' => 'App\\Http\\Controllers\\app\\callbacks\\callbacksController@pesapal',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
  ),
)
);
